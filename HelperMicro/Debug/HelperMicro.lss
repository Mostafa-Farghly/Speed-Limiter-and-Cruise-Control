
HelperMicro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001db4  00001e28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001db4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00001278  00000000  00000000  00001e44  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ac7  00000000  00000000  000030bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00003b83  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00003cc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00003e33  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00005a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00006967  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00007714  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028e  00000000  00000000  00007874  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00007b02  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000082d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 eb       	ldi	r30, 0xB4	; 180
      a0:	fd e1       	ldi	r31, 0x1D	; 29
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ac 31       	cpi	r26, 0x1C	; 28
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
      b2:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <main>
      b6:	0c 94 d8 0e 	jmp	0x1db0	; 0x1db0 <_exit>

000000ba <__bad_interrupt>:
      ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <__fixunssfsi>:
      be:	ef 92       	push	r14
      c0:	ff 92       	push	r15
      c2:	0f 93       	push	r16
      c4:	1f 93       	push	r17
      c6:	7b 01       	movw	r14, r22
      c8:	8c 01       	movw	r16, r24
      ca:	20 e0       	ldi	r18, 0x00	; 0
      cc:	30 e0       	ldi	r19, 0x00	; 0
      ce:	40 e0       	ldi	r20, 0x00	; 0
      d0:	5f e4       	ldi	r21, 0x4F	; 79
      d2:	0e 94 5f 03 	call	0x6be	; 0x6be <__gesf2>
      d6:	88 23       	and	r24, r24
      d8:	8c f0       	brlt	.+34     	; 0xfc <__fixunssfsi+0x3e>
      da:	c8 01       	movw	r24, r16
      dc:	b7 01       	movw	r22, r14
      de:	20 e0       	ldi	r18, 0x00	; 0
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	40 e0       	ldi	r20, 0x00	; 0
      e4:	5f e4       	ldi	r21, 0x4F	; 79
      e6:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__subsf3>
      ea:	0e 94 bf 03 	call	0x77e	; 0x77e <__fixsfsi>
      ee:	9b 01       	movw	r18, r22
      f0:	ac 01       	movw	r20, r24
      f2:	20 50       	subi	r18, 0x00	; 0
      f4:	30 40       	sbci	r19, 0x00	; 0
      f6:	40 40       	sbci	r20, 0x00	; 0
      f8:	50 48       	sbci	r21, 0x80	; 128
      fa:	06 c0       	rjmp	.+12     	; 0x108 <__fixunssfsi+0x4a>
      fc:	c8 01       	movw	r24, r16
      fe:	b7 01       	movw	r22, r14
     100:	0e 94 bf 03 	call	0x77e	; 0x77e <__fixsfsi>
     104:	9b 01       	movw	r18, r22
     106:	ac 01       	movw	r20, r24
     108:	b9 01       	movw	r22, r18
     10a:	ca 01       	movw	r24, r20
     10c:	1f 91       	pop	r17
     10e:	0f 91       	pop	r16
     110:	ff 90       	pop	r15
     112:	ef 90       	pop	r14
     114:	08 95       	ret

00000116 <_fpadd_parts>:
     116:	a0 e0       	ldi	r26, 0x00	; 0
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	e1 e9       	ldi	r30, 0x91	; 145
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	0c 94 a1 0e 	jmp	0x1d42	; 0x1d42 <__prologue_saves__>
     122:	dc 01       	movw	r26, r24
     124:	2b 01       	movw	r4, r22
     126:	fa 01       	movw	r30, r20
     128:	9c 91       	ld	r25, X
     12a:	92 30       	cpi	r25, 0x02	; 2
     12c:	08 f4       	brcc	.+2      	; 0x130 <_fpadd_parts+0x1a>
     12e:	39 c1       	rjmp	.+626    	; 0x3a2 <_fpadd_parts+0x28c>
     130:	eb 01       	movw	r28, r22
     132:	88 81       	ld	r24, Y
     134:	82 30       	cpi	r24, 0x02	; 2
     136:	08 f4       	brcc	.+2      	; 0x13a <_fpadd_parts+0x24>
     138:	33 c1       	rjmp	.+614    	; 0x3a0 <_fpadd_parts+0x28a>
     13a:	94 30       	cpi	r25, 0x04	; 4
     13c:	69 f4       	brne	.+26     	; 0x158 <_fpadd_parts+0x42>
     13e:	84 30       	cpi	r24, 0x04	; 4
     140:	09 f0       	breq	.+2      	; 0x144 <_fpadd_parts+0x2e>
     142:	2f c1       	rjmp	.+606    	; 0x3a2 <_fpadd_parts+0x28c>
     144:	11 96       	adiw	r26, 0x01	; 1
     146:	9c 91       	ld	r25, X
     148:	11 97       	sbiw	r26, 0x01	; 1
     14a:	89 81       	ldd	r24, Y+1	; 0x01
     14c:	98 17       	cp	r25, r24
     14e:	09 f4       	brne	.+2      	; 0x152 <_fpadd_parts+0x3c>
     150:	28 c1       	rjmp	.+592    	; 0x3a2 <_fpadd_parts+0x28c>
     152:	a4 e1       	ldi	r26, 0x14	; 20
     154:	b1 e0       	ldi	r27, 0x01	; 1
     156:	25 c1       	rjmp	.+586    	; 0x3a2 <_fpadd_parts+0x28c>
     158:	84 30       	cpi	r24, 0x04	; 4
     15a:	09 f4       	brne	.+2      	; 0x15e <_fpadd_parts+0x48>
     15c:	21 c1       	rjmp	.+578    	; 0x3a0 <_fpadd_parts+0x28a>
     15e:	82 30       	cpi	r24, 0x02	; 2
     160:	a9 f4       	brne	.+42     	; 0x18c <_fpadd_parts+0x76>
     162:	92 30       	cpi	r25, 0x02	; 2
     164:	09 f0       	breq	.+2      	; 0x168 <_fpadd_parts+0x52>
     166:	1d c1       	rjmp	.+570    	; 0x3a2 <_fpadd_parts+0x28c>
     168:	9a 01       	movw	r18, r20
     16a:	ad 01       	movw	r20, r26
     16c:	88 e0       	ldi	r24, 0x08	; 8
     16e:	ea 01       	movw	r28, r20
     170:	09 90       	ld	r0, Y+
     172:	ae 01       	movw	r20, r28
     174:	e9 01       	movw	r28, r18
     176:	09 92       	st	Y+, r0
     178:	9e 01       	movw	r18, r28
     17a:	81 50       	subi	r24, 0x01	; 1
     17c:	c1 f7       	brne	.-16     	; 0x16e <_fpadd_parts+0x58>
     17e:	e2 01       	movw	r28, r4
     180:	89 81       	ldd	r24, Y+1	; 0x01
     182:	11 96       	adiw	r26, 0x01	; 1
     184:	9c 91       	ld	r25, X
     186:	89 23       	and	r24, r25
     188:	81 83       	std	Z+1, r24	; 0x01
     18a:	08 c1       	rjmp	.+528    	; 0x39c <_fpadd_parts+0x286>
     18c:	92 30       	cpi	r25, 0x02	; 2
     18e:	09 f4       	brne	.+2      	; 0x192 <_fpadd_parts+0x7c>
     190:	07 c1       	rjmp	.+526    	; 0x3a0 <_fpadd_parts+0x28a>
     192:	12 96       	adiw	r26, 0x02	; 2
     194:	2d 90       	ld	r2, X+
     196:	3c 90       	ld	r3, X
     198:	13 97       	sbiw	r26, 0x03	; 3
     19a:	eb 01       	movw	r28, r22
     19c:	8a 81       	ldd	r24, Y+2	; 0x02
     19e:	9b 81       	ldd	r25, Y+3	; 0x03
     1a0:	14 96       	adiw	r26, 0x04	; 4
     1a2:	ad 90       	ld	r10, X+
     1a4:	bd 90       	ld	r11, X+
     1a6:	cd 90       	ld	r12, X+
     1a8:	dc 90       	ld	r13, X
     1aa:	17 97       	sbiw	r26, 0x07	; 7
     1ac:	ec 80       	ldd	r14, Y+4	; 0x04
     1ae:	fd 80       	ldd	r15, Y+5	; 0x05
     1b0:	0e 81       	ldd	r16, Y+6	; 0x06
     1b2:	1f 81       	ldd	r17, Y+7	; 0x07
     1b4:	91 01       	movw	r18, r2
     1b6:	28 1b       	sub	r18, r24
     1b8:	39 0b       	sbc	r19, r25
     1ba:	b9 01       	movw	r22, r18
     1bc:	37 ff       	sbrs	r19, 7
     1be:	04 c0       	rjmp	.+8      	; 0x1c8 <_fpadd_parts+0xb2>
     1c0:	66 27       	eor	r22, r22
     1c2:	77 27       	eor	r23, r23
     1c4:	62 1b       	sub	r22, r18
     1c6:	73 0b       	sbc	r23, r19
     1c8:	60 32       	cpi	r22, 0x20	; 32
     1ca:	71 05       	cpc	r23, r1
     1cc:	0c f0       	brlt	.+2      	; 0x1d0 <_fpadd_parts+0xba>
     1ce:	61 c0       	rjmp	.+194    	; 0x292 <_fpadd_parts+0x17c>
     1d0:	12 16       	cp	r1, r18
     1d2:	13 06       	cpc	r1, r19
     1d4:	6c f5       	brge	.+90     	; 0x230 <_fpadd_parts+0x11a>
     1d6:	37 01       	movw	r6, r14
     1d8:	48 01       	movw	r8, r16
     1da:	06 2e       	mov	r0, r22
     1dc:	04 c0       	rjmp	.+8      	; 0x1e6 <_fpadd_parts+0xd0>
     1de:	96 94       	lsr	r9
     1e0:	87 94       	ror	r8
     1e2:	77 94       	ror	r7
     1e4:	67 94       	ror	r6
     1e6:	0a 94       	dec	r0
     1e8:	d2 f7       	brpl	.-12     	; 0x1de <_fpadd_parts+0xc8>
     1ea:	21 e0       	ldi	r18, 0x01	; 1
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	40 e0       	ldi	r20, 0x00	; 0
     1f0:	50 e0       	ldi	r21, 0x00	; 0
     1f2:	04 c0       	rjmp	.+8      	; 0x1fc <_fpadd_parts+0xe6>
     1f4:	22 0f       	add	r18, r18
     1f6:	33 1f       	adc	r19, r19
     1f8:	44 1f       	adc	r20, r20
     1fa:	55 1f       	adc	r21, r21
     1fc:	6a 95       	dec	r22
     1fe:	d2 f7       	brpl	.-12     	; 0x1f4 <_fpadd_parts+0xde>
     200:	21 50       	subi	r18, 0x01	; 1
     202:	30 40       	sbci	r19, 0x00	; 0
     204:	40 40       	sbci	r20, 0x00	; 0
     206:	50 40       	sbci	r21, 0x00	; 0
     208:	2e 21       	and	r18, r14
     20a:	3f 21       	and	r19, r15
     20c:	40 23       	and	r20, r16
     20e:	51 23       	and	r21, r17
     210:	21 15       	cp	r18, r1
     212:	31 05       	cpc	r19, r1
     214:	41 05       	cpc	r20, r1
     216:	51 05       	cpc	r21, r1
     218:	21 f0       	breq	.+8      	; 0x222 <_fpadd_parts+0x10c>
     21a:	21 e0       	ldi	r18, 0x01	; 1
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	40 e0       	ldi	r20, 0x00	; 0
     220:	50 e0       	ldi	r21, 0x00	; 0
     222:	79 01       	movw	r14, r18
     224:	8a 01       	movw	r16, r20
     226:	e6 28       	or	r14, r6
     228:	f7 28       	or	r15, r7
     22a:	08 29       	or	r16, r8
     22c:	19 29       	or	r17, r9
     22e:	3c c0       	rjmp	.+120    	; 0x2a8 <_fpadd_parts+0x192>
     230:	23 2b       	or	r18, r19
     232:	d1 f1       	breq	.+116    	; 0x2a8 <_fpadd_parts+0x192>
     234:	26 0e       	add	r2, r22
     236:	37 1e       	adc	r3, r23
     238:	35 01       	movw	r6, r10
     23a:	46 01       	movw	r8, r12
     23c:	06 2e       	mov	r0, r22
     23e:	04 c0       	rjmp	.+8      	; 0x248 <_fpadd_parts+0x132>
     240:	96 94       	lsr	r9
     242:	87 94       	ror	r8
     244:	77 94       	ror	r7
     246:	67 94       	ror	r6
     248:	0a 94       	dec	r0
     24a:	d2 f7       	brpl	.-12     	; 0x240 <_fpadd_parts+0x12a>
     24c:	21 e0       	ldi	r18, 0x01	; 1
     24e:	30 e0       	ldi	r19, 0x00	; 0
     250:	40 e0       	ldi	r20, 0x00	; 0
     252:	50 e0       	ldi	r21, 0x00	; 0
     254:	04 c0       	rjmp	.+8      	; 0x25e <_fpadd_parts+0x148>
     256:	22 0f       	add	r18, r18
     258:	33 1f       	adc	r19, r19
     25a:	44 1f       	adc	r20, r20
     25c:	55 1f       	adc	r21, r21
     25e:	6a 95       	dec	r22
     260:	d2 f7       	brpl	.-12     	; 0x256 <_fpadd_parts+0x140>
     262:	21 50       	subi	r18, 0x01	; 1
     264:	30 40       	sbci	r19, 0x00	; 0
     266:	40 40       	sbci	r20, 0x00	; 0
     268:	50 40       	sbci	r21, 0x00	; 0
     26a:	2a 21       	and	r18, r10
     26c:	3b 21       	and	r19, r11
     26e:	4c 21       	and	r20, r12
     270:	5d 21       	and	r21, r13
     272:	21 15       	cp	r18, r1
     274:	31 05       	cpc	r19, r1
     276:	41 05       	cpc	r20, r1
     278:	51 05       	cpc	r21, r1
     27a:	21 f0       	breq	.+8      	; 0x284 <_fpadd_parts+0x16e>
     27c:	21 e0       	ldi	r18, 0x01	; 1
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	40 e0       	ldi	r20, 0x00	; 0
     282:	50 e0       	ldi	r21, 0x00	; 0
     284:	59 01       	movw	r10, r18
     286:	6a 01       	movw	r12, r20
     288:	a6 28       	or	r10, r6
     28a:	b7 28       	or	r11, r7
     28c:	c8 28       	or	r12, r8
     28e:	d9 28       	or	r13, r9
     290:	0b c0       	rjmp	.+22     	; 0x2a8 <_fpadd_parts+0x192>
     292:	82 15       	cp	r24, r2
     294:	93 05       	cpc	r25, r3
     296:	2c f0       	brlt	.+10     	; 0x2a2 <_fpadd_parts+0x18c>
     298:	1c 01       	movw	r2, r24
     29a:	aa 24       	eor	r10, r10
     29c:	bb 24       	eor	r11, r11
     29e:	65 01       	movw	r12, r10
     2a0:	03 c0       	rjmp	.+6      	; 0x2a8 <_fpadd_parts+0x192>
     2a2:	ee 24       	eor	r14, r14
     2a4:	ff 24       	eor	r15, r15
     2a6:	87 01       	movw	r16, r14
     2a8:	11 96       	adiw	r26, 0x01	; 1
     2aa:	9c 91       	ld	r25, X
     2ac:	d2 01       	movw	r26, r4
     2ae:	11 96       	adiw	r26, 0x01	; 1
     2b0:	8c 91       	ld	r24, X
     2b2:	98 17       	cp	r25, r24
     2b4:	09 f4       	brne	.+2      	; 0x2b8 <_fpadd_parts+0x1a2>
     2b6:	45 c0       	rjmp	.+138    	; 0x342 <_fpadd_parts+0x22c>
     2b8:	99 23       	and	r25, r25
     2ba:	39 f0       	breq	.+14     	; 0x2ca <_fpadd_parts+0x1b4>
     2bc:	a8 01       	movw	r20, r16
     2be:	97 01       	movw	r18, r14
     2c0:	2a 19       	sub	r18, r10
     2c2:	3b 09       	sbc	r19, r11
     2c4:	4c 09       	sbc	r20, r12
     2c6:	5d 09       	sbc	r21, r13
     2c8:	06 c0       	rjmp	.+12     	; 0x2d6 <_fpadd_parts+0x1c0>
     2ca:	a6 01       	movw	r20, r12
     2cc:	95 01       	movw	r18, r10
     2ce:	2e 19       	sub	r18, r14
     2d0:	3f 09       	sbc	r19, r15
     2d2:	40 0b       	sbc	r20, r16
     2d4:	51 0b       	sbc	r21, r17
     2d6:	57 fd       	sbrc	r21, 7
     2d8:	08 c0       	rjmp	.+16     	; 0x2ea <_fpadd_parts+0x1d4>
     2da:	11 82       	std	Z+1, r1	; 0x01
     2dc:	33 82       	std	Z+3, r3	; 0x03
     2de:	22 82       	std	Z+2, r2	; 0x02
     2e0:	24 83       	std	Z+4, r18	; 0x04
     2e2:	35 83       	std	Z+5, r19	; 0x05
     2e4:	46 83       	std	Z+6, r20	; 0x06
     2e6:	57 83       	std	Z+7, r21	; 0x07
     2e8:	1d c0       	rjmp	.+58     	; 0x324 <_fpadd_parts+0x20e>
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	81 83       	std	Z+1, r24	; 0x01
     2ee:	33 82       	std	Z+3, r3	; 0x03
     2f0:	22 82       	std	Z+2, r2	; 0x02
     2f2:	88 27       	eor	r24, r24
     2f4:	99 27       	eor	r25, r25
     2f6:	dc 01       	movw	r26, r24
     2f8:	82 1b       	sub	r24, r18
     2fa:	93 0b       	sbc	r25, r19
     2fc:	a4 0b       	sbc	r26, r20
     2fe:	b5 0b       	sbc	r27, r21
     300:	84 83       	std	Z+4, r24	; 0x04
     302:	95 83       	std	Z+5, r25	; 0x05
     304:	a6 83       	std	Z+6, r26	; 0x06
     306:	b7 83       	std	Z+7, r27	; 0x07
     308:	0d c0       	rjmp	.+26     	; 0x324 <_fpadd_parts+0x20e>
     30a:	22 0f       	add	r18, r18
     30c:	33 1f       	adc	r19, r19
     30e:	44 1f       	adc	r20, r20
     310:	55 1f       	adc	r21, r21
     312:	24 83       	std	Z+4, r18	; 0x04
     314:	35 83       	std	Z+5, r19	; 0x05
     316:	46 83       	std	Z+6, r20	; 0x06
     318:	57 83       	std	Z+7, r21	; 0x07
     31a:	82 81       	ldd	r24, Z+2	; 0x02
     31c:	93 81       	ldd	r25, Z+3	; 0x03
     31e:	01 97       	sbiw	r24, 0x01	; 1
     320:	93 83       	std	Z+3, r25	; 0x03
     322:	82 83       	std	Z+2, r24	; 0x02
     324:	24 81       	ldd	r18, Z+4	; 0x04
     326:	35 81       	ldd	r19, Z+5	; 0x05
     328:	46 81       	ldd	r20, Z+6	; 0x06
     32a:	57 81       	ldd	r21, Z+7	; 0x07
     32c:	da 01       	movw	r26, r20
     32e:	c9 01       	movw	r24, r18
     330:	01 97       	sbiw	r24, 0x01	; 1
     332:	a1 09       	sbc	r26, r1
     334:	b1 09       	sbc	r27, r1
     336:	8f 5f       	subi	r24, 0xFF	; 255
     338:	9f 4f       	sbci	r25, 0xFF	; 255
     33a:	af 4f       	sbci	r26, 0xFF	; 255
     33c:	bf 43       	sbci	r27, 0x3F	; 63
     33e:	28 f3       	brcs	.-54     	; 0x30a <_fpadd_parts+0x1f4>
     340:	0b c0       	rjmp	.+22     	; 0x358 <_fpadd_parts+0x242>
     342:	91 83       	std	Z+1, r25	; 0x01
     344:	33 82       	std	Z+3, r3	; 0x03
     346:	22 82       	std	Z+2, r2	; 0x02
     348:	ea 0c       	add	r14, r10
     34a:	fb 1c       	adc	r15, r11
     34c:	0c 1d       	adc	r16, r12
     34e:	1d 1d       	adc	r17, r13
     350:	e4 82       	std	Z+4, r14	; 0x04
     352:	f5 82       	std	Z+5, r15	; 0x05
     354:	06 83       	std	Z+6, r16	; 0x06
     356:	17 83       	std	Z+7, r17	; 0x07
     358:	83 e0       	ldi	r24, 0x03	; 3
     35a:	80 83       	st	Z, r24
     35c:	24 81       	ldd	r18, Z+4	; 0x04
     35e:	35 81       	ldd	r19, Z+5	; 0x05
     360:	46 81       	ldd	r20, Z+6	; 0x06
     362:	57 81       	ldd	r21, Z+7	; 0x07
     364:	57 ff       	sbrs	r21, 7
     366:	1a c0       	rjmp	.+52     	; 0x39c <_fpadd_parts+0x286>
     368:	c9 01       	movw	r24, r18
     36a:	aa 27       	eor	r26, r26
     36c:	97 fd       	sbrc	r25, 7
     36e:	a0 95       	com	r26
     370:	ba 2f       	mov	r27, r26
     372:	81 70       	andi	r24, 0x01	; 1
     374:	90 70       	andi	r25, 0x00	; 0
     376:	a0 70       	andi	r26, 0x00	; 0
     378:	b0 70       	andi	r27, 0x00	; 0
     37a:	56 95       	lsr	r21
     37c:	47 95       	ror	r20
     37e:	37 95       	ror	r19
     380:	27 95       	ror	r18
     382:	82 2b       	or	r24, r18
     384:	93 2b       	or	r25, r19
     386:	a4 2b       	or	r26, r20
     388:	b5 2b       	or	r27, r21
     38a:	84 83       	std	Z+4, r24	; 0x04
     38c:	95 83       	std	Z+5, r25	; 0x05
     38e:	a6 83       	std	Z+6, r26	; 0x06
     390:	b7 83       	std	Z+7, r27	; 0x07
     392:	82 81       	ldd	r24, Z+2	; 0x02
     394:	93 81       	ldd	r25, Z+3	; 0x03
     396:	01 96       	adiw	r24, 0x01	; 1
     398:	93 83       	std	Z+3, r25	; 0x03
     39a:	82 83       	std	Z+2, r24	; 0x02
     39c:	df 01       	movw	r26, r30
     39e:	01 c0       	rjmp	.+2      	; 0x3a2 <_fpadd_parts+0x28c>
     3a0:	d2 01       	movw	r26, r4
     3a2:	cd 01       	movw	r24, r26
     3a4:	cd b7       	in	r28, 0x3d	; 61
     3a6:	de b7       	in	r29, 0x3e	; 62
     3a8:	e2 e1       	ldi	r30, 0x12	; 18
     3aa:	0c 94 bd 0e 	jmp	0x1d7a	; 0x1d7a <__epilogue_restores__>

000003ae <__subsf3>:
     3ae:	a0 e2       	ldi	r26, 0x20	; 32
     3b0:	b0 e0       	ldi	r27, 0x00	; 0
     3b2:	ed ed       	ldi	r30, 0xDD	; 221
     3b4:	f1 e0       	ldi	r31, 0x01	; 1
     3b6:	0c 94 ad 0e 	jmp	0x1d5a	; 0x1d5a <__prologue_saves__+0x18>
     3ba:	69 83       	std	Y+1, r22	; 0x01
     3bc:	7a 83       	std	Y+2, r23	; 0x02
     3be:	8b 83       	std	Y+3, r24	; 0x03
     3c0:	9c 83       	std	Y+4, r25	; 0x04
     3c2:	2d 83       	std	Y+5, r18	; 0x05
     3c4:	3e 83       	std	Y+6, r19	; 0x06
     3c6:	4f 83       	std	Y+7, r20	; 0x07
     3c8:	58 87       	std	Y+8, r21	; 0x08
     3ca:	e9 e0       	ldi	r30, 0x09	; 9
     3cc:	ee 2e       	mov	r14, r30
     3ce:	f1 2c       	mov	r15, r1
     3d0:	ec 0e       	add	r14, r28
     3d2:	fd 1e       	adc	r15, r29
     3d4:	ce 01       	movw	r24, r28
     3d6:	01 96       	adiw	r24, 0x01	; 1
     3d8:	b7 01       	movw	r22, r14
     3da:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     3de:	8e 01       	movw	r16, r28
     3e0:	0f 5e       	subi	r16, 0xEF	; 239
     3e2:	1f 4f       	sbci	r17, 0xFF	; 255
     3e4:	ce 01       	movw	r24, r28
     3e6:	05 96       	adiw	r24, 0x05	; 5
     3e8:	b8 01       	movw	r22, r16
     3ea:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     3ee:	8a 89       	ldd	r24, Y+18	; 0x12
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	89 27       	eor	r24, r25
     3f4:	8a 8b       	std	Y+18, r24	; 0x12
     3f6:	c7 01       	movw	r24, r14
     3f8:	b8 01       	movw	r22, r16
     3fa:	ae 01       	movw	r20, r28
     3fc:	47 5e       	subi	r20, 0xE7	; 231
     3fe:	5f 4f       	sbci	r21, 0xFF	; 255
     400:	0e 94 8b 00 	call	0x116	; 0x116 <_fpadd_parts>
     404:	0e 94 13 04 	call	0x826	; 0x826 <__pack_f>
     408:	a0 96       	adiw	r28, 0x20	; 32
     40a:	e6 e0       	ldi	r30, 0x06	; 6
     40c:	0c 94 c9 0e 	jmp	0x1d92	; 0x1d92 <__epilogue_restores__+0x18>

00000410 <__addsf3>:
     410:	a0 e2       	ldi	r26, 0x20	; 32
     412:	b0 e0       	ldi	r27, 0x00	; 0
     414:	ee e0       	ldi	r30, 0x0E	; 14
     416:	f2 e0       	ldi	r31, 0x02	; 2
     418:	0c 94 ad 0e 	jmp	0x1d5a	; 0x1d5a <__prologue_saves__+0x18>
     41c:	69 83       	std	Y+1, r22	; 0x01
     41e:	7a 83       	std	Y+2, r23	; 0x02
     420:	8b 83       	std	Y+3, r24	; 0x03
     422:	9c 83       	std	Y+4, r25	; 0x04
     424:	2d 83       	std	Y+5, r18	; 0x05
     426:	3e 83       	std	Y+6, r19	; 0x06
     428:	4f 83       	std	Y+7, r20	; 0x07
     42a:	58 87       	std	Y+8, r21	; 0x08
     42c:	f9 e0       	ldi	r31, 0x09	; 9
     42e:	ef 2e       	mov	r14, r31
     430:	f1 2c       	mov	r15, r1
     432:	ec 0e       	add	r14, r28
     434:	fd 1e       	adc	r15, r29
     436:	ce 01       	movw	r24, r28
     438:	01 96       	adiw	r24, 0x01	; 1
     43a:	b7 01       	movw	r22, r14
     43c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     440:	8e 01       	movw	r16, r28
     442:	0f 5e       	subi	r16, 0xEF	; 239
     444:	1f 4f       	sbci	r17, 0xFF	; 255
     446:	ce 01       	movw	r24, r28
     448:	05 96       	adiw	r24, 0x05	; 5
     44a:	b8 01       	movw	r22, r16
     44c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     450:	c7 01       	movw	r24, r14
     452:	b8 01       	movw	r22, r16
     454:	ae 01       	movw	r20, r28
     456:	47 5e       	subi	r20, 0xE7	; 231
     458:	5f 4f       	sbci	r21, 0xFF	; 255
     45a:	0e 94 8b 00 	call	0x116	; 0x116 <_fpadd_parts>
     45e:	0e 94 13 04 	call	0x826	; 0x826 <__pack_f>
     462:	a0 96       	adiw	r28, 0x20	; 32
     464:	e6 e0       	ldi	r30, 0x06	; 6
     466:	0c 94 c9 0e 	jmp	0x1d92	; 0x1d92 <__epilogue_restores__+0x18>

0000046a <__mulsf3>:
     46a:	a0 e2       	ldi	r26, 0x20	; 32
     46c:	b0 e0       	ldi	r27, 0x00	; 0
     46e:	eb e3       	ldi	r30, 0x3B	; 59
     470:	f2 e0       	ldi	r31, 0x02	; 2
     472:	0c 94 a1 0e 	jmp	0x1d42	; 0x1d42 <__prologue_saves__>
     476:	69 83       	std	Y+1, r22	; 0x01
     478:	7a 83       	std	Y+2, r23	; 0x02
     47a:	8b 83       	std	Y+3, r24	; 0x03
     47c:	9c 83       	std	Y+4, r25	; 0x04
     47e:	2d 83       	std	Y+5, r18	; 0x05
     480:	3e 83       	std	Y+6, r19	; 0x06
     482:	4f 83       	std	Y+7, r20	; 0x07
     484:	58 87       	std	Y+8, r21	; 0x08
     486:	ce 01       	movw	r24, r28
     488:	01 96       	adiw	r24, 0x01	; 1
     48a:	be 01       	movw	r22, r28
     48c:	67 5f       	subi	r22, 0xF7	; 247
     48e:	7f 4f       	sbci	r23, 0xFF	; 255
     490:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     494:	ce 01       	movw	r24, r28
     496:	05 96       	adiw	r24, 0x05	; 5
     498:	be 01       	movw	r22, r28
     49a:	6f 5e       	subi	r22, 0xEF	; 239
     49c:	7f 4f       	sbci	r23, 0xFF	; 255
     49e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     4a2:	99 85       	ldd	r25, Y+9	; 0x09
     4a4:	92 30       	cpi	r25, 0x02	; 2
     4a6:	88 f0       	brcs	.+34     	; 0x4ca <__mulsf3+0x60>
     4a8:	89 89       	ldd	r24, Y+17	; 0x11
     4aa:	82 30       	cpi	r24, 0x02	; 2
     4ac:	c8 f0       	brcs	.+50     	; 0x4e0 <__mulsf3+0x76>
     4ae:	94 30       	cpi	r25, 0x04	; 4
     4b0:	19 f4       	brne	.+6      	; 0x4b8 <__mulsf3+0x4e>
     4b2:	82 30       	cpi	r24, 0x02	; 2
     4b4:	51 f4       	brne	.+20     	; 0x4ca <__mulsf3+0x60>
     4b6:	04 c0       	rjmp	.+8      	; 0x4c0 <__mulsf3+0x56>
     4b8:	84 30       	cpi	r24, 0x04	; 4
     4ba:	29 f4       	brne	.+10     	; 0x4c6 <__mulsf3+0x5c>
     4bc:	92 30       	cpi	r25, 0x02	; 2
     4be:	81 f4       	brne	.+32     	; 0x4e0 <__mulsf3+0x76>
     4c0:	84 e1       	ldi	r24, 0x14	; 20
     4c2:	91 e0       	ldi	r25, 0x01	; 1
     4c4:	c6 c0       	rjmp	.+396    	; 0x652 <__mulsf3+0x1e8>
     4c6:	92 30       	cpi	r25, 0x02	; 2
     4c8:	49 f4       	brne	.+18     	; 0x4dc <__mulsf3+0x72>
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ce:	8a 89       	ldd	r24, Y+18	; 0x12
     4d0:	98 13       	cpse	r25, r24
     4d2:	21 e0       	ldi	r18, 0x01	; 1
     4d4:	2a 87       	std	Y+10, r18	; 0x0a
     4d6:	ce 01       	movw	r24, r28
     4d8:	09 96       	adiw	r24, 0x09	; 9
     4da:	bb c0       	rjmp	.+374    	; 0x652 <__mulsf3+0x1e8>
     4dc:	82 30       	cpi	r24, 0x02	; 2
     4de:	49 f4       	brne	.+18     	; 0x4f2 <__mulsf3+0x88>
     4e0:	20 e0       	ldi	r18, 0x00	; 0
     4e2:	9a 85       	ldd	r25, Y+10	; 0x0a
     4e4:	8a 89       	ldd	r24, Y+18	; 0x12
     4e6:	98 13       	cpse	r25, r24
     4e8:	21 e0       	ldi	r18, 0x01	; 1
     4ea:	2a 8b       	std	Y+18, r18	; 0x12
     4ec:	ce 01       	movw	r24, r28
     4ee:	41 96       	adiw	r24, 0x11	; 17
     4f0:	b0 c0       	rjmp	.+352    	; 0x652 <__mulsf3+0x1e8>
     4f2:	2d 84       	ldd	r2, Y+13	; 0x0d
     4f4:	3e 84       	ldd	r3, Y+14	; 0x0e
     4f6:	4f 84       	ldd	r4, Y+15	; 0x0f
     4f8:	58 88       	ldd	r5, Y+16	; 0x10
     4fa:	6d 88       	ldd	r6, Y+21	; 0x15
     4fc:	7e 88       	ldd	r7, Y+22	; 0x16
     4fe:	8f 88       	ldd	r8, Y+23	; 0x17
     500:	98 8c       	ldd	r9, Y+24	; 0x18
     502:	ee 24       	eor	r14, r14
     504:	ff 24       	eor	r15, r15
     506:	87 01       	movw	r16, r14
     508:	aa 24       	eor	r10, r10
     50a:	bb 24       	eor	r11, r11
     50c:	65 01       	movw	r12, r10
     50e:	40 e0       	ldi	r20, 0x00	; 0
     510:	50 e0       	ldi	r21, 0x00	; 0
     512:	60 e0       	ldi	r22, 0x00	; 0
     514:	70 e0       	ldi	r23, 0x00	; 0
     516:	e0 e0       	ldi	r30, 0x00	; 0
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	c1 01       	movw	r24, r2
     51c:	81 70       	andi	r24, 0x01	; 1
     51e:	90 70       	andi	r25, 0x00	; 0
     520:	89 2b       	or	r24, r25
     522:	e9 f0       	breq	.+58     	; 0x55e <__mulsf3+0xf4>
     524:	e6 0c       	add	r14, r6
     526:	f7 1c       	adc	r15, r7
     528:	08 1d       	adc	r16, r8
     52a:	19 1d       	adc	r17, r9
     52c:	9a 01       	movw	r18, r20
     52e:	ab 01       	movw	r20, r22
     530:	2a 0d       	add	r18, r10
     532:	3b 1d       	adc	r19, r11
     534:	4c 1d       	adc	r20, r12
     536:	5d 1d       	adc	r21, r13
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	a0 e0       	ldi	r26, 0x00	; 0
     53e:	b0 e0       	ldi	r27, 0x00	; 0
     540:	e6 14       	cp	r14, r6
     542:	f7 04       	cpc	r15, r7
     544:	08 05       	cpc	r16, r8
     546:	19 05       	cpc	r17, r9
     548:	20 f4       	brcc	.+8      	; 0x552 <__mulsf3+0xe8>
     54a:	81 e0       	ldi	r24, 0x01	; 1
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	a0 e0       	ldi	r26, 0x00	; 0
     550:	b0 e0       	ldi	r27, 0x00	; 0
     552:	ba 01       	movw	r22, r20
     554:	a9 01       	movw	r20, r18
     556:	48 0f       	add	r20, r24
     558:	59 1f       	adc	r21, r25
     55a:	6a 1f       	adc	r22, r26
     55c:	7b 1f       	adc	r23, r27
     55e:	aa 0c       	add	r10, r10
     560:	bb 1c       	adc	r11, r11
     562:	cc 1c       	adc	r12, r12
     564:	dd 1c       	adc	r13, r13
     566:	97 fe       	sbrs	r9, 7
     568:	08 c0       	rjmp	.+16     	; 0x57a <__mulsf3+0x110>
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	a0 e0       	ldi	r26, 0x00	; 0
     570:	b0 e0       	ldi	r27, 0x00	; 0
     572:	a8 2a       	or	r10, r24
     574:	b9 2a       	or	r11, r25
     576:	ca 2a       	or	r12, r26
     578:	db 2a       	or	r13, r27
     57a:	31 96       	adiw	r30, 0x01	; 1
     57c:	e0 32       	cpi	r30, 0x20	; 32
     57e:	f1 05       	cpc	r31, r1
     580:	49 f0       	breq	.+18     	; 0x594 <__mulsf3+0x12a>
     582:	66 0c       	add	r6, r6
     584:	77 1c       	adc	r7, r7
     586:	88 1c       	adc	r8, r8
     588:	99 1c       	adc	r9, r9
     58a:	56 94       	lsr	r5
     58c:	47 94       	ror	r4
     58e:	37 94       	ror	r3
     590:	27 94       	ror	r2
     592:	c3 cf       	rjmp	.-122    	; 0x51a <__mulsf3+0xb0>
     594:	fa 85       	ldd	r31, Y+10	; 0x0a
     596:	ea 89       	ldd	r30, Y+18	; 0x12
     598:	2b 89       	ldd	r18, Y+19	; 0x13
     59a:	3c 89       	ldd	r19, Y+20	; 0x14
     59c:	8b 85       	ldd	r24, Y+11	; 0x0b
     59e:	9c 85       	ldd	r25, Y+12	; 0x0c
     5a0:	28 0f       	add	r18, r24
     5a2:	39 1f       	adc	r19, r25
     5a4:	2e 5f       	subi	r18, 0xFE	; 254
     5a6:	3f 4f       	sbci	r19, 0xFF	; 255
     5a8:	17 c0       	rjmp	.+46     	; 0x5d8 <__mulsf3+0x16e>
     5aa:	ca 01       	movw	r24, r20
     5ac:	81 70       	andi	r24, 0x01	; 1
     5ae:	90 70       	andi	r25, 0x00	; 0
     5b0:	89 2b       	or	r24, r25
     5b2:	61 f0       	breq	.+24     	; 0x5cc <__mulsf3+0x162>
     5b4:	16 95       	lsr	r17
     5b6:	07 95       	ror	r16
     5b8:	f7 94       	ror	r15
     5ba:	e7 94       	ror	r14
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	a0 e0       	ldi	r26, 0x00	; 0
     5c2:	b0 e8       	ldi	r27, 0x80	; 128
     5c4:	e8 2a       	or	r14, r24
     5c6:	f9 2a       	or	r15, r25
     5c8:	0a 2b       	or	r16, r26
     5ca:	1b 2b       	or	r17, r27
     5cc:	76 95       	lsr	r23
     5ce:	67 95       	ror	r22
     5d0:	57 95       	ror	r21
     5d2:	47 95       	ror	r20
     5d4:	2f 5f       	subi	r18, 0xFF	; 255
     5d6:	3f 4f       	sbci	r19, 0xFF	; 255
     5d8:	77 fd       	sbrc	r23, 7
     5da:	e7 cf       	rjmp	.-50     	; 0x5aa <__mulsf3+0x140>
     5dc:	0c c0       	rjmp	.+24     	; 0x5f6 <__mulsf3+0x18c>
     5de:	44 0f       	add	r20, r20
     5e0:	55 1f       	adc	r21, r21
     5e2:	66 1f       	adc	r22, r22
     5e4:	77 1f       	adc	r23, r23
     5e6:	17 fd       	sbrc	r17, 7
     5e8:	41 60       	ori	r20, 0x01	; 1
     5ea:	ee 0c       	add	r14, r14
     5ec:	ff 1c       	adc	r15, r15
     5ee:	00 1f       	adc	r16, r16
     5f0:	11 1f       	adc	r17, r17
     5f2:	21 50       	subi	r18, 0x01	; 1
     5f4:	30 40       	sbci	r19, 0x00	; 0
     5f6:	40 30       	cpi	r20, 0x00	; 0
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	59 07       	cpc	r21, r25
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	69 07       	cpc	r22, r25
     600:	90 e4       	ldi	r25, 0x40	; 64
     602:	79 07       	cpc	r23, r25
     604:	60 f3       	brcs	.-40     	; 0x5de <__mulsf3+0x174>
     606:	2b 8f       	std	Y+27, r18	; 0x1b
     608:	3c 8f       	std	Y+28, r19	; 0x1c
     60a:	db 01       	movw	r26, r22
     60c:	ca 01       	movw	r24, r20
     60e:	8f 77       	andi	r24, 0x7F	; 127
     610:	90 70       	andi	r25, 0x00	; 0
     612:	a0 70       	andi	r26, 0x00	; 0
     614:	b0 70       	andi	r27, 0x00	; 0
     616:	80 34       	cpi	r24, 0x40	; 64
     618:	91 05       	cpc	r25, r1
     61a:	a1 05       	cpc	r26, r1
     61c:	b1 05       	cpc	r27, r1
     61e:	61 f4       	brne	.+24     	; 0x638 <__mulsf3+0x1ce>
     620:	47 fd       	sbrc	r20, 7
     622:	0a c0       	rjmp	.+20     	; 0x638 <__mulsf3+0x1ce>
     624:	e1 14       	cp	r14, r1
     626:	f1 04       	cpc	r15, r1
     628:	01 05       	cpc	r16, r1
     62a:	11 05       	cpc	r17, r1
     62c:	29 f0       	breq	.+10     	; 0x638 <__mulsf3+0x1ce>
     62e:	40 5c       	subi	r20, 0xC0	; 192
     630:	5f 4f       	sbci	r21, 0xFF	; 255
     632:	6f 4f       	sbci	r22, 0xFF	; 255
     634:	7f 4f       	sbci	r23, 0xFF	; 255
     636:	40 78       	andi	r20, 0x80	; 128
     638:	1a 8e       	std	Y+26, r1	; 0x1a
     63a:	fe 17       	cp	r31, r30
     63c:	11 f0       	breq	.+4      	; 0x642 <__mulsf3+0x1d8>
     63e:	81 e0       	ldi	r24, 0x01	; 1
     640:	8a 8f       	std	Y+26, r24	; 0x1a
     642:	4d 8f       	std	Y+29, r20	; 0x1d
     644:	5e 8f       	std	Y+30, r21	; 0x1e
     646:	6f 8f       	std	Y+31, r22	; 0x1f
     648:	78 a3       	std	Y+32, r23	; 0x20
     64a:	83 e0       	ldi	r24, 0x03	; 3
     64c:	89 8f       	std	Y+25, r24	; 0x19
     64e:	ce 01       	movw	r24, r28
     650:	49 96       	adiw	r24, 0x19	; 25
     652:	0e 94 13 04 	call	0x826	; 0x826 <__pack_f>
     656:	a0 96       	adiw	r28, 0x20	; 32
     658:	e2 e1       	ldi	r30, 0x12	; 18
     65a:	0c 94 bd 0e 	jmp	0x1d7a	; 0x1d7a <__epilogue_restores__>

0000065e <__gtsf2>:
     65e:	a8 e1       	ldi	r26, 0x18	; 24
     660:	b0 e0       	ldi	r27, 0x00	; 0
     662:	e5 e3       	ldi	r30, 0x35	; 53
     664:	f3 e0       	ldi	r31, 0x03	; 3
     666:	0c 94 ad 0e 	jmp	0x1d5a	; 0x1d5a <__prologue_saves__+0x18>
     66a:	69 83       	std	Y+1, r22	; 0x01
     66c:	7a 83       	std	Y+2, r23	; 0x02
     66e:	8b 83       	std	Y+3, r24	; 0x03
     670:	9c 83       	std	Y+4, r25	; 0x04
     672:	2d 83       	std	Y+5, r18	; 0x05
     674:	3e 83       	std	Y+6, r19	; 0x06
     676:	4f 83       	std	Y+7, r20	; 0x07
     678:	58 87       	std	Y+8, r21	; 0x08
     67a:	89 e0       	ldi	r24, 0x09	; 9
     67c:	e8 2e       	mov	r14, r24
     67e:	f1 2c       	mov	r15, r1
     680:	ec 0e       	add	r14, r28
     682:	fd 1e       	adc	r15, r29
     684:	ce 01       	movw	r24, r28
     686:	01 96       	adiw	r24, 0x01	; 1
     688:	b7 01       	movw	r22, r14
     68a:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     68e:	8e 01       	movw	r16, r28
     690:	0f 5e       	subi	r16, 0xEF	; 239
     692:	1f 4f       	sbci	r17, 0xFF	; 255
     694:	ce 01       	movw	r24, r28
     696:	05 96       	adiw	r24, 0x05	; 5
     698:	b8 01       	movw	r22, r16
     69a:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     69e:	89 85       	ldd	r24, Y+9	; 0x09
     6a0:	82 30       	cpi	r24, 0x02	; 2
     6a2:	40 f0       	brcs	.+16     	; 0x6b4 <__gtsf2+0x56>
     6a4:	89 89       	ldd	r24, Y+17	; 0x11
     6a6:	82 30       	cpi	r24, 0x02	; 2
     6a8:	28 f0       	brcs	.+10     	; 0x6b4 <__gtsf2+0x56>
     6aa:	c7 01       	movw	r24, r14
     6ac:	b8 01       	movw	r22, r16
     6ae:	0e 94 60 05 	call	0xac0	; 0xac0 <__fpcmp_parts_f>
     6b2:	01 c0       	rjmp	.+2      	; 0x6b6 <__gtsf2+0x58>
     6b4:	8f ef       	ldi	r24, 0xFF	; 255
     6b6:	68 96       	adiw	r28, 0x18	; 24
     6b8:	e6 e0       	ldi	r30, 0x06	; 6
     6ba:	0c 94 c9 0e 	jmp	0x1d92	; 0x1d92 <__epilogue_restores__+0x18>

000006be <__gesf2>:
     6be:	a8 e1       	ldi	r26, 0x18	; 24
     6c0:	b0 e0       	ldi	r27, 0x00	; 0
     6c2:	e5 e6       	ldi	r30, 0x65	; 101
     6c4:	f3 e0       	ldi	r31, 0x03	; 3
     6c6:	0c 94 ad 0e 	jmp	0x1d5a	; 0x1d5a <__prologue_saves__+0x18>
     6ca:	69 83       	std	Y+1, r22	; 0x01
     6cc:	7a 83       	std	Y+2, r23	; 0x02
     6ce:	8b 83       	std	Y+3, r24	; 0x03
     6d0:	9c 83       	std	Y+4, r25	; 0x04
     6d2:	2d 83       	std	Y+5, r18	; 0x05
     6d4:	3e 83       	std	Y+6, r19	; 0x06
     6d6:	4f 83       	std	Y+7, r20	; 0x07
     6d8:	58 87       	std	Y+8, r21	; 0x08
     6da:	89 e0       	ldi	r24, 0x09	; 9
     6dc:	e8 2e       	mov	r14, r24
     6de:	f1 2c       	mov	r15, r1
     6e0:	ec 0e       	add	r14, r28
     6e2:	fd 1e       	adc	r15, r29
     6e4:	ce 01       	movw	r24, r28
     6e6:	01 96       	adiw	r24, 0x01	; 1
     6e8:	b7 01       	movw	r22, r14
     6ea:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     6ee:	8e 01       	movw	r16, r28
     6f0:	0f 5e       	subi	r16, 0xEF	; 239
     6f2:	1f 4f       	sbci	r17, 0xFF	; 255
     6f4:	ce 01       	movw	r24, r28
     6f6:	05 96       	adiw	r24, 0x05	; 5
     6f8:	b8 01       	movw	r22, r16
     6fa:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     6fe:	89 85       	ldd	r24, Y+9	; 0x09
     700:	82 30       	cpi	r24, 0x02	; 2
     702:	40 f0       	brcs	.+16     	; 0x714 <__gesf2+0x56>
     704:	89 89       	ldd	r24, Y+17	; 0x11
     706:	82 30       	cpi	r24, 0x02	; 2
     708:	28 f0       	brcs	.+10     	; 0x714 <__gesf2+0x56>
     70a:	c7 01       	movw	r24, r14
     70c:	b8 01       	movw	r22, r16
     70e:	0e 94 60 05 	call	0xac0	; 0xac0 <__fpcmp_parts_f>
     712:	01 c0       	rjmp	.+2      	; 0x716 <__gesf2+0x58>
     714:	8f ef       	ldi	r24, 0xFF	; 255
     716:	68 96       	adiw	r28, 0x18	; 24
     718:	e6 e0       	ldi	r30, 0x06	; 6
     71a:	0c 94 c9 0e 	jmp	0x1d92	; 0x1d92 <__epilogue_restores__+0x18>

0000071e <__ltsf2>:
     71e:	a8 e1       	ldi	r26, 0x18	; 24
     720:	b0 e0       	ldi	r27, 0x00	; 0
     722:	e5 e9       	ldi	r30, 0x95	; 149
     724:	f3 e0       	ldi	r31, 0x03	; 3
     726:	0c 94 ad 0e 	jmp	0x1d5a	; 0x1d5a <__prologue_saves__+0x18>
     72a:	69 83       	std	Y+1, r22	; 0x01
     72c:	7a 83       	std	Y+2, r23	; 0x02
     72e:	8b 83       	std	Y+3, r24	; 0x03
     730:	9c 83       	std	Y+4, r25	; 0x04
     732:	2d 83       	std	Y+5, r18	; 0x05
     734:	3e 83       	std	Y+6, r19	; 0x06
     736:	4f 83       	std	Y+7, r20	; 0x07
     738:	58 87       	std	Y+8, r21	; 0x08
     73a:	89 e0       	ldi	r24, 0x09	; 9
     73c:	e8 2e       	mov	r14, r24
     73e:	f1 2c       	mov	r15, r1
     740:	ec 0e       	add	r14, r28
     742:	fd 1e       	adc	r15, r29
     744:	ce 01       	movw	r24, r28
     746:	01 96       	adiw	r24, 0x01	; 1
     748:	b7 01       	movw	r22, r14
     74a:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     74e:	8e 01       	movw	r16, r28
     750:	0f 5e       	subi	r16, 0xEF	; 239
     752:	1f 4f       	sbci	r17, 0xFF	; 255
     754:	ce 01       	movw	r24, r28
     756:	05 96       	adiw	r24, 0x05	; 5
     758:	b8 01       	movw	r22, r16
     75a:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     75e:	89 85       	ldd	r24, Y+9	; 0x09
     760:	82 30       	cpi	r24, 0x02	; 2
     762:	40 f0       	brcs	.+16     	; 0x774 <__ltsf2+0x56>
     764:	89 89       	ldd	r24, Y+17	; 0x11
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	28 f0       	brcs	.+10     	; 0x774 <__ltsf2+0x56>
     76a:	c7 01       	movw	r24, r14
     76c:	b8 01       	movw	r22, r16
     76e:	0e 94 60 05 	call	0xac0	; 0xac0 <__fpcmp_parts_f>
     772:	01 c0       	rjmp	.+2      	; 0x776 <__ltsf2+0x58>
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	68 96       	adiw	r28, 0x18	; 24
     778:	e6 e0       	ldi	r30, 0x06	; 6
     77a:	0c 94 c9 0e 	jmp	0x1d92	; 0x1d92 <__epilogue_restores__+0x18>

0000077e <__fixsfsi>:
     77e:	ac e0       	ldi	r26, 0x0C	; 12
     780:	b0 e0       	ldi	r27, 0x00	; 0
     782:	e5 ec       	ldi	r30, 0xC5	; 197
     784:	f3 e0       	ldi	r31, 0x03	; 3
     786:	0c 94 b1 0e 	jmp	0x1d62	; 0x1d62 <__prologue_saves__+0x20>
     78a:	69 83       	std	Y+1, r22	; 0x01
     78c:	7a 83       	std	Y+2, r23	; 0x02
     78e:	8b 83       	std	Y+3, r24	; 0x03
     790:	9c 83       	std	Y+4, r25	; 0x04
     792:	ce 01       	movw	r24, r28
     794:	01 96       	adiw	r24, 0x01	; 1
     796:	be 01       	movw	r22, r28
     798:	6b 5f       	subi	r22, 0xFB	; 251
     79a:	7f 4f       	sbci	r23, 0xFF	; 255
     79c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__unpack_f>
     7a0:	8d 81       	ldd	r24, Y+5	; 0x05
     7a2:	82 30       	cpi	r24, 0x02	; 2
     7a4:	61 f1       	breq	.+88     	; 0x7fe <__fixsfsi+0x80>
     7a6:	82 30       	cpi	r24, 0x02	; 2
     7a8:	50 f1       	brcs	.+84     	; 0x7fe <__fixsfsi+0x80>
     7aa:	84 30       	cpi	r24, 0x04	; 4
     7ac:	21 f4       	brne	.+8      	; 0x7b6 <__fixsfsi+0x38>
     7ae:	8e 81       	ldd	r24, Y+6	; 0x06
     7b0:	88 23       	and	r24, r24
     7b2:	51 f1       	breq	.+84     	; 0x808 <__fixsfsi+0x8a>
     7b4:	2e c0       	rjmp	.+92     	; 0x812 <__fixsfsi+0x94>
     7b6:	2f 81       	ldd	r18, Y+7	; 0x07
     7b8:	38 85       	ldd	r19, Y+8	; 0x08
     7ba:	37 fd       	sbrc	r19, 7
     7bc:	20 c0       	rjmp	.+64     	; 0x7fe <__fixsfsi+0x80>
     7be:	6e 81       	ldd	r22, Y+6	; 0x06
     7c0:	2f 31       	cpi	r18, 0x1F	; 31
     7c2:	31 05       	cpc	r19, r1
     7c4:	1c f0       	brlt	.+6      	; 0x7cc <__fixsfsi+0x4e>
     7c6:	66 23       	and	r22, r22
     7c8:	f9 f0       	breq	.+62     	; 0x808 <__fixsfsi+0x8a>
     7ca:	23 c0       	rjmp	.+70     	; 0x812 <__fixsfsi+0x94>
     7cc:	8e e1       	ldi	r24, 0x1E	; 30
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	82 1b       	sub	r24, r18
     7d2:	93 0b       	sbc	r25, r19
     7d4:	29 85       	ldd	r18, Y+9	; 0x09
     7d6:	3a 85       	ldd	r19, Y+10	; 0x0a
     7d8:	4b 85       	ldd	r20, Y+11	; 0x0b
     7da:	5c 85       	ldd	r21, Y+12	; 0x0c
     7dc:	04 c0       	rjmp	.+8      	; 0x7e6 <__fixsfsi+0x68>
     7de:	56 95       	lsr	r21
     7e0:	47 95       	ror	r20
     7e2:	37 95       	ror	r19
     7e4:	27 95       	ror	r18
     7e6:	8a 95       	dec	r24
     7e8:	d2 f7       	brpl	.-12     	; 0x7de <__fixsfsi+0x60>
     7ea:	66 23       	and	r22, r22
     7ec:	b1 f0       	breq	.+44     	; 0x81a <__fixsfsi+0x9c>
     7ee:	50 95       	com	r21
     7f0:	40 95       	com	r20
     7f2:	30 95       	com	r19
     7f4:	21 95       	neg	r18
     7f6:	3f 4f       	sbci	r19, 0xFF	; 255
     7f8:	4f 4f       	sbci	r20, 0xFF	; 255
     7fa:	5f 4f       	sbci	r21, 0xFF	; 255
     7fc:	0e c0       	rjmp	.+28     	; 0x81a <__fixsfsi+0x9c>
     7fe:	20 e0       	ldi	r18, 0x00	; 0
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	40 e0       	ldi	r20, 0x00	; 0
     804:	50 e0       	ldi	r21, 0x00	; 0
     806:	09 c0       	rjmp	.+18     	; 0x81a <__fixsfsi+0x9c>
     808:	2f ef       	ldi	r18, 0xFF	; 255
     80a:	3f ef       	ldi	r19, 0xFF	; 255
     80c:	4f ef       	ldi	r20, 0xFF	; 255
     80e:	5f e7       	ldi	r21, 0x7F	; 127
     810:	04 c0       	rjmp	.+8      	; 0x81a <__fixsfsi+0x9c>
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	40 e0       	ldi	r20, 0x00	; 0
     818:	50 e8       	ldi	r21, 0x80	; 128
     81a:	b9 01       	movw	r22, r18
     81c:	ca 01       	movw	r24, r20
     81e:	2c 96       	adiw	r28, 0x0c	; 12
     820:	e2 e0       	ldi	r30, 0x02	; 2
     822:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__epilogue_restores__+0x20>

00000826 <__pack_f>:
     826:	df 92       	push	r13
     828:	ef 92       	push	r14
     82a:	ff 92       	push	r15
     82c:	0f 93       	push	r16
     82e:	1f 93       	push	r17
     830:	fc 01       	movw	r30, r24
     832:	e4 80       	ldd	r14, Z+4	; 0x04
     834:	f5 80       	ldd	r15, Z+5	; 0x05
     836:	06 81       	ldd	r16, Z+6	; 0x06
     838:	17 81       	ldd	r17, Z+7	; 0x07
     83a:	d1 80       	ldd	r13, Z+1	; 0x01
     83c:	80 81       	ld	r24, Z
     83e:	82 30       	cpi	r24, 0x02	; 2
     840:	48 f4       	brcc	.+18     	; 0x854 <__pack_f+0x2e>
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	a0 e1       	ldi	r26, 0x10	; 16
     848:	b0 e0       	ldi	r27, 0x00	; 0
     84a:	e8 2a       	or	r14, r24
     84c:	f9 2a       	or	r15, r25
     84e:	0a 2b       	or	r16, r26
     850:	1b 2b       	or	r17, r27
     852:	a5 c0       	rjmp	.+330    	; 0x99e <__pack_f+0x178>
     854:	84 30       	cpi	r24, 0x04	; 4
     856:	09 f4       	brne	.+2      	; 0x85a <__pack_f+0x34>
     858:	9f c0       	rjmp	.+318    	; 0x998 <__pack_f+0x172>
     85a:	82 30       	cpi	r24, 0x02	; 2
     85c:	21 f4       	brne	.+8      	; 0x866 <__pack_f+0x40>
     85e:	ee 24       	eor	r14, r14
     860:	ff 24       	eor	r15, r15
     862:	87 01       	movw	r16, r14
     864:	05 c0       	rjmp	.+10     	; 0x870 <__pack_f+0x4a>
     866:	e1 14       	cp	r14, r1
     868:	f1 04       	cpc	r15, r1
     86a:	01 05       	cpc	r16, r1
     86c:	11 05       	cpc	r17, r1
     86e:	19 f4       	brne	.+6      	; 0x876 <__pack_f+0x50>
     870:	e0 e0       	ldi	r30, 0x00	; 0
     872:	f0 e0       	ldi	r31, 0x00	; 0
     874:	96 c0       	rjmp	.+300    	; 0x9a2 <__pack_f+0x17c>
     876:	62 81       	ldd	r22, Z+2	; 0x02
     878:	73 81       	ldd	r23, Z+3	; 0x03
     87a:	9f ef       	ldi	r25, 0xFF	; 255
     87c:	62 38       	cpi	r22, 0x82	; 130
     87e:	79 07       	cpc	r23, r25
     880:	0c f0       	brlt	.+2      	; 0x884 <__pack_f+0x5e>
     882:	5b c0       	rjmp	.+182    	; 0x93a <__pack_f+0x114>
     884:	22 e8       	ldi	r18, 0x82	; 130
     886:	3f ef       	ldi	r19, 0xFF	; 255
     888:	26 1b       	sub	r18, r22
     88a:	37 0b       	sbc	r19, r23
     88c:	2a 31       	cpi	r18, 0x1A	; 26
     88e:	31 05       	cpc	r19, r1
     890:	2c f0       	brlt	.+10     	; 0x89c <__pack_f+0x76>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	50 e0       	ldi	r21, 0x00	; 0
     89a:	2a c0       	rjmp	.+84     	; 0x8f0 <__pack_f+0xca>
     89c:	b8 01       	movw	r22, r16
     89e:	a7 01       	movw	r20, r14
     8a0:	02 2e       	mov	r0, r18
     8a2:	04 c0       	rjmp	.+8      	; 0x8ac <__pack_f+0x86>
     8a4:	76 95       	lsr	r23
     8a6:	67 95       	ror	r22
     8a8:	57 95       	ror	r21
     8aa:	47 95       	ror	r20
     8ac:	0a 94       	dec	r0
     8ae:	d2 f7       	brpl	.-12     	; 0x8a4 <__pack_f+0x7e>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	04 c0       	rjmp	.+8      	; 0x8c2 <__pack_f+0x9c>
     8ba:	88 0f       	add	r24, r24
     8bc:	99 1f       	adc	r25, r25
     8be:	aa 1f       	adc	r26, r26
     8c0:	bb 1f       	adc	r27, r27
     8c2:	2a 95       	dec	r18
     8c4:	d2 f7       	brpl	.-12     	; 0x8ba <__pack_f+0x94>
     8c6:	01 97       	sbiw	r24, 0x01	; 1
     8c8:	a1 09       	sbc	r26, r1
     8ca:	b1 09       	sbc	r27, r1
     8cc:	8e 21       	and	r24, r14
     8ce:	9f 21       	and	r25, r15
     8d0:	a0 23       	and	r26, r16
     8d2:	b1 23       	and	r27, r17
     8d4:	00 97       	sbiw	r24, 0x00	; 0
     8d6:	a1 05       	cpc	r26, r1
     8d8:	b1 05       	cpc	r27, r1
     8da:	21 f0       	breq	.+8      	; 0x8e4 <__pack_f+0xbe>
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	a0 e0       	ldi	r26, 0x00	; 0
     8e2:	b0 e0       	ldi	r27, 0x00	; 0
     8e4:	9a 01       	movw	r18, r20
     8e6:	ab 01       	movw	r20, r22
     8e8:	28 2b       	or	r18, r24
     8ea:	39 2b       	or	r19, r25
     8ec:	4a 2b       	or	r20, r26
     8ee:	5b 2b       	or	r21, r27
     8f0:	da 01       	movw	r26, r20
     8f2:	c9 01       	movw	r24, r18
     8f4:	8f 77       	andi	r24, 0x7F	; 127
     8f6:	90 70       	andi	r25, 0x00	; 0
     8f8:	a0 70       	andi	r26, 0x00	; 0
     8fa:	b0 70       	andi	r27, 0x00	; 0
     8fc:	80 34       	cpi	r24, 0x40	; 64
     8fe:	91 05       	cpc	r25, r1
     900:	a1 05       	cpc	r26, r1
     902:	b1 05       	cpc	r27, r1
     904:	39 f4       	brne	.+14     	; 0x914 <__pack_f+0xee>
     906:	27 ff       	sbrs	r18, 7
     908:	09 c0       	rjmp	.+18     	; 0x91c <__pack_f+0xf6>
     90a:	20 5c       	subi	r18, 0xC0	; 192
     90c:	3f 4f       	sbci	r19, 0xFF	; 255
     90e:	4f 4f       	sbci	r20, 0xFF	; 255
     910:	5f 4f       	sbci	r21, 0xFF	; 255
     912:	04 c0       	rjmp	.+8      	; 0x91c <__pack_f+0xf6>
     914:	21 5c       	subi	r18, 0xC1	; 193
     916:	3f 4f       	sbci	r19, 0xFF	; 255
     918:	4f 4f       	sbci	r20, 0xFF	; 255
     91a:	5f 4f       	sbci	r21, 0xFF	; 255
     91c:	e0 e0       	ldi	r30, 0x00	; 0
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	20 30       	cpi	r18, 0x00	; 0
     922:	a0 e0       	ldi	r26, 0x00	; 0
     924:	3a 07       	cpc	r19, r26
     926:	a0 e0       	ldi	r26, 0x00	; 0
     928:	4a 07       	cpc	r20, r26
     92a:	a0 e4       	ldi	r26, 0x40	; 64
     92c:	5a 07       	cpc	r21, r26
     92e:	10 f0       	brcs	.+4      	; 0x934 <__pack_f+0x10e>
     930:	e1 e0       	ldi	r30, 0x01	; 1
     932:	f0 e0       	ldi	r31, 0x00	; 0
     934:	79 01       	movw	r14, r18
     936:	8a 01       	movw	r16, r20
     938:	27 c0       	rjmp	.+78     	; 0x988 <__pack_f+0x162>
     93a:	60 38       	cpi	r22, 0x80	; 128
     93c:	71 05       	cpc	r23, r1
     93e:	64 f5       	brge	.+88     	; 0x998 <__pack_f+0x172>
     940:	fb 01       	movw	r30, r22
     942:	e1 58       	subi	r30, 0x81	; 129
     944:	ff 4f       	sbci	r31, 0xFF	; 255
     946:	d8 01       	movw	r26, r16
     948:	c7 01       	movw	r24, r14
     94a:	8f 77       	andi	r24, 0x7F	; 127
     94c:	90 70       	andi	r25, 0x00	; 0
     94e:	a0 70       	andi	r26, 0x00	; 0
     950:	b0 70       	andi	r27, 0x00	; 0
     952:	80 34       	cpi	r24, 0x40	; 64
     954:	91 05       	cpc	r25, r1
     956:	a1 05       	cpc	r26, r1
     958:	b1 05       	cpc	r27, r1
     95a:	39 f4       	brne	.+14     	; 0x96a <__pack_f+0x144>
     95c:	e7 fe       	sbrs	r14, 7
     95e:	0d c0       	rjmp	.+26     	; 0x97a <__pack_f+0x154>
     960:	80 e4       	ldi	r24, 0x40	; 64
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	a0 e0       	ldi	r26, 0x00	; 0
     966:	b0 e0       	ldi	r27, 0x00	; 0
     968:	04 c0       	rjmp	.+8      	; 0x972 <__pack_f+0x14c>
     96a:	8f e3       	ldi	r24, 0x3F	; 63
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	a0 e0       	ldi	r26, 0x00	; 0
     970:	b0 e0       	ldi	r27, 0x00	; 0
     972:	e8 0e       	add	r14, r24
     974:	f9 1e       	adc	r15, r25
     976:	0a 1f       	adc	r16, r26
     978:	1b 1f       	adc	r17, r27
     97a:	17 ff       	sbrs	r17, 7
     97c:	05 c0       	rjmp	.+10     	; 0x988 <__pack_f+0x162>
     97e:	16 95       	lsr	r17
     980:	07 95       	ror	r16
     982:	f7 94       	ror	r15
     984:	e7 94       	ror	r14
     986:	31 96       	adiw	r30, 0x01	; 1
     988:	87 e0       	ldi	r24, 0x07	; 7
     98a:	16 95       	lsr	r17
     98c:	07 95       	ror	r16
     98e:	f7 94       	ror	r15
     990:	e7 94       	ror	r14
     992:	8a 95       	dec	r24
     994:	d1 f7       	brne	.-12     	; 0x98a <__pack_f+0x164>
     996:	05 c0       	rjmp	.+10     	; 0x9a2 <__pack_f+0x17c>
     998:	ee 24       	eor	r14, r14
     99a:	ff 24       	eor	r15, r15
     99c:	87 01       	movw	r16, r14
     99e:	ef ef       	ldi	r30, 0xFF	; 255
     9a0:	f0 e0       	ldi	r31, 0x00	; 0
     9a2:	6e 2f       	mov	r22, r30
     9a4:	67 95       	ror	r22
     9a6:	66 27       	eor	r22, r22
     9a8:	67 95       	ror	r22
     9aa:	90 2f       	mov	r25, r16
     9ac:	9f 77       	andi	r25, 0x7F	; 127
     9ae:	d7 94       	ror	r13
     9b0:	dd 24       	eor	r13, r13
     9b2:	d7 94       	ror	r13
     9b4:	8e 2f       	mov	r24, r30
     9b6:	86 95       	lsr	r24
     9b8:	49 2f       	mov	r20, r25
     9ba:	46 2b       	or	r20, r22
     9bc:	58 2f       	mov	r21, r24
     9be:	5d 29       	or	r21, r13
     9c0:	b7 01       	movw	r22, r14
     9c2:	ca 01       	movw	r24, r20
     9c4:	1f 91       	pop	r17
     9c6:	0f 91       	pop	r16
     9c8:	ff 90       	pop	r15
     9ca:	ef 90       	pop	r14
     9cc:	df 90       	pop	r13
     9ce:	08 95       	ret

000009d0 <__unpack_f>:
     9d0:	fc 01       	movw	r30, r24
     9d2:	db 01       	movw	r26, r22
     9d4:	40 81       	ld	r20, Z
     9d6:	51 81       	ldd	r21, Z+1	; 0x01
     9d8:	22 81       	ldd	r18, Z+2	; 0x02
     9da:	62 2f       	mov	r22, r18
     9dc:	6f 77       	andi	r22, 0x7F	; 127
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	22 1f       	adc	r18, r18
     9e2:	22 27       	eor	r18, r18
     9e4:	22 1f       	adc	r18, r18
     9e6:	93 81       	ldd	r25, Z+3	; 0x03
     9e8:	89 2f       	mov	r24, r25
     9ea:	88 0f       	add	r24, r24
     9ec:	82 2b       	or	r24, r18
     9ee:	28 2f       	mov	r18, r24
     9f0:	30 e0       	ldi	r19, 0x00	; 0
     9f2:	99 1f       	adc	r25, r25
     9f4:	99 27       	eor	r25, r25
     9f6:	99 1f       	adc	r25, r25
     9f8:	11 96       	adiw	r26, 0x01	; 1
     9fa:	9c 93       	st	X, r25
     9fc:	11 97       	sbiw	r26, 0x01	; 1
     9fe:	21 15       	cp	r18, r1
     a00:	31 05       	cpc	r19, r1
     a02:	a9 f5       	brne	.+106    	; 0xa6e <__unpack_f+0x9e>
     a04:	41 15       	cp	r20, r1
     a06:	51 05       	cpc	r21, r1
     a08:	61 05       	cpc	r22, r1
     a0a:	71 05       	cpc	r23, r1
     a0c:	11 f4       	brne	.+4      	; 0xa12 <__unpack_f+0x42>
     a0e:	82 e0       	ldi	r24, 0x02	; 2
     a10:	37 c0       	rjmp	.+110    	; 0xa80 <__unpack_f+0xb0>
     a12:	82 e8       	ldi	r24, 0x82	; 130
     a14:	9f ef       	ldi	r25, 0xFF	; 255
     a16:	13 96       	adiw	r26, 0x03	; 3
     a18:	9c 93       	st	X, r25
     a1a:	8e 93       	st	-X, r24
     a1c:	12 97       	sbiw	r26, 0x02	; 2
     a1e:	9a 01       	movw	r18, r20
     a20:	ab 01       	movw	r20, r22
     a22:	67 e0       	ldi	r22, 0x07	; 7
     a24:	22 0f       	add	r18, r18
     a26:	33 1f       	adc	r19, r19
     a28:	44 1f       	adc	r20, r20
     a2a:	55 1f       	adc	r21, r21
     a2c:	6a 95       	dec	r22
     a2e:	d1 f7       	brne	.-12     	; 0xa24 <__unpack_f+0x54>
     a30:	83 e0       	ldi	r24, 0x03	; 3
     a32:	8c 93       	st	X, r24
     a34:	0d c0       	rjmp	.+26     	; 0xa50 <__unpack_f+0x80>
     a36:	22 0f       	add	r18, r18
     a38:	33 1f       	adc	r19, r19
     a3a:	44 1f       	adc	r20, r20
     a3c:	55 1f       	adc	r21, r21
     a3e:	12 96       	adiw	r26, 0x02	; 2
     a40:	8d 91       	ld	r24, X+
     a42:	9c 91       	ld	r25, X
     a44:	13 97       	sbiw	r26, 0x03	; 3
     a46:	01 97       	sbiw	r24, 0x01	; 1
     a48:	13 96       	adiw	r26, 0x03	; 3
     a4a:	9c 93       	st	X, r25
     a4c:	8e 93       	st	-X, r24
     a4e:	12 97       	sbiw	r26, 0x02	; 2
     a50:	20 30       	cpi	r18, 0x00	; 0
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	38 07       	cpc	r19, r24
     a56:	80 e0       	ldi	r24, 0x00	; 0
     a58:	48 07       	cpc	r20, r24
     a5a:	80 e4       	ldi	r24, 0x40	; 64
     a5c:	58 07       	cpc	r21, r24
     a5e:	58 f3       	brcs	.-42     	; 0xa36 <__unpack_f+0x66>
     a60:	14 96       	adiw	r26, 0x04	; 4
     a62:	2d 93       	st	X+, r18
     a64:	3d 93       	st	X+, r19
     a66:	4d 93       	st	X+, r20
     a68:	5c 93       	st	X, r21
     a6a:	17 97       	sbiw	r26, 0x07	; 7
     a6c:	08 95       	ret
     a6e:	2f 3f       	cpi	r18, 0xFF	; 255
     a70:	31 05       	cpc	r19, r1
     a72:	79 f4       	brne	.+30     	; 0xa92 <__unpack_f+0xc2>
     a74:	41 15       	cp	r20, r1
     a76:	51 05       	cpc	r21, r1
     a78:	61 05       	cpc	r22, r1
     a7a:	71 05       	cpc	r23, r1
     a7c:	19 f4       	brne	.+6      	; 0xa84 <__unpack_f+0xb4>
     a7e:	84 e0       	ldi	r24, 0x04	; 4
     a80:	8c 93       	st	X, r24
     a82:	08 95       	ret
     a84:	64 ff       	sbrs	r22, 4
     a86:	03 c0       	rjmp	.+6      	; 0xa8e <__unpack_f+0xbe>
     a88:	81 e0       	ldi	r24, 0x01	; 1
     a8a:	8c 93       	st	X, r24
     a8c:	12 c0       	rjmp	.+36     	; 0xab2 <__unpack_f+0xe2>
     a8e:	1c 92       	st	X, r1
     a90:	10 c0       	rjmp	.+32     	; 0xab2 <__unpack_f+0xe2>
     a92:	2f 57       	subi	r18, 0x7F	; 127
     a94:	30 40       	sbci	r19, 0x00	; 0
     a96:	13 96       	adiw	r26, 0x03	; 3
     a98:	3c 93       	st	X, r19
     a9a:	2e 93       	st	-X, r18
     a9c:	12 97       	sbiw	r26, 0x02	; 2
     a9e:	83 e0       	ldi	r24, 0x03	; 3
     aa0:	8c 93       	st	X, r24
     aa2:	87 e0       	ldi	r24, 0x07	; 7
     aa4:	44 0f       	add	r20, r20
     aa6:	55 1f       	adc	r21, r21
     aa8:	66 1f       	adc	r22, r22
     aaa:	77 1f       	adc	r23, r23
     aac:	8a 95       	dec	r24
     aae:	d1 f7       	brne	.-12     	; 0xaa4 <__unpack_f+0xd4>
     ab0:	70 64       	ori	r23, 0x40	; 64
     ab2:	14 96       	adiw	r26, 0x04	; 4
     ab4:	4d 93       	st	X+, r20
     ab6:	5d 93       	st	X+, r21
     ab8:	6d 93       	st	X+, r22
     aba:	7c 93       	st	X, r23
     abc:	17 97       	sbiw	r26, 0x07	; 7
     abe:	08 95       	ret

00000ac0 <__fpcmp_parts_f>:
     ac0:	1f 93       	push	r17
     ac2:	dc 01       	movw	r26, r24
     ac4:	fb 01       	movw	r30, r22
     ac6:	9c 91       	ld	r25, X
     ac8:	92 30       	cpi	r25, 0x02	; 2
     aca:	08 f4       	brcc	.+2      	; 0xace <__fpcmp_parts_f+0xe>
     acc:	47 c0       	rjmp	.+142    	; 0xb5c <__fpcmp_parts_f+0x9c>
     ace:	80 81       	ld	r24, Z
     ad0:	82 30       	cpi	r24, 0x02	; 2
     ad2:	08 f4       	brcc	.+2      	; 0xad6 <__fpcmp_parts_f+0x16>
     ad4:	43 c0       	rjmp	.+134    	; 0xb5c <__fpcmp_parts_f+0x9c>
     ad6:	94 30       	cpi	r25, 0x04	; 4
     ad8:	51 f4       	brne	.+20     	; 0xaee <__fpcmp_parts_f+0x2e>
     ada:	11 96       	adiw	r26, 0x01	; 1
     adc:	1c 91       	ld	r17, X
     ade:	84 30       	cpi	r24, 0x04	; 4
     ae0:	99 f5       	brne	.+102    	; 0xb48 <__fpcmp_parts_f+0x88>
     ae2:	81 81       	ldd	r24, Z+1	; 0x01
     ae4:	68 2f       	mov	r22, r24
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	61 1b       	sub	r22, r17
     aea:	71 09       	sbc	r23, r1
     aec:	3f c0       	rjmp	.+126    	; 0xb6c <__fpcmp_parts_f+0xac>
     aee:	84 30       	cpi	r24, 0x04	; 4
     af0:	21 f0       	breq	.+8      	; 0xafa <__fpcmp_parts_f+0x3a>
     af2:	92 30       	cpi	r25, 0x02	; 2
     af4:	31 f4       	brne	.+12     	; 0xb02 <__fpcmp_parts_f+0x42>
     af6:	82 30       	cpi	r24, 0x02	; 2
     af8:	b9 f1       	breq	.+110    	; 0xb68 <__fpcmp_parts_f+0xa8>
     afa:	81 81       	ldd	r24, Z+1	; 0x01
     afc:	88 23       	and	r24, r24
     afe:	89 f1       	breq	.+98     	; 0xb62 <__fpcmp_parts_f+0xa2>
     b00:	2d c0       	rjmp	.+90     	; 0xb5c <__fpcmp_parts_f+0x9c>
     b02:	11 96       	adiw	r26, 0x01	; 1
     b04:	1c 91       	ld	r17, X
     b06:	11 97       	sbiw	r26, 0x01	; 1
     b08:	82 30       	cpi	r24, 0x02	; 2
     b0a:	f1 f0       	breq	.+60     	; 0xb48 <__fpcmp_parts_f+0x88>
     b0c:	81 81       	ldd	r24, Z+1	; 0x01
     b0e:	18 17       	cp	r17, r24
     b10:	d9 f4       	brne	.+54     	; 0xb48 <__fpcmp_parts_f+0x88>
     b12:	12 96       	adiw	r26, 0x02	; 2
     b14:	2d 91       	ld	r18, X+
     b16:	3c 91       	ld	r19, X
     b18:	13 97       	sbiw	r26, 0x03	; 3
     b1a:	82 81       	ldd	r24, Z+2	; 0x02
     b1c:	93 81       	ldd	r25, Z+3	; 0x03
     b1e:	82 17       	cp	r24, r18
     b20:	93 07       	cpc	r25, r19
     b22:	94 f0       	brlt	.+36     	; 0xb48 <__fpcmp_parts_f+0x88>
     b24:	28 17       	cp	r18, r24
     b26:	39 07       	cpc	r19, r25
     b28:	bc f0       	brlt	.+46     	; 0xb58 <__fpcmp_parts_f+0x98>
     b2a:	14 96       	adiw	r26, 0x04	; 4
     b2c:	8d 91       	ld	r24, X+
     b2e:	9d 91       	ld	r25, X+
     b30:	0d 90       	ld	r0, X+
     b32:	bc 91       	ld	r27, X
     b34:	a0 2d       	mov	r26, r0
     b36:	24 81       	ldd	r18, Z+4	; 0x04
     b38:	35 81       	ldd	r19, Z+5	; 0x05
     b3a:	46 81       	ldd	r20, Z+6	; 0x06
     b3c:	57 81       	ldd	r21, Z+7	; 0x07
     b3e:	28 17       	cp	r18, r24
     b40:	39 07       	cpc	r19, r25
     b42:	4a 07       	cpc	r20, r26
     b44:	5b 07       	cpc	r21, r27
     b46:	18 f4       	brcc	.+6      	; 0xb4e <__fpcmp_parts_f+0x8e>
     b48:	11 23       	and	r17, r17
     b4a:	41 f0       	breq	.+16     	; 0xb5c <__fpcmp_parts_f+0x9c>
     b4c:	0a c0       	rjmp	.+20     	; 0xb62 <__fpcmp_parts_f+0xa2>
     b4e:	82 17       	cp	r24, r18
     b50:	93 07       	cpc	r25, r19
     b52:	a4 07       	cpc	r26, r20
     b54:	b5 07       	cpc	r27, r21
     b56:	40 f4       	brcc	.+16     	; 0xb68 <__fpcmp_parts_f+0xa8>
     b58:	11 23       	and	r17, r17
     b5a:	19 f0       	breq	.+6      	; 0xb62 <__fpcmp_parts_f+0xa2>
     b5c:	61 e0       	ldi	r22, 0x01	; 1
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	05 c0       	rjmp	.+10     	; 0xb6c <__fpcmp_parts_f+0xac>
     b62:	6f ef       	ldi	r22, 0xFF	; 255
     b64:	7f ef       	ldi	r23, 0xFF	; 255
     b66:	02 c0       	rjmp	.+4      	; 0xb6c <__fpcmp_parts_f+0xac>
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	70 e0       	ldi	r23, 0x00	; 0
     b6c:	cb 01       	movw	r24, r22
     b6e:	1f 91       	pop	r17
     b70:	08 95       	ret

00000b72 <DIO_VidSetPinDirection>:
/*
loc_u8port=port name 
loc_u8pin =pin number
loc_u8state=pin direction
*/
void DIO_VidSetPinDirection(uint8 loc_u8port,uint8 loc_u8pin, uint8 loc_u8state){
     b72:	df 93       	push	r29
     b74:	cf 93       	push	r28
     b76:	cd b7       	in	r28, 0x3d	; 61
     b78:	de b7       	in	r29, 0x3e	; 62
     b7a:	27 97       	sbiw	r28, 0x07	; 7
     b7c:	0f b6       	in	r0, 0x3f	; 63
     b7e:	f8 94       	cli
     b80:	de bf       	out	0x3e, r29	; 62
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	cd bf       	out	0x3d, r28	; 61
     b86:	89 83       	std	Y+1, r24	; 0x01
     b88:	6a 83       	std	Y+2, r22	; 0x02
     b8a:	4b 83       	std	Y+3, r20	; 0x03
	
	if(1==loc_u8state){
     b8c:	8b 81       	ldd	r24, Y+3	; 0x03
     b8e:	81 30       	cpi	r24, 0x01	; 1
     b90:	09 f0       	breq	.+2      	; 0xb94 <DIO_VidSetPinDirection+0x22>
     b92:	6f c0       	rjmp	.+222    	; 0xc72 <DIO_VidSetPinDirection+0x100>
	    switch(loc_u8port){
     b94:	89 81       	ldd	r24, Y+1	; 0x01
     b96:	28 2f       	mov	r18, r24
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	3f 83       	std	Y+7, r19	; 0x07
     b9c:	2e 83       	std	Y+6, r18	; 0x06
     b9e:	8e 81       	ldd	r24, Y+6	; 0x06
     ba0:	9f 81       	ldd	r25, Y+7	; 0x07
     ba2:	81 30       	cpi	r24, 0x01	; 1
     ba4:	91 05       	cpc	r25, r1
     ba6:	49 f1       	breq	.+82     	; 0xbfa <DIO_VidSetPinDirection+0x88>
     ba8:	2e 81       	ldd	r18, Y+6	; 0x06
     baa:	3f 81       	ldd	r19, Y+7	; 0x07
     bac:	22 30       	cpi	r18, 0x02	; 2
     bae:	31 05       	cpc	r19, r1
     bb0:	2c f4       	brge	.+10     	; 0xbbc <DIO_VidSetPinDirection+0x4a>
     bb2:	8e 81       	ldd	r24, Y+6	; 0x06
     bb4:	9f 81       	ldd	r25, Y+7	; 0x07
     bb6:	00 97       	sbiw	r24, 0x00	; 0
     bb8:	61 f0       	breq	.+24     	; 0xbd2 <DIO_VidSetPinDirection+0x60>
     bba:	d2 c0       	rjmp	.+420    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
     bbc:	2e 81       	ldd	r18, Y+6	; 0x06
     bbe:	3f 81       	ldd	r19, Y+7	; 0x07
     bc0:	22 30       	cpi	r18, 0x02	; 2
     bc2:	31 05       	cpc	r19, r1
     bc4:	71 f1       	breq	.+92     	; 0xc22 <DIO_VidSetPinDirection+0xb0>
     bc6:	8e 81       	ldd	r24, Y+6	; 0x06
     bc8:	9f 81       	ldd	r25, Y+7	; 0x07
     bca:	83 30       	cpi	r24, 0x03	; 3
     bcc:	91 05       	cpc	r25, r1
     bce:	e9 f1       	breq	.+122    	; 0xc4a <DIO_VidSetPinDirection+0xd8>
     bd0:	c7 c0       	rjmp	.+398    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 0:SET_BIT(DDRA,loc_u8pin);break;
     bd2:	aa e3       	ldi	r26, 0x3A	; 58
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	ea e3       	ldi	r30, 0x3A	; 58
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	80 81       	ld	r24, Z
     bdc:	48 2f       	mov	r20, r24
     bde:	8a 81       	ldd	r24, Y+2	; 0x02
     be0:	28 2f       	mov	r18, r24
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	02 2e       	mov	r0, r18
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <DIO_VidSetPinDirection+0x7e>
     bec:	88 0f       	add	r24, r24
     bee:	99 1f       	adc	r25, r25
     bf0:	0a 94       	dec	r0
     bf2:	e2 f7       	brpl	.-8      	; 0xbec <DIO_VidSetPinDirection+0x7a>
     bf4:	84 2b       	or	r24, r20
     bf6:	8c 93       	st	X, r24
     bf8:	b3 c0       	rjmp	.+358    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 1:SET_BIT(DDRB,loc_u8pin);break;
     bfa:	a7 e3       	ldi	r26, 0x37	; 55
     bfc:	b0 e0       	ldi	r27, 0x00	; 0
     bfe:	e7 e3       	ldi	r30, 0x37	; 55
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	80 81       	ld	r24, Z
     c04:	48 2f       	mov	r20, r24
     c06:	8a 81       	ldd	r24, Y+2	; 0x02
     c08:	28 2f       	mov	r18, r24
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	02 2e       	mov	r0, r18
     c12:	02 c0       	rjmp	.+4      	; 0xc18 <DIO_VidSetPinDirection+0xa6>
     c14:	88 0f       	add	r24, r24
     c16:	99 1f       	adc	r25, r25
     c18:	0a 94       	dec	r0
     c1a:	e2 f7       	brpl	.-8      	; 0xc14 <DIO_VidSetPinDirection+0xa2>
     c1c:	84 2b       	or	r24, r20
     c1e:	8c 93       	st	X, r24
     c20:	9f c0       	rjmp	.+318    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 2:SET_BIT(DDRC,loc_u8pin);break;
     c22:	a4 e3       	ldi	r26, 0x34	; 52
     c24:	b0 e0       	ldi	r27, 0x00	; 0
     c26:	e4 e3       	ldi	r30, 0x34	; 52
     c28:	f0 e0       	ldi	r31, 0x00	; 0
     c2a:	80 81       	ld	r24, Z
     c2c:	48 2f       	mov	r20, r24
     c2e:	8a 81       	ldd	r24, Y+2	; 0x02
     c30:	28 2f       	mov	r18, r24
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	02 2e       	mov	r0, r18
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <DIO_VidSetPinDirection+0xce>
     c3c:	88 0f       	add	r24, r24
     c3e:	99 1f       	adc	r25, r25
     c40:	0a 94       	dec	r0
     c42:	e2 f7       	brpl	.-8      	; 0xc3c <DIO_VidSetPinDirection+0xca>
     c44:	84 2b       	or	r24, r20
     c46:	8c 93       	st	X, r24
     c48:	8b c0       	rjmp	.+278    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 3:SET_BIT(DDRD,loc_u8pin);break;
     c4a:	a1 e3       	ldi	r26, 0x31	; 49
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	e1 e3       	ldi	r30, 0x31	; 49
     c50:	f0 e0       	ldi	r31, 0x00	; 0
     c52:	80 81       	ld	r24, Z
     c54:	48 2f       	mov	r20, r24
     c56:	8a 81       	ldd	r24, Y+2	; 0x02
     c58:	28 2f       	mov	r18, r24
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	02 2e       	mov	r0, r18
     c62:	02 c0       	rjmp	.+4      	; 0xc68 <DIO_VidSetPinDirection+0xf6>
     c64:	88 0f       	add	r24, r24
     c66:	99 1f       	adc	r25, r25
     c68:	0a 94       	dec	r0
     c6a:	e2 f7       	brpl	.-8      	; 0xc64 <DIO_VidSetPinDirection+0xf2>
     c6c:	84 2b       	or	r24, r20
     c6e:	8c 93       	st	X, r24
     c70:	77 c0       	rjmp	.+238    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
	 }
	}
	else if(0==loc_u8state){
     c72:	8b 81       	ldd	r24, Y+3	; 0x03
     c74:	88 23       	and	r24, r24
     c76:	09 f0       	breq	.+2      	; 0xc7a <DIO_VidSetPinDirection+0x108>
     c78:	73 c0       	rjmp	.+230    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
	    switch(loc_u8port){
     c7a:	89 81       	ldd	r24, Y+1	; 0x01
     c7c:	28 2f       	mov	r18, r24
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	3d 83       	std	Y+5, r19	; 0x05
     c82:	2c 83       	std	Y+4, r18	; 0x04
     c84:	8c 81       	ldd	r24, Y+4	; 0x04
     c86:	9d 81       	ldd	r25, Y+5	; 0x05
     c88:	81 30       	cpi	r24, 0x01	; 1
     c8a:	91 05       	cpc	r25, r1
     c8c:	59 f1       	breq	.+86     	; 0xce4 <DIO_VidSetPinDirection+0x172>
     c8e:	2c 81       	ldd	r18, Y+4	; 0x04
     c90:	3d 81       	ldd	r19, Y+5	; 0x05
     c92:	22 30       	cpi	r18, 0x02	; 2
     c94:	31 05       	cpc	r19, r1
     c96:	2c f4       	brge	.+10     	; 0xca2 <DIO_VidSetPinDirection+0x130>
     c98:	8c 81       	ldd	r24, Y+4	; 0x04
     c9a:	9d 81       	ldd	r25, Y+5	; 0x05
     c9c:	00 97       	sbiw	r24, 0x00	; 0
     c9e:	69 f0       	breq	.+26     	; 0xcba <DIO_VidSetPinDirection+0x148>
     ca0:	5f c0       	rjmp	.+190    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
     ca2:	2c 81       	ldd	r18, Y+4	; 0x04
     ca4:	3d 81       	ldd	r19, Y+5	; 0x05
     ca6:	22 30       	cpi	r18, 0x02	; 2
     ca8:	31 05       	cpc	r19, r1
     caa:	89 f1       	breq	.+98     	; 0xd0e <DIO_VidSetPinDirection+0x19c>
     cac:	8c 81       	ldd	r24, Y+4	; 0x04
     cae:	9d 81       	ldd	r25, Y+5	; 0x05
     cb0:	83 30       	cpi	r24, 0x03	; 3
     cb2:	91 05       	cpc	r25, r1
     cb4:	09 f4       	brne	.+2      	; 0xcb8 <DIO_VidSetPinDirection+0x146>
     cb6:	40 c0       	rjmp	.+128    	; 0xd38 <DIO_VidSetPinDirection+0x1c6>
     cb8:	53 c0       	rjmp	.+166    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 0:CLR_BIT(DDRA,loc_u8pin);break;
     cba:	aa e3       	ldi	r26, 0x3A	; 58
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	ea e3       	ldi	r30, 0x3A	; 58
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	80 81       	ld	r24, Z
     cc4:	48 2f       	mov	r20, r24
     cc6:	8a 81       	ldd	r24, Y+2	; 0x02
     cc8:	28 2f       	mov	r18, r24
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	02 2e       	mov	r0, r18
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <DIO_VidSetPinDirection+0x166>
     cd4:	88 0f       	add	r24, r24
     cd6:	99 1f       	adc	r25, r25
     cd8:	0a 94       	dec	r0
     cda:	e2 f7       	brpl	.-8      	; 0xcd4 <DIO_VidSetPinDirection+0x162>
     cdc:	80 95       	com	r24
     cde:	84 23       	and	r24, r20
     ce0:	8c 93       	st	X, r24
     ce2:	3e c0       	rjmp	.+124    	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 1:CLR_BIT(DDRB,loc_u8pin);break;
     ce4:	a7 e3       	ldi	r26, 0x37	; 55
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	e7 e3       	ldi	r30, 0x37	; 55
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	80 81       	ld	r24, Z
     cee:	48 2f       	mov	r20, r24
     cf0:	8a 81       	ldd	r24, Y+2	; 0x02
     cf2:	28 2f       	mov	r18, r24
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	02 2e       	mov	r0, r18
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <DIO_VidSetPinDirection+0x190>
     cfe:	88 0f       	add	r24, r24
     d00:	99 1f       	adc	r25, r25
     d02:	0a 94       	dec	r0
     d04:	e2 f7       	brpl	.-8      	; 0xcfe <DIO_VidSetPinDirection+0x18c>
     d06:	80 95       	com	r24
     d08:	84 23       	and	r24, r20
     d0a:	8c 93       	st	X, r24
     d0c:	29 c0       	rjmp	.+82     	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 2:CLR_BIT(DDRC,loc_u8pin);break;
     d0e:	a4 e3       	ldi	r26, 0x34	; 52
     d10:	b0 e0       	ldi	r27, 0x00	; 0
     d12:	e4 e3       	ldi	r30, 0x34	; 52
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	80 81       	ld	r24, Z
     d18:	48 2f       	mov	r20, r24
     d1a:	8a 81       	ldd	r24, Y+2	; 0x02
     d1c:	28 2f       	mov	r18, r24
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	02 2e       	mov	r0, r18
     d26:	02 c0       	rjmp	.+4      	; 0xd2c <DIO_VidSetPinDirection+0x1ba>
     d28:	88 0f       	add	r24, r24
     d2a:	99 1f       	adc	r25, r25
     d2c:	0a 94       	dec	r0
     d2e:	e2 f7       	brpl	.-8      	; 0xd28 <DIO_VidSetPinDirection+0x1b6>
     d30:	80 95       	com	r24
     d32:	84 23       	and	r24, r20
     d34:	8c 93       	st	X, r24
     d36:	14 c0       	rjmp	.+40     	; 0xd60 <DIO_VidSetPinDirection+0x1ee>
		case 3:CLR_BIT(DDRD,loc_u8pin);break;
     d38:	a1 e3       	ldi	r26, 0x31	; 49
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	e1 e3       	ldi	r30, 0x31	; 49
     d3e:	f0 e0       	ldi	r31, 0x00	; 0
     d40:	80 81       	ld	r24, Z
     d42:	48 2f       	mov	r20, r24
     d44:	8a 81       	ldd	r24, Y+2	; 0x02
     d46:	28 2f       	mov	r18, r24
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	02 2e       	mov	r0, r18
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <DIO_VidSetPinDirection+0x1e4>
     d52:	88 0f       	add	r24, r24
     d54:	99 1f       	adc	r25, r25
     d56:	0a 94       	dec	r0
     d58:	e2 f7       	brpl	.-8      	; 0xd52 <DIO_VidSetPinDirection+0x1e0>
     d5a:	80 95       	com	r24
     d5c:	84 23       	and	r24, r20
     d5e:	8c 93       	st	X, r24
	 }
	}
	
	
}
     d60:	27 96       	adiw	r28, 0x07	; 7
     d62:	0f b6       	in	r0, 0x3f	; 63
     d64:	f8 94       	cli
     d66:	de bf       	out	0x3e, r29	; 62
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	cd bf       	out	0x3d, r28	; 61
     d6c:	cf 91       	pop	r28
     d6e:	df 91       	pop	r29
     d70:	08 95       	ret

00000d72 <DIO_VidSetPinValue>:
void DIO_VidSetPinValue(uint8 loc_u8port,uint8 loc_u8pin, uint8 loc_u8value){
     d72:	df 93       	push	r29
     d74:	cf 93       	push	r28
     d76:	cd b7       	in	r28, 0x3d	; 61
     d78:	de b7       	in	r29, 0x3e	; 62
     d7a:	27 97       	sbiw	r28, 0x07	; 7
     d7c:	0f b6       	in	r0, 0x3f	; 63
     d7e:	f8 94       	cli
     d80:	de bf       	out	0x3e, r29	; 62
     d82:	0f be       	out	0x3f, r0	; 63
     d84:	cd bf       	out	0x3d, r28	; 61
     d86:	89 83       	std	Y+1, r24	; 0x01
     d88:	6a 83       	std	Y+2, r22	; 0x02
     d8a:	4b 83       	std	Y+3, r20	; 0x03
	
	if(1==loc_u8value){
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	81 30       	cpi	r24, 0x01	; 1
     d90:	09 f0       	breq	.+2      	; 0xd94 <DIO_VidSetPinValue+0x22>
     d92:	6f c0       	rjmp	.+222    	; 0xe72 <DIO_VidSetPinValue+0x100>
	    switch(loc_u8port){
     d94:	89 81       	ldd	r24, Y+1	; 0x01
     d96:	28 2f       	mov	r18, r24
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	3f 83       	std	Y+7, r19	; 0x07
     d9c:	2e 83       	std	Y+6, r18	; 0x06
     d9e:	8e 81       	ldd	r24, Y+6	; 0x06
     da0:	9f 81       	ldd	r25, Y+7	; 0x07
     da2:	81 30       	cpi	r24, 0x01	; 1
     da4:	91 05       	cpc	r25, r1
     da6:	49 f1       	breq	.+82     	; 0xdfa <DIO_VidSetPinValue+0x88>
     da8:	2e 81       	ldd	r18, Y+6	; 0x06
     daa:	3f 81       	ldd	r19, Y+7	; 0x07
     dac:	22 30       	cpi	r18, 0x02	; 2
     dae:	31 05       	cpc	r19, r1
     db0:	2c f4       	brge	.+10     	; 0xdbc <DIO_VidSetPinValue+0x4a>
     db2:	8e 81       	ldd	r24, Y+6	; 0x06
     db4:	9f 81       	ldd	r25, Y+7	; 0x07
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	61 f0       	breq	.+24     	; 0xdd2 <DIO_VidSetPinValue+0x60>
     dba:	d2 c0       	rjmp	.+420    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
     dbc:	2e 81       	ldd	r18, Y+6	; 0x06
     dbe:	3f 81       	ldd	r19, Y+7	; 0x07
     dc0:	22 30       	cpi	r18, 0x02	; 2
     dc2:	31 05       	cpc	r19, r1
     dc4:	71 f1       	breq	.+92     	; 0xe22 <DIO_VidSetPinValue+0xb0>
     dc6:	8e 81       	ldd	r24, Y+6	; 0x06
     dc8:	9f 81       	ldd	r25, Y+7	; 0x07
     dca:	83 30       	cpi	r24, 0x03	; 3
     dcc:	91 05       	cpc	r25, r1
     dce:	e9 f1       	breq	.+122    	; 0xe4a <DIO_VidSetPinValue+0xd8>
     dd0:	c7 c0       	rjmp	.+398    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 0:SET_BIT(PORTA,loc_u8pin);break;
     dd2:	ab e3       	ldi	r26, 0x3B	; 59
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	eb e3       	ldi	r30, 0x3B	; 59
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	80 81       	ld	r24, Z
     ddc:	48 2f       	mov	r20, r24
     dde:	8a 81       	ldd	r24, Y+2	; 0x02
     de0:	28 2f       	mov	r18, r24
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	02 2e       	mov	r0, r18
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <DIO_VidSetPinValue+0x7e>
     dec:	88 0f       	add	r24, r24
     dee:	99 1f       	adc	r25, r25
     df0:	0a 94       	dec	r0
     df2:	e2 f7       	brpl	.-8      	; 0xdec <DIO_VidSetPinValue+0x7a>
     df4:	84 2b       	or	r24, r20
     df6:	8c 93       	st	X, r24
     df8:	b3 c0       	rjmp	.+358    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 1:SET_BIT(PORTB,loc_u8pin);break;
     dfa:	a8 e3       	ldi	r26, 0x38	; 56
     dfc:	b0 e0       	ldi	r27, 0x00	; 0
     dfe:	e8 e3       	ldi	r30, 0x38	; 56
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	80 81       	ld	r24, Z
     e04:	48 2f       	mov	r20, r24
     e06:	8a 81       	ldd	r24, Y+2	; 0x02
     e08:	28 2f       	mov	r18, r24
     e0a:	30 e0       	ldi	r19, 0x00	; 0
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	02 2e       	mov	r0, r18
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <DIO_VidSetPinValue+0xa6>
     e14:	88 0f       	add	r24, r24
     e16:	99 1f       	adc	r25, r25
     e18:	0a 94       	dec	r0
     e1a:	e2 f7       	brpl	.-8      	; 0xe14 <DIO_VidSetPinValue+0xa2>
     e1c:	84 2b       	or	r24, r20
     e1e:	8c 93       	st	X, r24
     e20:	9f c0       	rjmp	.+318    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 2:SET_BIT(PORTC,loc_u8pin);break;
     e22:	a5 e3       	ldi	r26, 0x35	; 53
     e24:	b0 e0       	ldi	r27, 0x00	; 0
     e26:	e5 e3       	ldi	r30, 0x35	; 53
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	80 81       	ld	r24, Z
     e2c:	48 2f       	mov	r20, r24
     e2e:	8a 81       	ldd	r24, Y+2	; 0x02
     e30:	28 2f       	mov	r18, r24
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	02 2e       	mov	r0, r18
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <DIO_VidSetPinValue+0xce>
     e3c:	88 0f       	add	r24, r24
     e3e:	99 1f       	adc	r25, r25
     e40:	0a 94       	dec	r0
     e42:	e2 f7       	brpl	.-8      	; 0xe3c <DIO_VidSetPinValue+0xca>
     e44:	84 2b       	or	r24, r20
     e46:	8c 93       	st	X, r24
     e48:	8b c0       	rjmp	.+278    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 3:SET_BIT(PORTD,loc_u8pin);break;
     e4a:	a2 e3       	ldi	r26, 0x32	; 50
     e4c:	b0 e0       	ldi	r27, 0x00	; 0
     e4e:	e2 e3       	ldi	r30, 0x32	; 50
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	80 81       	ld	r24, Z
     e54:	48 2f       	mov	r20, r24
     e56:	8a 81       	ldd	r24, Y+2	; 0x02
     e58:	28 2f       	mov	r18, r24
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	02 2e       	mov	r0, r18
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <DIO_VidSetPinValue+0xf6>
     e64:	88 0f       	add	r24, r24
     e66:	99 1f       	adc	r25, r25
     e68:	0a 94       	dec	r0
     e6a:	e2 f7       	brpl	.-8      	; 0xe64 <DIO_VidSetPinValue+0xf2>
     e6c:	84 2b       	or	r24, r20
     e6e:	8c 93       	st	X, r24
     e70:	77 c0       	rjmp	.+238    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
	 }
	}
	else if(0==loc_u8value){
     e72:	8b 81       	ldd	r24, Y+3	; 0x03
     e74:	88 23       	and	r24, r24
     e76:	09 f0       	breq	.+2      	; 0xe7a <DIO_VidSetPinValue+0x108>
     e78:	73 c0       	rjmp	.+230    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
	    switch(loc_u8port){
     e7a:	89 81       	ldd	r24, Y+1	; 0x01
     e7c:	28 2f       	mov	r18, r24
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	3d 83       	std	Y+5, r19	; 0x05
     e82:	2c 83       	std	Y+4, r18	; 0x04
     e84:	8c 81       	ldd	r24, Y+4	; 0x04
     e86:	9d 81       	ldd	r25, Y+5	; 0x05
     e88:	81 30       	cpi	r24, 0x01	; 1
     e8a:	91 05       	cpc	r25, r1
     e8c:	59 f1       	breq	.+86     	; 0xee4 <DIO_VidSetPinValue+0x172>
     e8e:	2c 81       	ldd	r18, Y+4	; 0x04
     e90:	3d 81       	ldd	r19, Y+5	; 0x05
     e92:	22 30       	cpi	r18, 0x02	; 2
     e94:	31 05       	cpc	r19, r1
     e96:	2c f4       	brge	.+10     	; 0xea2 <DIO_VidSetPinValue+0x130>
     e98:	8c 81       	ldd	r24, Y+4	; 0x04
     e9a:	9d 81       	ldd	r25, Y+5	; 0x05
     e9c:	00 97       	sbiw	r24, 0x00	; 0
     e9e:	69 f0       	breq	.+26     	; 0xeba <DIO_VidSetPinValue+0x148>
     ea0:	5f c0       	rjmp	.+190    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
     ea2:	2c 81       	ldd	r18, Y+4	; 0x04
     ea4:	3d 81       	ldd	r19, Y+5	; 0x05
     ea6:	22 30       	cpi	r18, 0x02	; 2
     ea8:	31 05       	cpc	r19, r1
     eaa:	89 f1       	breq	.+98     	; 0xf0e <DIO_VidSetPinValue+0x19c>
     eac:	8c 81       	ldd	r24, Y+4	; 0x04
     eae:	9d 81       	ldd	r25, Y+5	; 0x05
     eb0:	83 30       	cpi	r24, 0x03	; 3
     eb2:	91 05       	cpc	r25, r1
     eb4:	09 f4       	brne	.+2      	; 0xeb8 <DIO_VidSetPinValue+0x146>
     eb6:	40 c0       	rjmp	.+128    	; 0xf38 <DIO_VidSetPinValue+0x1c6>
     eb8:	53 c0       	rjmp	.+166    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 0:CLR_BIT(PORTA,loc_u8pin);break;
     eba:	ab e3       	ldi	r26, 0x3B	; 59
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	eb e3       	ldi	r30, 0x3B	; 59
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	80 81       	ld	r24, Z
     ec4:	48 2f       	mov	r20, r24
     ec6:	8a 81       	ldd	r24, Y+2	; 0x02
     ec8:	28 2f       	mov	r18, r24
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	02 2e       	mov	r0, r18
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <DIO_VidSetPinValue+0x166>
     ed4:	88 0f       	add	r24, r24
     ed6:	99 1f       	adc	r25, r25
     ed8:	0a 94       	dec	r0
     eda:	e2 f7       	brpl	.-8      	; 0xed4 <DIO_VidSetPinValue+0x162>
     edc:	80 95       	com	r24
     ede:	84 23       	and	r24, r20
     ee0:	8c 93       	st	X, r24
     ee2:	3e c0       	rjmp	.+124    	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 1:CLR_BIT(PORTB,loc_u8pin);break;
     ee4:	a8 e3       	ldi	r26, 0x38	; 56
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	e8 e3       	ldi	r30, 0x38	; 56
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	80 81       	ld	r24, Z
     eee:	48 2f       	mov	r20, r24
     ef0:	8a 81       	ldd	r24, Y+2	; 0x02
     ef2:	28 2f       	mov	r18, r24
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	02 2e       	mov	r0, r18
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <DIO_VidSetPinValue+0x190>
     efe:	88 0f       	add	r24, r24
     f00:	99 1f       	adc	r25, r25
     f02:	0a 94       	dec	r0
     f04:	e2 f7       	brpl	.-8      	; 0xefe <DIO_VidSetPinValue+0x18c>
     f06:	80 95       	com	r24
     f08:	84 23       	and	r24, r20
     f0a:	8c 93       	st	X, r24
     f0c:	29 c0       	rjmp	.+82     	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 2:CLR_BIT(PORTC,loc_u8pin);break;
     f0e:	a5 e3       	ldi	r26, 0x35	; 53
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	e5 e3       	ldi	r30, 0x35	; 53
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	80 81       	ld	r24, Z
     f18:	48 2f       	mov	r20, r24
     f1a:	8a 81       	ldd	r24, Y+2	; 0x02
     f1c:	28 2f       	mov	r18, r24
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	81 e0       	ldi	r24, 0x01	; 1
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	02 2e       	mov	r0, r18
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <DIO_VidSetPinValue+0x1ba>
     f28:	88 0f       	add	r24, r24
     f2a:	99 1f       	adc	r25, r25
     f2c:	0a 94       	dec	r0
     f2e:	e2 f7       	brpl	.-8      	; 0xf28 <DIO_VidSetPinValue+0x1b6>
     f30:	80 95       	com	r24
     f32:	84 23       	and	r24, r20
     f34:	8c 93       	st	X, r24
     f36:	14 c0       	rjmp	.+40     	; 0xf60 <DIO_VidSetPinValue+0x1ee>
		case 3:CLR_BIT(PORTD,loc_u8pin);break;
     f38:	a2 e3       	ldi	r26, 0x32	; 50
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	e2 e3       	ldi	r30, 0x32	; 50
     f3e:	f0 e0       	ldi	r31, 0x00	; 0
     f40:	80 81       	ld	r24, Z
     f42:	48 2f       	mov	r20, r24
     f44:	8a 81       	ldd	r24, Y+2	; 0x02
     f46:	28 2f       	mov	r18, r24
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	02 2e       	mov	r0, r18
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <DIO_VidSetPinValue+0x1e4>
     f52:	88 0f       	add	r24, r24
     f54:	99 1f       	adc	r25, r25
     f56:	0a 94       	dec	r0
     f58:	e2 f7       	brpl	.-8      	; 0xf52 <DIO_VidSetPinValue+0x1e0>
     f5a:	80 95       	com	r24
     f5c:	84 23       	and	r24, r20
     f5e:	8c 93       	st	X, r24
	 }
	}
}
     f60:	27 96       	adiw	r28, 0x07	; 7
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	f8 94       	cli
     f66:	de bf       	out	0x3e, r29	; 62
     f68:	0f be       	out	0x3f, r0	; 63
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	cf 91       	pop	r28
     f6e:	df 91       	pop	r29
     f70:	08 95       	ret

00000f72 <DIO_VidSetPortDirection>:
void DIO_VidSetPortDirection(uint8 loc_u8port,uint8 loc_u8value){
     f72:	df 93       	push	r29
     f74:	cf 93       	push	r28
     f76:	00 d0       	rcall	.+0      	; 0xf78 <DIO_VidSetPortDirection+0x6>
     f78:	00 d0       	rcall	.+0      	; 0xf7a <DIO_VidSetPortDirection+0x8>
     f7a:	cd b7       	in	r28, 0x3d	; 61
     f7c:	de b7       	in	r29, 0x3e	; 62
     f7e:	89 83       	std	Y+1, r24	; 0x01
     f80:	6a 83       	std	Y+2, r22	; 0x02
	

			switch(loc_u8port){
     f82:	89 81       	ldd	r24, Y+1	; 0x01
     f84:	28 2f       	mov	r18, r24
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	3c 83       	std	Y+4, r19	; 0x04
     f8a:	2b 83       	std	Y+3, r18	; 0x03
     f8c:	8b 81       	ldd	r24, Y+3	; 0x03
     f8e:	9c 81       	ldd	r25, Y+4	; 0x04
     f90:	81 30       	cpi	r24, 0x01	; 1
     f92:	91 05       	cpc	r25, r1
     f94:	d1 f0       	breq	.+52     	; 0xfca <DIO_VidSetPortDirection+0x58>
     f96:	2b 81       	ldd	r18, Y+3	; 0x03
     f98:	3c 81       	ldd	r19, Y+4	; 0x04
     f9a:	22 30       	cpi	r18, 0x02	; 2
     f9c:	31 05       	cpc	r19, r1
     f9e:	2c f4       	brge	.+10     	; 0xfaa <DIO_VidSetPortDirection+0x38>
     fa0:	8b 81       	ldd	r24, Y+3	; 0x03
     fa2:	9c 81       	ldd	r25, Y+4	; 0x04
     fa4:	00 97       	sbiw	r24, 0x00	; 0
     fa6:	61 f0       	breq	.+24     	; 0xfc0 <DIO_VidSetPortDirection+0x4e>
     fa8:	1e c0       	rjmp	.+60     	; 0xfe6 <DIO_VidSetPortDirection+0x74>
     faa:	2b 81       	ldd	r18, Y+3	; 0x03
     fac:	3c 81       	ldd	r19, Y+4	; 0x04
     fae:	22 30       	cpi	r18, 0x02	; 2
     fb0:	31 05       	cpc	r19, r1
     fb2:	81 f0       	breq	.+32     	; 0xfd4 <DIO_VidSetPortDirection+0x62>
     fb4:	8b 81       	ldd	r24, Y+3	; 0x03
     fb6:	9c 81       	ldd	r25, Y+4	; 0x04
     fb8:	83 30       	cpi	r24, 0x03	; 3
     fba:	91 05       	cpc	r25, r1
     fbc:	81 f0       	breq	.+32     	; 0xfde <DIO_VidSetPortDirection+0x6c>
     fbe:	13 c0       	rjmp	.+38     	; 0xfe6 <DIO_VidSetPortDirection+0x74>

			case 0:DDRA=loc_u8value;break;
     fc0:	ea e3       	ldi	r30, 0x3A	; 58
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	8a 81       	ldd	r24, Y+2	; 0x02
     fc6:	80 83       	st	Z, r24
     fc8:	0e c0       	rjmp	.+28     	; 0xfe6 <DIO_VidSetPortDirection+0x74>
			case 1:DDRB=loc_u8value;break;
     fca:	e7 e3       	ldi	r30, 0x37	; 55
     fcc:	f0 e0       	ldi	r31, 0x00	; 0
     fce:	8a 81       	ldd	r24, Y+2	; 0x02
     fd0:	80 83       	st	Z, r24
     fd2:	09 c0       	rjmp	.+18     	; 0xfe6 <DIO_VidSetPortDirection+0x74>
			case 2:DDRC=loc_u8value;break;
     fd4:	e4 e3       	ldi	r30, 0x34	; 52
     fd6:	f0 e0       	ldi	r31, 0x00	; 0
     fd8:	8a 81       	ldd	r24, Y+2	; 0x02
     fda:	80 83       	st	Z, r24
     fdc:	04 c0       	rjmp	.+8      	; 0xfe6 <DIO_VidSetPortDirection+0x74>
			case 3:DDRD=loc_u8value;break;
     fde:	e1 e3       	ldi	r30, 0x31	; 49
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	8a 81       	ldd	r24, Y+2	; 0x02
     fe4:	80 83       	st	Z, r24

			}
		
}
     fe6:	0f 90       	pop	r0
     fe8:	0f 90       	pop	r0
     fea:	0f 90       	pop	r0
     fec:	0f 90       	pop	r0
     fee:	cf 91       	pop	r28
     ff0:	df 91       	pop	r29
     ff2:	08 95       	ret

00000ff4 <DIO_VidSetPortValue>:
void DIO_VidSetPortValue(uint8 loc_u8port,uint8 loc_u8value){
     ff4:	df 93       	push	r29
     ff6:	cf 93       	push	r28
     ff8:	00 d0       	rcall	.+0      	; 0xffa <DIO_VidSetPortValue+0x6>
     ffa:	00 d0       	rcall	.+0      	; 0xffc <DIO_VidSetPortValue+0x8>
     ffc:	cd b7       	in	r28, 0x3d	; 61
     ffe:	de b7       	in	r29, 0x3e	; 62
    1000:	89 83       	std	Y+1, r24	; 0x01
    1002:	6a 83       	std	Y+2, r22	; 0x02
	
			switch(loc_u8port){
    1004:	89 81       	ldd	r24, Y+1	; 0x01
    1006:	28 2f       	mov	r18, r24
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	3c 83       	std	Y+4, r19	; 0x04
    100c:	2b 83       	std	Y+3, r18	; 0x03
    100e:	8b 81       	ldd	r24, Y+3	; 0x03
    1010:	9c 81       	ldd	r25, Y+4	; 0x04
    1012:	81 30       	cpi	r24, 0x01	; 1
    1014:	91 05       	cpc	r25, r1
    1016:	d1 f0       	breq	.+52     	; 0x104c <DIO_VidSetPortValue+0x58>
    1018:	2b 81       	ldd	r18, Y+3	; 0x03
    101a:	3c 81       	ldd	r19, Y+4	; 0x04
    101c:	22 30       	cpi	r18, 0x02	; 2
    101e:	31 05       	cpc	r19, r1
    1020:	2c f4       	brge	.+10     	; 0x102c <DIO_VidSetPortValue+0x38>
    1022:	8b 81       	ldd	r24, Y+3	; 0x03
    1024:	9c 81       	ldd	r25, Y+4	; 0x04
    1026:	00 97       	sbiw	r24, 0x00	; 0
    1028:	61 f0       	breq	.+24     	; 0x1042 <DIO_VidSetPortValue+0x4e>
    102a:	1e c0       	rjmp	.+60     	; 0x1068 <DIO_VidSetPortValue+0x74>
    102c:	2b 81       	ldd	r18, Y+3	; 0x03
    102e:	3c 81       	ldd	r19, Y+4	; 0x04
    1030:	22 30       	cpi	r18, 0x02	; 2
    1032:	31 05       	cpc	r19, r1
    1034:	81 f0       	breq	.+32     	; 0x1056 <DIO_VidSetPortValue+0x62>
    1036:	8b 81       	ldd	r24, Y+3	; 0x03
    1038:	9c 81       	ldd	r25, Y+4	; 0x04
    103a:	83 30       	cpi	r24, 0x03	; 3
    103c:	91 05       	cpc	r25, r1
    103e:	81 f0       	breq	.+32     	; 0x1060 <DIO_VidSetPortValue+0x6c>
    1040:	13 c0       	rjmp	.+38     	; 0x1068 <DIO_VidSetPortValue+0x74>

			case 0:PORTA=loc_u8value;break;
    1042:	eb e3       	ldi	r30, 0x3B	; 59
    1044:	f0 e0       	ldi	r31, 0x00	; 0
    1046:	8a 81       	ldd	r24, Y+2	; 0x02
    1048:	80 83       	st	Z, r24
    104a:	0e c0       	rjmp	.+28     	; 0x1068 <DIO_VidSetPortValue+0x74>
			case 1:PORTB=loc_u8value;break;
    104c:	e8 e3       	ldi	r30, 0x38	; 56
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	8a 81       	ldd	r24, Y+2	; 0x02
    1052:	80 83       	st	Z, r24
    1054:	09 c0       	rjmp	.+18     	; 0x1068 <DIO_VidSetPortValue+0x74>
			case 2:PORTC=loc_u8value;break;
    1056:	e5 e3       	ldi	r30, 0x35	; 53
    1058:	f0 e0       	ldi	r31, 0x00	; 0
    105a:	8a 81       	ldd	r24, Y+2	; 0x02
    105c:	80 83       	st	Z, r24
    105e:	04 c0       	rjmp	.+8      	; 0x1068 <DIO_VidSetPortValue+0x74>
			case 3:PORTD=loc_u8value;break;
    1060:	e2 e3       	ldi	r30, 0x32	; 50
    1062:	f0 e0       	ldi	r31, 0x00	; 0
    1064:	8a 81       	ldd	r24, Y+2	; 0x02
    1066:	80 83       	st	Z, r24

			}
	
}
    1068:	0f 90       	pop	r0
    106a:	0f 90       	pop	r0
    106c:	0f 90       	pop	r0
    106e:	0f 90       	pop	r0
    1070:	cf 91       	pop	r28
    1072:	df 91       	pop	r29
    1074:	08 95       	ret

00001076 <DIO_u8GetPinValue>:
uint8 DIO_u8GetPinValue(uint8 loc_u8port,uint8 loc_u8pin){
    1076:	df 93       	push	r29
    1078:	cf 93       	push	r28
    107a:	00 d0       	rcall	.+0      	; 0x107c <DIO_u8GetPinValue+0x6>
    107c:	00 d0       	rcall	.+0      	; 0x107e <DIO_u8GetPinValue+0x8>
    107e:	0f 92       	push	r0
    1080:	cd b7       	in	r28, 0x3d	; 61
    1082:	de b7       	in	r29, 0x3e	; 62
    1084:	8a 83       	std	Y+2, r24	; 0x02
    1086:	6b 83       	std	Y+3, r22	; 0x03
	uint8 VALUE;
	switch(loc_u8port){
    1088:	8a 81       	ldd	r24, Y+2	; 0x02
    108a:	28 2f       	mov	r18, r24
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	3d 83       	std	Y+5, r19	; 0x05
    1090:	2c 83       	std	Y+4, r18	; 0x04
    1092:	4c 81       	ldd	r20, Y+4	; 0x04
    1094:	5d 81       	ldd	r21, Y+5	; 0x05
    1096:	41 30       	cpi	r20, 0x01	; 1
    1098:	51 05       	cpc	r21, r1
    109a:	41 f1       	breq	.+80     	; 0x10ec <DIO_u8GetPinValue+0x76>
    109c:	8c 81       	ldd	r24, Y+4	; 0x04
    109e:	9d 81       	ldd	r25, Y+5	; 0x05
    10a0:	82 30       	cpi	r24, 0x02	; 2
    10a2:	91 05       	cpc	r25, r1
    10a4:	34 f4       	brge	.+12     	; 0x10b2 <DIO_u8GetPinValue+0x3c>
    10a6:	2c 81       	ldd	r18, Y+4	; 0x04
    10a8:	3d 81       	ldd	r19, Y+5	; 0x05
    10aa:	21 15       	cp	r18, r1
    10ac:	31 05       	cpc	r19, r1
    10ae:	61 f0       	breq	.+24     	; 0x10c8 <DIO_u8GetPinValue+0x52>
    10b0:	52 c0       	rjmp	.+164    	; 0x1156 <__stack+0x57>
    10b2:	4c 81       	ldd	r20, Y+4	; 0x04
    10b4:	5d 81       	ldd	r21, Y+5	; 0x05
    10b6:	42 30       	cpi	r20, 0x02	; 2
    10b8:	51 05       	cpc	r21, r1
    10ba:	51 f1       	breq	.+84     	; 0x1110 <__stack+0x11>
    10bc:	8c 81       	ldd	r24, Y+4	; 0x04
    10be:	9d 81       	ldd	r25, Y+5	; 0x05
    10c0:	83 30       	cpi	r24, 0x03	; 3
    10c2:	91 05       	cpc	r25, r1
    10c4:	b9 f1       	breq	.+110    	; 0x1134 <__stack+0x35>
    10c6:	47 c0       	rjmp	.+142    	; 0x1156 <__stack+0x57>
		case 0:VALUE=GET_BIT(PINA,loc_u8pin); break;
    10c8:	e9 e3       	ldi	r30, 0x39	; 57
    10ca:	f0 e0       	ldi	r31, 0x00	; 0
    10cc:	80 81       	ld	r24, Z
    10ce:	28 2f       	mov	r18, r24
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	8b 81       	ldd	r24, Y+3	; 0x03
    10d4:	88 2f       	mov	r24, r24
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	a9 01       	movw	r20, r18
    10da:	02 c0       	rjmp	.+4      	; 0x10e0 <DIO_u8GetPinValue+0x6a>
    10dc:	55 95       	asr	r21
    10de:	47 95       	ror	r20
    10e0:	8a 95       	dec	r24
    10e2:	e2 f7       	brpl	.-8      	; 0x10dc <DIO_u8GetPinValue+0x66>
    10e4:	ca 01       	movw	r24, r20
    10e6:	81 70       	andi	r24, 0x01	; 1
    10e8:	89 83       	std	Y+1, r24	; 0x01
    10ea:	35 c0       	rjmp	.+106    	; 0x1156 <__stack+0x57>
		case 1:VALUE=GET_BIT(PINB,loc_u8pin); break;
    10ec:	e6 e3       	ldi	r30, 0x36	; 54
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	80 81       	ld	r24, Z
    10f2:	28 2f       	mov	r18, r24
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	8b 81       	ldd	r24, Y+3	; 0x03
    10f8:	88 2f       	mov	r24, r24
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	a9 01       	movw	r20, r18
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <__stack+0x5>
    1100:	55 95       	asr	r21
    1102:	47 95       	ror	r20
    1104:	8a 95       	dec	r24
    1106:	e2 f7       	brpl	.-8      	; 0x1100 <__stack+0x1>
    1108:	ca 01       	movw	r24, r20
    110a:	81 70       	andi	r24, 0x01	; 1
    110c:	89 83       	std	Y+1, r24	; 0x01
    110e:	23 c0       	rjmp	.+70     	; 0x1156 <__stack+0x57>
		case 2:VALUE=GET_BIT(PINC,loc_u8pin); break;
    1110:	e3 e3       	ldi	r30, 0x33	; 51
    1112:	f0 e0       	ldi	r31, 0x00	; 0
    1114:	80 81       	ld	r24, Z
    1116:	28 2f       	mov	r18, r24
    1118:	30 e0       	ldi	r19, 0x00	; 0
    111a:	8b 81       	ldd	r24, Y+3	; 0x03
    111c:	88 2f       	mov	r24, r24
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	a9 01       	movw	r20, r18
    1122:	02 c0       	rjmp	.+4      	; 0x1128 <__stack+0x29>
    1124:	55 95       	asr	r21
    1126:	47 95       	ror	r20
    1128:	8a 95       	dec	r24
    112a:	e2 f7       	brpl	.-8      	; 0x1124 <__stack+0x25>
    112c:	ca 01       	movw	r24, r20
    112e:	81 70       	andi	r24, 0x01	; 1
    1130:	89 83       	std	Y+1, r24	; 0x01
    1132:	11 c0       	rjmp	.+34     	; 0x1156 <__stack+0x57>
		case 3:VALUE=GET_BIT(PIND,loc_u8pin); break;
    1134:	e0 e3       	ldi	r30, 0x30	; 48
    1136:	f0 e0       	ldi	r31, 0x00	; 0
    1138:	80 81       	ld	r24, Z
    113a:	28 2f       	mov	r18, r24
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	88 2f       	mov	r24, r24
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	a9 01       	movw	r20, r18
    1146:	02 c0       	rjmp	.+4      	; 0x114c <__stack+0x4d>
    1148:	55 95       	asr	r21
    114a:	47 95       	ror	r20
    114c:	8a 95       	dec	r24
    114e:	e2 f7       	brpl	.-8      	; 0x1148 <__stack+0x49>
    1150:	ca 01       	movw	r24, r20
    1152:	81 70       	andi	r24, 0x01	; 1
    1154:	89 83       	std	Y+1, r24	; 0x01
	 }
	 return VALUE;
    1156:	89 81       	ldd	r24, Y+1	; 0x01
}
    1158:	0f 90       	pop	r0
    115a:	0f 90       	pop	r0
    115c:	0f 90       	pop	r0
    115e:	0f 90       	pop	r0
    1160:	0f 90       	pop	r0
    1162:	cf 91       	pop	r28
    1164:	df 91       	pop	r29
    1166:	08 95       	ret

00001168 <DIO_VidTogBit>:

void DIO_VidTogBit(uint8 loc_u8port,uint8 LOC_u8BitNum){
    1168:	df 93       	push	r29
    116a:	cf 93       	push	r28
    116c:	00 d0       	rcall	.+0      	; 0x116e <DIO_VidTogBit+0x6>
    116e:	00 d0       	rcall	.+0      	; 0x1170 <DIO_VidTogBit+0x8>
    1170:	cd b7       	in	r28, 0x3d	; 61
    1172:	de b7       	in	r29, 0x3e	; 62
    1174:	89 83       	std	Y+1, r24	; 0x01
    1176:	6a 83       	std	Y+2, r22	; 0x02
	switch(loc_u8port){
    1178:	89 81       	ldd	r24, Y+1	; 0x01
    117a:	28 2f       	mov	r18, r24
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	3c 83       	std	Y+4, r19	; 0x04
    1180:	2b 83       	std	Y+3, r18	; 0x03
    1182:	8b 81       	ldd	r24, Y+3	; 0x03
    1184:	9c 81       	ldd	r25, Y+4	; 0x04
    1186:	81 30       	cpi	r24, 0x01	; 1
    1188:	91 05       	cpc	r25, r1
    118a:	49 f1       	breq	.+82     	; 0x11de <DIO_VidTogBit+0x76>
    118c:	2b 81       	ldd	r18, Y+3	; 0x03
    118e:	3c 81       	ldd	r19, Y+4	; 0x04
    1190:	22 30       	cpi	r18, 0x02	; 2
    1192:	31 05       	cpc	r19, r1
    1194:	2c f4       	brge	.+10     	; 0x11a0 <DIO_VidTogBit+0x38>
    1196:	8b 81       	ldd	r24, Y+3	; 0x03
    1198:	9c 81       	ldd	r25, Y+4	; 0x04
    119a:	00 97       	sbiw	r24, 0x00	; 0
    119c:	61 f0       	breq	.+24     	; 0x11b6 <DIO_VidTogBit+0x4e>
    119e:	5a c0       	rjmp	.+180    	; 0x1254 <DIO_VidTogBit+0xec>
    11a0:	2b 81       	ldd	r18, Y+3	; 0x03
    11a2:	3c 81       	ldd	r19, Y+4	; 0x04
    11a4:	22 30       	cpi	r18, 0x02	; 2
    11a6:	31 05       	cpc	r19, r1
    11a8:	71 f1       	breq	.+92     	; 0x1206 <DIO_VidTogBit+0x9e>
    11aa:	8b 81       	ldd	r24, Y+3	; 0x03
    11ac:	9c 81       	ldd	r25, Y+4	; 0x04
    11ae:	83 30       	cpi	r24, 0x03	; 3
    11b0:	91 05       	cpc	r25, r1
    11b2:	e9 f1       	breq	.+122    	; 0x122e <DIO_VidTogBit+0xc6>
    11b4:	4f c0       	rjmp	.+158    	; 0x1254 <DIO_VidTogBit+0xec>
		case 0: TOG_BIT(PORTA,LOC_u8BitNum); break;
    11b6:	ab e3       	ldi	r26, 0x3B	; 59
    11b8:	b0 e0       	ldi	r27, 0x00	; 0
    11ba:	eb e3       	ldi	r30, 0x3B	; 59
    11bc:	f0 e0       	ldi	r31, 0x00	; 0
    11be:	80 81       	ld	r24, Z
    11c0:	48 2f       	mov	r20, r24
    11c2:	8a 81       	ldd	r24, Y+2	; 0x02
    11c4:	28 2f       	mov	r18, r24
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	81 e0       	ldi	r24, 0x01	; 1
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	02 2e       	mov	r0, r18
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <DIO_VidTogBit+0x6c>
    11d0:	88 0f       	add	r24, r24
    11d2:	99 1f       	adc	r25, r25
    11d4:	0a 94       	dec	r0
    11d6:	e2 f7       	brpl	.-8      	; 0x11d0 <DIO_VidTogBit+0x68>
    11d8:	84 27       	eor	r24, r20
    11da:	8c 93       	st	X, r24
    11dc:	3b c0       	rjmp	.+118    	; 0x1254 <DIO_VidTogBit+0xec>
		case 1: TOG_BIT(PORTB,LOC_u8BitNum); break;
    11de:	a8 e3       	ldi	r26, 0x38	; 56
    11e0:	b0 e0       	ldi	r27, 0x00	; 0
    11e2:	e8 e3       	ldi	r30, 0x38	; 56
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	80 81       	ld	r24, Z
    11e8:	48 2f       	mov	r20, r24
    11ea:	8a 81       	ldd	r24, Y+2	; 0x02
    11ec:	28 2f       	mov	r18, r24
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	02 2e       	mov	r0, r18
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <DIO_VidTogBit+0x94>
    11f8:	88 0f       	add	r24, r24
    11fa:	99 1f       	adc	r25, r25
    11fc:	0a 94       	dec	r0
    11fe:	e2 f7       	brpl	.-8      	; 0x11f8 <DIO_VidTogBit+0x90>
    1200:	84 27       	eor	r24, r20
    1202:	8c 93       	st	X, r24
    1204:	27 c0       	rjmp	.+78     	; 0x1254 <DIO_VidTogBit+0xec>
		case 2: TOG_BIT(PORTC,LOC_u8BitNum); break;
    1206:	a5 e3       	ldi	r26, 0x35	; 53
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	e5 e3       	ldi	r30, 0x35	; 53
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	48 2f       	mov	r20, r24
    1212:	8a 81       	ldd	r24, Y+2	; 0x02
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	81 e0       	ldi	r24, 0x01	; 1
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	02 2e       	mov	r0, r18
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <DIO_VidTogBit+0xbc>
    1220:	88 0f       	add	r24, r24
    1222:	99 1f       	adc	r25, r25
    1224:	0a 94       	dec	r0
    1226:	e2 f7       	brpl	.-8      	; 0x1220 <DIO_VidTogBit+0xb8>
    1228:	84 27       	eor	r24, r20
    122a:	8c 93       	st	X, r24
    122c:	13 c0       	rjmp	.+38     	; 0x1254 <DIO_VidTogBit+0xec>
		case 3: TOG_BIT(PORTD,LOC_u8BitNum); break;
    122e:	a2 e3       	ldi	r26, 0x32	; 50
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	e2 e3       	ldi	r30, 0x32	; 50
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	80 81       	ld	r24, Z
    1238:	48 2f       	mov	r20, r24
    123a:	8a 81       	ldd	r24, Y+2	; 0x02
    123c:	28 2f       	mov	r18, r24
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	02 2e       	mov	r0, r18
    1246:	02 c0       	rjmp	.+4      	; 0x124c <DIO_VidTogBit+0xe4>
    1248:	88 0f       	add	r24, r24
    124a:	99 1f       	adc	r25, r25
    124c:	0a 94       	dec	r0
    124e:	e2 f7       	brpl	.-8      	; 0x1248 <DIO_VidTogBit+0xe0>
    1250:	84 27       	eor	r24, r20
    1252:	8c 93       	st	X, r24
	}	
}
    1254:	0f 90       	pop	r0
    1256:	0f 90       	pop	r0
    1258:	0f 90       	pop	r0
    125a:	0f 90       	pop	r0
    125c:	cf 91       	pop	r28
    125e:	df 91       	pop	r29
    1260:	08 95       	ret

00001262 <usart_init>:
#include <avr/io.h>
#include "usart_driver.h"

void usart_init(unsigned short int baudrate)
{
    1262:	df 93       	push	r29
    1264:	cf 93       	push	r28
    1266:	00 d0       	rcall	.+0      	; 0x1268 <usart_init+0x6>
    1268:	00 d0       	rcall	.+0      	; 0x126a <usart_init+0x8>
    126a:	cd b7       	in	r28, 0x3d	; 61
    126c:	de b7       	in	r29, 0x3e	; 62
    126e:	9c 83       	std	Y+4, r25	; 0x04
    1270:	8b 83       	std	Y+3, r24	; 0x03
	//Set baud rate
	unsigned short int UBRRVAL=(FCLK_SYSTEM/(baudrate*16UL))-1;
    1272:	8b 81       	ldd	r24, Y+3	; 0x03
    1274:	9c 81       	ldd	r25, Y+4	; 0x04
    1276:	cc 01       	movw	r24, r24
    1278:	a0 e0       	ldi	r26, 0x00	; 0
    127a:	b0 e0       	ldi	r27, 0x00	; 0
    127c:	88 0f       	add	r24, r24
    127e:	99 1f       	adc	r25, r25
    1280:	aa 1f       	adc	r26, r26
    1282:	bb 1f       	adc	r27, r27
    1284:	88 0f       	add	r24, r24
    1286:	99 1f       	adc	r25, r25
    1288:	aa 1f       	adc	r26, r26
    128a:	bb 1f       	adc	r27, r27
    128c:	88 0f       	add	r24, r24
    128e:	99 1f       	adc	r25, r25
    1290:	aa 1f       	adc	r26, r26
    1292:	bb 1f       	adc	r27, r27
    1294:	88 0f       	add	r24, r24
    1296:	99 1f       	adc	r25, r25
    1298:	aa 1f       	adc	r26, r26
    129a:	bb 1f       	adc	r27, r27
    129c:	9c 01       	movw	r18, r24
    129e:	ad 01       	movw	r20, r26
    12a0:	80 e0       	ldi	r24, 0x00	; 0
    12a2:	92 e1       	ldi	r25, 0x12	; 18
    12a4:	aa e7       	ldi	r26, 0x7A	; 122
    12a6:	b0 e0       	ldi	r27, 0x00	; 0
    12a8:	bc 01       	movw	r22, r24
    12aa:	cd 01       	movw	r24, r26
    12ac:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <__udivmodsi4>
    12b0:	da 01       	movw	r26, r20
    12b2:	c9 01       	movw	r24, r18
    12b4:	01 97       	sbiw	r24, 0x01	; 1
    12b6:	9a 83       	std	Y+2, r25	; 0x02
    12b8:	89 83       	std	Y+1, r24	; 0x01
	UBRR0L=UBRRVAL; 			//low byte
    12ba:	e9 e2       	ldi	r30, 0x29	; 41
    12bc:	f0 e0       	ldi	r31, 0x00	; 0
    12be:	89 81       	ldd	r24, Y+1	; 0x01
    12c0:	80 83       	st	Z, r24
	UBRR0H=(UBRRVAL>>8); 	//high byte
    12c2:	e0 e9       	ldi	r30, 0x90	; 144
    12c4:	f0 e0       	ldi	r31, 0x00	; 0
    12c6:	89 81       	ldd	r24, Y+1	; 0x01
    12c8:	9a 81       	ldd	r25, Y+2	; 0x02
    12ca:	89 2f       	mov	r24, r25
    12cc:	99 27       	eor	r25, r25
    12ce:	80 83       	st	Z, r24
	//UCSRC=(1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(0<<UCSZ2)|(1<<UCSZ1)|(1<<UCSZ0);

	//Enable Transmitter and Receiver
	//UCSRB=(1<<RXEN)|(1<<TXEN);

	UCSR0B= (1<<RXEN) | (1<<TXEN);                  // Enable Receiver and Transmitter
    12d0:	ea e2       	ldi	r30, 0x2A	; 42
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	88 e1       	ldi	r24, 0x18	; 24
    12d6:	80 83       	st	Z, r24
	UCSR0C= (1<<UCSZ1) | (1<<UCSZ0);                // Asynchronous mode 8-bit data and 1-stop bit
    12d8:	e5 e9       	ldi	r30, 0x95	; 149
    12da:	f0 e0       	ldi	r31, 0x00	; 0
    12dc:	86 e0       	ldi	r24, 0x06	; 6
    12de:	80 83       	st	Z, r24
	UCSR0A= 0x00;
    12e0:	eb e2       	ldi	r30, 0x2B	; 43
    12e2:	f0 e0       	ldi	r31, 0x00	; 0
    12e4:	10 82       	st	Z, r1
}
    12e6:	0f 90       	pop	r0
    12e8:	0f 90       	pop	r0
    12ea:	0f 90       	pop	r0
    12ec:	0f 90       	pop	r0
    12ee:	cf 91       	pop	r28
    12f0:	df 91       	pop	r29
    12f2:	08 95       	ret

000012f4 <usart_getc>:
unsigned char usart_getc( uint8_t * data )
{
    12f4:	df 93       	push	r29
    12f6:	cf 93       	push	r28
    12f8:	00 d0       	rcall	.+0      	; 0x12fa <usart_getc+0x6>
    12fa:	cd b7       	in	r28, 0x3d	; 61
    12fc:	de b7       	in	r29, 0x3e	; 62
    12fe:	9a 83       	std	Y+2, r25	; 0x02
    1300:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for data to be received */
	while(!(UCSR0A&(1<<RXC)));  // Wait till the data is received
    1302:	eb e2       	ldi	r30, 0x2B	; 43
    1304:	f0 e0       	ldi	r31, 0x00	; 0
    1306:	80 81       	ld	r24, Z
    1308:	88 23       	and	r24, r24
    130a:	dc f7       	brge	.-10     	; 0x1302 <usart_getc+0xe>
	*data = UDR0;
    130c:	ec e2       	ldi	r30, 0x2C	; 44
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	80 81       	ld	r24, Z
    1312:	e9 81       	ldd	r30, Y+1	; 0x01
    1314:	fa 81       	ldd	r31, Y+2	; 0x02
    1316:	80 83       	st	Z, r24
	return 1;
    1318:	81 e0       	ldi	r24, 0x01	; 1
}
    131a:	0f 90       	pop	r0
    131c:	0f 90       	pop	r0
    131e:	cf 91       	pop	r28
    1320:	df 91       	pop	r29
    1322:	08 95       	ret

00001324 <usart_getc_unblock>:

unsigned char usart_getc_unblock( uint8_t * data )
{
    1324:	df 93       	push	r29
    1326:	cf 93       	push	r28
    1328:	00 d0       	rcall	.+0      	; 0x132a <usart_getc_unblock+0x6>
    132a:	0f 92       	push	r0
    132c:	cd b7       	in	r28, 0x3d	; 61
    132e:	de b7       	in	r29, 0x3e	; 62
    1330:	9b 83       	std	Y+3, r25	; 0x03
    1332:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t status=0;
    1334:	19 82       	std	Y+1, r1	; 0x01
	/* Wait for data to be received */
	if(UCSR0A & (1<<RXC))
    1336:	eb e2       	ldi	r30, 0x2B	; 43
    1338:	f0 e0       	ldi	r31, 0x00	; 0
    133a:	80 81       	ld	r24, Z
    133c:	88 23       	and	r24, r24
    133e:	44 f4       	brge	.+16     	; 0x1350 <usart_getc_unblock+0x2c>
	{
	/* Get and return received data from buffer */
	*data = UDR0;
    1340:	ec e2       	ldi	r30, 0x2C	; 44
    1342:	f0 e0       	ldi	r31, 0x00	; 0
    1344:	80 81       	ld	r24, Z
    1346:	ea 81       	ldd	r30, Y+2	; 0x02
    1348:	fb 81       	ldd	r31, Y+3	; 0x03
    134a:	80 83       	st	Z, r24
	status =1;
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	89 83       	std	Y+1, r24	; 0x01
	}
	return status;
    1350:	89 81       	ldd	r24, Y+1	; 0x01
}
    1352:	0f 90       	pop	r0
    1354:	0f 90       	pop	r0
    1356:	0f 90       	pop	r0
    1358:	cf 91       	pop	r28
    135a:	df 91       	pop	r29
    135c:	08 95       	ret

0000135e <usart_putc>:

void usart_putc( unsigned char data )
{
    135e:	df 93       	push	r29
    1360:	cf 93       	push	r28
    1362:	0f 92       	push	r0
    1364:	cd b7       	in	r28, 0x3d	; 61
    1366:	de b7       	in	r29, 0x3e	; 62
    1368:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE)));
    136a:	eb e2       	ldi	r30, 0x2B	; 43
    136c:	f0 e0       	ldi	r31, 0x00	; 0
    136e:	80 81       	ld	r24, Z
    1370:	88 2f       	mov	r24, r24
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	80 72       	andi	r24, 0x20	; 32
    1376:	90 70       	andi	r25, 0x00	; 0
    1378:	00 97       	sbiw	r24, 0x00	; 0
    137a:	b9 f3       	breq	.-18     	; 0x136a <usart_putc+0xc>
	/* Put data into buffer, sends the data */
	UDR0 = data;
    137c:	ec e2       	ldi	r30, 0x2C	; 44
    137e:	f0 e0       	ldi	r31, 0x00	; 0
    1380:	89 81       	ldd	r24, Y+1	; 0x01
    1382:	80 83       	st	Z, r24
}
    1384:	0f 90       	pop	r0
    1386:	cf 91       	pop	r28
    1388:	df 91       	pop	r29
    138a:	08 95       	ret

0000138c <usart_puts>:
void usart_puts( char* str )
{
    138c:	df 93       	push	r29
    138e:	cf 93       	push	r28
    1390:	00 d0       	rcall	.+0      	; 0x1392 <usart_puts+0x6>
    1392:	00 d0       	rcall	.+0      	; 0x1394 <usart_puts+0x8>
    1394:	cd b7       	in	r28, 0x3d	; 61
    1396:	de b7       	in	r29, 0x3e	; 62
    1398:	9c 83       	std	Y+4, r25	; 0x04
    139a:	8b 83       	std	Y+3, r24	; 0x03
	short int i=0;
    139c:	1a 82       	std	Y+2, r1	; 0x02
    139e:	19 82       	std	Y+1, r1	; 0x01
    13a0:	0f c0       	rjmp	.+30     	; 0x13c0 <usart_puts+0x34>
	while(str[i])
	{
		usart_putc(str[i]);
    13a2:	29 81       	ldd	r18, Y+1	; 0x01
    13a4:	3a 81       	ldd	r19, Y+2	; 0x02
    13a6:	8b 81       	ldd	r24, Y+3	; 0x03
    13a8:	9c 81       	ldd	r25, Y+4	; 0x04
    13aa:	fc 01       	movw	r30, r24
    13ac:	e2 0f       	add	r30, r18
    13ae:	f3 1f       	adc	r31, r19
    13b0:	80 81       	ld	r24, Z
    13b2:	0e 94 af 09 	call	0x135e	; 0x135e <usart_putc>
		i++;
    13b6:	89 81       	ldd	r24, Y+1	; 0x01
    13b8:	9a 81       	ldd	r25, Y+2	; 0x02
    13ba:	01 96       	adiw	r24, 0x01	; 1
    13bc:	9a 83       	std	Y+2, r25	; 0x02
    13be:	89 83       	std	Y+1, r24	; 0x01
	UDR0 = data;
}
void usart_puts( char* str )
{
	short int i=0;
	while(str[i])
    13c0:	29 81       	ldd	r18, Y+1	; 0x01
    13c2:	3a 81       	ldd	r19, Y+2	; 0x02
    13c4:	8b 81       	ldd	r24, Y+3	; 0x03
    13c6:	9c 81       	ldd	r25, Y+4	; 0x04
    13c8:	fc 01       	movw	r30, r24
    13ca:	e2 0f       	add	r30, r18
    13cc:	f3 1f       	adc	r31, r19
    13ce:	80 81       	ld	r24, Z
    13d0:	88 23       	and	r24, r24
    13d2:	39 f7       	brne	.-50     	; 0x13a2 <usart_puts+0x16>
	{
		usart_putc(str[i]);
		i++;
	}
}
    13d4:	0f 90       	pop	r0
    13d6:	0f 90       	pop	r0
    13d8:	0f 90       	pop	r0
    13da:	0f 90       	pop	r0
    13dc:	cf 91       	pop	r28
    13de:	df 91       	pop	r29
    13e0:	08 95       	ret

000013e2 <main>:

void System_init();


int main(void)
{
    13e2:	0f 93       	push	r16
    13e4:	1f 93       	push	r17
    13e6:	df 93       	push	r29
    13e8:	cf 93       	push	r28
    13ea:	cd b7       	in	r28, 0x3d	; 61
    13ec:	de b7       	in	r29, 0x3e	; 62
    13ee:	c3 56       	subi	r28, 0x63	; 99
    13f0:	d0 40       	sbci	r29, 0x00	; 0
    13f2:	0f b6       	in	r0, 0x3f	; 63
    13f4:	f8 94       	cli
    13f6:	de bf       	out	0x3e, r29	; 62
    13f8:	0f be       	out	0x3f, r0	; 63
    13fa:	cd bf       	out	0x3d, r28	; 61
	/* System Initialization */
	System_init();
    13fc:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <System_init>
	uint8 speed = 0;
    1400:	fe 01       	movw	r30, r28
    1402:	ed 59       	subi	r30, 0x9D	; 157
    1404:	ff 4f       	sbci	r31, 0xFF	; 255
    1406:	10 82       	st	Z, r1
	usart_putc(speed);
    1408:	fe 01       	movw	r30, r28
    140a:	ed 59       	subi	r30, 0x9D	; 157
    140c:	ff 4f       	sbci	r31, 0xFF	; 255
    140e:	80 81       	ld	r24, Z
    1410:	0e 94 af 09 	call	0x135e	; 0x135e <usart_putc>

	/* System Super Loop */
	while(1)
	{
		/* Increase speed button */
		if(!DIO_u8GetPinValue(0, INC_SPEED))
    1414:	80 e0       	ldi	r24, 0x00	; 0
    1416:	61 e0       	ldi	r22, 0x01	; 1
    1418:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    141c:	88 23       	and	r24, r24
    141e:	09 f0       	breq	.+2      	; 0x1422 <main+0x40>
    1420:	7e c1       	rjmp	.+764    	; 0x171e <main+0x33c>
    1422:	fe 01       	movw	r30, r28
    1424:	e1 5a       	subi	r30, 0xA1	; 161
    1426:	ff 4f       	sbci	r31, 0xFF	; 255
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	a0 ef       	ldi	r26, 0xF0	; 240
    142e:	b1 e4       	ldi	r27, 0x41	; 65
    1430:	80 83       	st	Z, r24
    1432:	91 83       	std	Z+1, r25	; 0x01
    1434:	a2 83       	std	Z+2, r26	; 0x02
    1436:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1438:	8e 01       	movw	r16, r28
    143a:	05 5a       	subi	r16, 0xA5	; 165
    143c:	1f 4f       	sbci	r17, 0xFF	; 255
    143e:	fe 01       	movw	r30, r28
    1440:	e1 5a       	subi	r30, 0xA1	; 161
    1442:	ff 4f       	sbci	r31, 0xFF	; 255
    1444:	60 81       	ld	r22, Z
    1446:	71 81       	ldd	r23, Z+1	; 0x01
    1448:	82 81       	ldd	r24, Z+2	; 0x02
    144a:	93 81       	ldd	r25, Z+3	; 0x03
    144c:	20 e0       	ldi	r18, 0x00	; 0
    144e:	30 e0       	ldi	r19, 0x00	; 0
    1450:	4a ef       	ldi	r20, 0xFA	; 250
    1452:	54 e4       	ldi	r21, 0x44	; 68
    1454:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    1458:	dc 01       	movw	r26, r24
    145a:	cb 01       	movw	r24, r22
    145c:	f8 01       	movw	r30, r16
    145e:	80 83       	st	Z, r24
    1460:	91 83       	std	Z+1, r25	; 0x01
    1462:	a2 83       	std	Z+2, r26	; 0x02
    1464:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1466:	fe 01       	movw	r30, r28
    1468:	e5 5a       	subi	r30, 0xA5	; 165
    146a:	ff 4f       	sbci	r31, 0xFF	; 255
    146c:	60 81       	ld	r22, Z
    146e:	71 81       	ldd	r23, Z+1	; 0x01
    1470:	82 81       	ldd	r24, Z+2	; 0x02
    1472:	93 81       	ldd	r25, Z+3	; 0x03
    1474:	20 e0       	ldi	r18, 0x00	; 0
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	40 e8       	ldi	r20, 0x80	; 128
    147a:	5f e3       	ldi	r21, 0x3F	; 63
    147c:	0e 94 8f 03 	call	0x71e	; 0x71e <__ltsf2>
    1480:	88 23       	and	r24, r24
    1482:	44 f4       	brge	.+16     	; 0x1494 <main+0xb2>
		__ticks = 1;
    1484:	fe 01       	movw	r30, r28
    1486:	e7 5a       	subi	r30, 0xA7	; 167
    1488:	ff 4f       	sbci	r31, 0xFF	; 255
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	91 83       	std	Z+1, r25	; 0x01
    1490:	80 83       	st	Z, r24
    1492:	64 c0       	rjmp	.+200    	; 0x155c <main+0x17a>
	else if (__tmp > 65535)
    1494:	fe 01       	movw	r30, r28
    1496:	e5 5a       	subi	r30, 0xA5	; 165
    1498:	ff 4f       	sbci	r31, 0xFF	; 255
    149a:	60 81       	ld	r22, Z
    149c:	71 81       	ldd	r23, Z+1	; 0x01
    149e:	82 81       	ldd	r24, Z+2	; 0x02
    14a0:	93 81       	ldd	r25, Z+3	; 0x03
    14a2:	20 e0       	ldi	r18, 0x00	; 0
    14a4:	3f ef       	ldi	r19, 0xFF	; 255
    14a6:	4f e7       	ldi	r20, 0x7F	; 127
    14a8:	57 e4       	ldi	r21, 0x47	; 71
    14aa:	0e 94 2f 03 	call	0x65e	; 0x65e <__gtsf2>
    14ae:	18 16       	cp	r1, r24
    14b0:	0c f0       	brlt	.+2      	; 0x14b4 <main+0xd2>
    14b2:	43 c0       	rjmp	.+134    	; 0x153a <main+0x158>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14b4:	fe 01       	movw	r30, r28
    14b6:	e1 5a       	subi	r30, 0xA1	; 161
    14b8:	ff 4f       	sbci	r31, 0xFF	; 255
    14ba:	60 81       	ld	r22, Z
    14bc:	71 81       	ldd	r23, Z+1	; 0x01
    14be:	82 81       	ldd	r24, Z+2	; 0x02
    14c0:	93 81       	ldd	r25, Z+3	; 0x03
    14c2:	20 e0       	ldi	r18, 0x00	; 0
    14c4:	30 e0       	ldi	r19, 0x00	; 0
    14c6:	40 e2       	ldi	r20, 0x20	; 32
    14c8:	51 e4       	ldi	r21, 0x41	; 65
    14ca:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    14ce:	dc 01       	movw	r26, r24
    14d0:	cb 01       	movw	r24, r22
    14d2:	8e 01       	movw	r16, r28
    14d4:	07 5a       	subi	r16, 0xA7	; 167
    14d6:	1f 4f       	sbci	r17, 0xFF	; 255
    14d8:	bc 01       	movw	r22, r24
    14da:	cd 01       	movw	r24, r26
    14dc:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    14e0:	dc 01       	movw	r26, r24
    14e2:	cb 01       	movw	r24, r22
    14e4:	f8 01       	movw	r30, r16
    14e6:	91 83       	std	Z+1, r25	; 0x01
    14e8:	80 83       	st	Z, r24
    14ea:	1f c0       	rjmp	.+62     	; 0x152a <main+0x148>
    14ec:	fe 01       	movw	r30, r28
    14ee:	e9 5a       	subi	r30, 0xA9	; 169
    14f0:	ff 4f       	sbci	r31, 0xFF	; 255
    14f2:	88 ec       	ldi	r24, 0xC8	; 200
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	91 83       	std	Z+1, r25	; 0x01
    14f8:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    14fa:	fe 01       	movw	r30, r28
    14fc:	e9 5a       	subi	r30, 0xA9	; 169
    14fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1500:	80 81       	ld	r24, Z
    1502:	91 81       	ldd	r25, Z+1	; 0x01
    1504:	01 97       	sbiw	r24, 0x01	; 1
    1506:	f1 f7       	brne	.-4      	; 0x1504 <main+0x122>
    1508:	fe 01       	movw	r30, r28
    150a:	e9 5a       	subi	r30, 0xA9	; 169
    150c:	ff 4f       	sbci	r31, 0xFF	; 255
    150e:	91 83       	std	Z+1, r25	; 0x01
    1510:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1512:	de 01       	movw	r26, r28
    1514:	a7 5a       	subi	r26, 0xA7	; 167
    1516:	bf 4f       	sbci	r27, 0xFF	; 255
    1518:	fe 01       	movw	r30, r28
    151a:	e7 5a       	subi	r30, 0xA7	; 167
    151c:	ff 4f       	sbci	r31, 0xFF	; 255
    151e:	80 81       	ld	r24, Z
    1520:	91 81       	ldd	r25, Z+1	; 0x01
    1522:	01 97       	sbiw	r24, 0x01	; 1
    1524:	11 96       	adiw	r26, 0x01	; 1
    1526:	9c 93       	st	X, r25
    1528:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    152a:	fe 01       	movw	r30, r28
    152c:	e7 5a       	subi	r30, 0xA7	; 167
    152e:	ff 4f       	sbci	r31, 0xFF	; 255
    1530:	80 81       	ld	r24, Z
    1532:	91 81       	ldd	r25, Z+1	; 0x01
    1534:	00 97       	sbiw	r24, 0x00	; 0
    1536:	d1 f6       	brne	.-76     	; 0x14ec <main+0x10a>
    1538:	eb c0       	rjmp	.+470    	; 0x1710 <main+0x32e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    153a:	8e 01       	movw	r16, r28
    153c:	07 5a       	subi	r16, 0xA7	; 167
    153e:	1f 4f       	sbci	r17, 0xFF	; 255
    1540:	fe 01       	movw	r30, r28
    1542:	e5 5a       	subi	r30, 0xA5	; 165
    1544:	ff 4f       	sbci	r31, 0xFF	; 255
    1546:	60 81       	ld	r22, Z
    1548:	71 81       	ldd	r23, Z+1	; 0x01
    154a:	82 81       	ldd	r24, Z+2	; 0x02
    154c:	93 81       	ldd	r25, Z+3	; 0x03
    154e:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    1552:	dc 01       	movw	r26, r24
    1554:	cb 01       	movw	r24, r22
    1556:	f8 01       	movw	r30, r16
    1558:	91 83       	std	Z+1, r25	; 0x01
    155a:	80 83       	st	Z, r24
    155c:	de 01       	movw	r26, r28
    155e:	ab 5a       	subi	r26, 0xAB	; 171
    1560:	bf 4f       	sbci	r27, 0xFF	; 255
    1562:	fe 01       	movw	r30, r28
    1564:	e7 5a       	subi	r30, 0xA7	; 167
    1566:	ff 4f       	sbci	r31, 0xFF	; 255
    1568:	80 81       	ld	r24, Z
    156a:	91 81       	ldd	r25, Z+1	; 0x01
    156c:	11 96       	adiw	r26, 0x01	; 1
    156e:	9c 93       	st	X, r25
    1570:	8e 93       	st	-X, r24
    1572:	fe 01       	movw	r30, r28
    1574:	eb 5a       	subi	r30, 0xAB	; 171
    1576:	ff 4f       	sbci	r31, 0xFF	; 255
    1578:	80 81       	ld	r24, Z
    157a:	91 81       	ldd	r25, Z+1	; 0x01
    157c:	01 97       	sbiw	r24, 0x01	; 1
    157e:	f1 f7       	brne	.-4      	; 0x157c <main+0x19a>
    1580:	fe 01       	movw	r30, r28
    1582:	eb 5a       	subi	r30, 0xAB	; 171
    1584:	ff 4f       	sbci	r31, 0xFF	; 255
    1586:	91 83       	std	Z+1, r25	; 0x01
    1588:	80 83       	st	Z, r24
    158a:	c2 c0       	rjmp	.+388    	; 0x1710 <main+0x32e>
		{
			_delay_ms(30);
			while(!DIO_u8GetPinValue(0, INC_SPEED))
			{
				speed++;
    158c:	de 01       	movw	r26, r28
    158e:	ad 59       	subi	r26, 0x9D	; 157
    1590:	bf 4f       	sbci	r27, 0xFF	; 255
    1592:	fe 01       	movw	r30, r28
    1594:	ed 59       	subi	r30, 0x9D	; 157
    1596:	ff 4f       	sbci	r31, 0xFF	; 255
    1598:	80 81       	ld	r24, Z
    159a:	8f 5f       	subi	r24, 0xFF	; 255
    159c:	8c 93       	st	X, r24
				usart_putc(speed);
    159e:	fe 01       	movw	r30, r28
    15a0:	ed 59       	subi	r30, 0x9D	; 157
    15a2:	ff 4f       	sbci	r31, 0xFF	; 255
    15a4:	80 81       	ld	r24, Z
    15a6:	0e 94 af 09 	call	0x135e	; 0x135e <usart_putc>
    15aa:	fe 01       	movw	r30, r28
    15ac:	ef 5a       	subi	r30, 0xAF	; 175
    15ae:	ff 4f       	sbci	r31, 0xFF	; 255
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	a6 e9       	ldi	r26, 0x96	; 150
    15b6:	b3 e4       	ldi	r27, 0x43	; 67
    15b8:	80 83       	st	Z, r24
    15ba:	91 83       	std	Z+1, r25	; 0x01
    15bc:	a2 83       	std	Z+2, r26	; 0x02
    15be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15c0:	8e 01       	movw	r16, r28
    15c2:	03 5b       	subi	r16, 0xB3	; 179
    15c4:	1f 4f       	sbci	r17, 0xFF	; 255
    15c6:	fe 01       	movw	r30, r28
    15c8:	ef 5a       	subi	r30, 0xAF	; 175
    15ca:	ff 4f       	sbci	r31, 0xFF	; 255
    15cc:	60 81       	ld	r22, Z
    15ce:	71 81       	ldd	r23, Z+1	; 0x01
    15d0:	82 81       	ldd	r24, Z+2	; 0x02
    15d2:	93 81       	ldd	r25, Z+3	; 0x03
    15d4:	20 e0       	ldi	r18, 0x00	; 0
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	4a ef       	ldi	r20, 0xFA	; 250
    15da:	54 e4       	ldi	r21, 0x44	; 68
    15dc:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    15e0:	dc 01       	movw	r26, r24
    15e2:	cb 01       	movw	r24, r22
    15e4:	f8 01       	movw	r30, r16
    15e6:	80 83       	st	Z, r24
    15e8:	91 83       	std	Z+1, r25	; 0x01
    15ea:	a2 83       	std	Z+2, r26	; 0x02
    15ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15ee:	fe 01       	movw	r30, r28
    15f0:	e3 5b       	subi	r30, 0xB3	; 179
    15f2:	ff 4f       	sbci	r31, 0xFF	; 255
    15f4:	60 81       	ld	r22, Z
    15f6:	71 81       	ldd	r23, Z+1	; 0x01
    15f8:	82 81       	ldd	r24, Z+2	; 0x02
    15fa:	93 81       	ldd	r25, Z+3	; 0x03
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	40 e8       	ldi	r20, 0x80	; 128
    1602:	5f e3       	ldi	r21, 0x3F	; 63
    1604:	0e 94 8f 03 	call	0x71e	; 0x71e <__ltsf2>
    1608:	88 23       	and	r24, r24
    160a:	44 f4       	brge	.+16     	; 0x161c <main+0x23a>
		__ticks = 1;
    160c:	fe 01       	movw	r30, r28
    160e:	e5 5b       	subi	r30, 0xB5	; 181
    1610:	ff 4f       	sbci	r31, 0xFF	; 255
    1612:	81 e0       	ldi	r24, 0x01	; 1
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	91 83       	std	Z+1, r25	; 0x01
    1618:	80 83       	st	Z, r24
    161a:	64 c0       	rjmp	.+200    	; 0x16e4 <main+0x302>
	else if (__tmp > 65535)
    161c:	fe 01       	movw	r30, r28
    161e:	e3 5b       	subi	r30, 0xB3	; 179
    1620:	ff 4f       	sbci	r31, 0xFF	; 255
    1622:	60 81       	ld	r22, Z
    1624:	71 81       	ldd	r23, Z+1	; 0x01
    1626:	82 81       	ldd	r24, Z+2	; 0x02
    1628:	93 81       	ldd	r25, Z+3	; 0x03
    162a:	20 e0       	ldi	r18, 0x00	; 0
    162c:	3f ef       	ldi	r19, 0xFF	; 255
    162e:	4f e7       	ldi	r20, 0x7F	; 127
    1630:	57 e4       	ldi	r21, 0x47	; 71
    1632:	0e 94 2f 03 	call	0x65e	; 0x65e <__gtsf2>
    1636:	18 16       	cp	r1, r24
    1638:	0c f0       	brlt	.+2      	; 0x163c <main+0x25a>
    163a:	43 c0       	rjmp	.+134    	; 0x16c2 <main+0x2e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    163c:	fe 01       	movw	r30, r28
    163e:	ef 5a       	subi	r30, 0xAF	; 175
    1640:	ff 4f       	sbci	r31, 0xFF	; 255
    1642:	60 81       	ld	r22, Z
    1644:	71 81       	ldd	r23, Z+1	; 0x01
    1646:	82 81       	ldd	r24, Z+2	; 0x02
    1648:	93 81       	ldd	r25, Z+3	; 0x03
    164a:	20 e0       	ldi	r18, 0x00	; 0
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	40 e2       	ldi	r20, 0x20	; 32
    1650:	51 e4       	ldi	r21, 0x41	; 65
    1652:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    1656:	dc 01       	movw	r26, r24
    1658:	cb 01       	movw	r24, r22
    165a:	8e 01       	movw	r16, r28
    165c:	05 5b       	subi	r16, 0xB5	; 181
    165e:	1f 4f       	sbci	r17, 0xFF	; 255
    1660:	bc 01       	movw	r22, r24
    1662:	cd 01       	movw	r24, r26
    1664:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    1668:	dc 01       	movw	r26, r24
    166a:	cb 01       	movw	r24, r22
    166c:	f8 01       	movw	r30, r16
    166e:	91 83       	std	Z+1, r25	; 0x01
    1670:	80 83       	st	Z, r24
    1672:	1f c0       	rjmp	.+62     	; 0x16b2 <main+0x2d0>
    1674:	fe 01       	movw	r30, r28
    1676:	e7 5b       	subi	r30, 0xB7	; 183
    1678:	ff 4f       	sbci	r31, 0xFF	; 255
    167a:	88 ec       	ldi	r24, 0xC8	; 200
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	91 83       	std	Z+1, r25	; 0x01
    1680:	80 83       	st	Z, r24
    1682:	fe 01       	movw	r30, r28
    1684:	e7 5b       	subi	r30, 0xB7	; 183
    1686:	ff 4f       	sbci	r31, 0xFF	; 255
    1688:	80 81       	ld	r24, Z
    168a:	91 81       	ldd	r25, Z+1	; 0x01
    168c:	01 97       	sbiw	r24, 0x01	; 1
    168e:	f1 f7       	brne	.-4      	; 0x168c <main+0x2aa>
    1690:	fe 01       	movw	r30, r28
    1692:	e7 5b       	subi	r30, 0xB7	; 183
    1694:	ff 4f       	sbci	r31, 0xFF	; 255
    1696:	91 83       	std	Z+1, r25	; 0x01
    1698:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    169a:	de 01       	movw	r26, r28
    169c:	a5 5b       	subi	r26, 0xB5	; 181
    169e:	bf 4f       	sbci	r27, 0xFF	; 255
    16a0:	fe 01       	movw	r30, r28
    16a2:	e5 5b       	subi	r30, 0xB5	; 181
    16a4:	ff 4f       	sbci	r31, 0xFF	; 255
    16a6:	80 81       	ld	r24, Z
    16a8:	91 81       	ldd	r25, Z+1	; 0x01
    16aa:	01 97       	sbiw	r24, 0x01	; 1
    16ac:	11 96       	adiw	r26, 0x01	; 1
    16ae:	9c 93       	st	X, r25
    16b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16b2:	fe 01       	movw	r30, r28
    16b4:	e5 5b       	subi	r30, 0xB5	; 181
    16b6:	ff 4f       	sbci	r31, 0xFF	; 255
    16b8:	80 81       	ld	r24, Z
    16ba:	91 81       	ldd	r25, Z+1	; 0x01
    16bc:	00 97       	sbiw	r24, 0x00	; 0
    16be:	d1 f6       	brne	.-76     	; 0x1674 <main+0x292>
    16c0:	27 c0       	rjmp	.+78     	; 0x1710 <main+0x32e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16c2:	8e 01       	movw	r16, r28
    16c4:	05 5b       	subi	r16, 0xB5	; 181
    16c6:	1f 4f       	sbci	r17, 0xFF	; 255
    16c8:	fe 01       	movw	r30, r28
    16ca:	e3 5b       	subi	r30, 0xB3	; 179
    16cc:	ff 4f       	sbci	r31, 0xFF	; 255
    16ce:	60 81       	ld	r22, Z
    16d0:	71 81       	ldd	r23, Z+1	; 0x01
    16d2:	82 81       	ldd	r24, Z+2	; 0x02
    16d4:	93 81       	ldd	r25, Z+3	; 0x03
    16d6:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    16da:	dc 01       	movw	r26, r24
    16dc:	cb 01       	movw	r24, r22
    16de:	f8 01       	movw	r30, r16
    16e0:	91 83       	std	Z+1, r25	; 0x01
    16e2:	80 83       	st	Z, r24
    16e4:	de 01       	movw	r26, r28
    16e6:	a9 5b       	subi	r26, 0xB9	; 185
    16e8:	bf 4f       	sbci	r27, 0xFF	; 255
    16ea:	fe 01       	movw	r30, r28
    16ec:	e5 5b       	subi	r30, 0xB5	; 181
    16ee:	ff 4f       	sbci	r31, 0xFF	; 255
    16f0:	80 81       	ld	r24, Z
    16f2:	91 81       	ldd	r25, Z+1	; 0x01
    16f4:	8d 93       	st	X+, r24
    16f6:	9c 93       	st	X, r25
    16f8:	fe 01       	movw	r30, r28
    16fa:	e9 5b       	subi	r30, 0xB9	; 185
    16fc:	ff 4f       	sbci	r31, 0xFF	; 255
    16fe:	80 81       	ld	r24, Z
    1700:	91 81       	ldd	r25, Z+1	; 0x01
    1702:	01 97       	sbiw	r24, 0x01	; 1
    1704:	f1 f7       	brne	.-4      	; 0x1702 <main+0x320>
    1706:	fe 01       	movw	r30, r28
    1708:	e9 5b       	subi	r30, 0xB9	; 185
    170a:	ff 4f       	sbci	r31, 0xFF	; 255
    170c:	91 83       	std	Z+1, r25	; 0x01
    170e:	80 83       	st	Z, r24
	{
		/* Increase speed button */
		if(!DIO_u8GetPinValue(0, INC_SPEED))
		{
			_delay_ms(30);
			while(!DIO_u8GetPinValue(0, INC_SPEED))
    1710:	80 e0       	ldi	r24, 0x00	; 0
    1712:	61 e0       	ldi	r22, 0x01	; 1
    1714:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1718:	88 23       	and	r24, r24
    171a:	09 f4       	brne	.+2      	; 0x171e <main+0x33c>
    171c:	37 cf       	rjmp	.-402    	; 0x158c <main+0x1aa>
				_delay_ms(300);
			}
		}

		/* Decrease speed button */
		if(!DIO_u8GetPinValue(0, DEC_SPEED))
    171e:	80 e0       	ldi	r24, 0x00	; 0
    1720:	62 e0       	ldi	r22, 0x02	; 2
    1722:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1726:	88 23       	and	r24, r24
    1728:	09 f0       	breq	.+2      	; 0x172c <main+0x34a>
    172a:	0e c1       	rjmp	.+540    	; 0x1948 <main+0x566>
    172c:	fe 01       	movw	r30, r28
    172e:	ed 5b       	subi	r30, 0xBD	; 189
    1730:	ff 4f       	sbci	r31, 0xFF	; 255
    1732:	80 e0       	ldi	r24, 0x00	; 0
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	a0 ef       	ldi	r26, 0xF0	; 240
    1738:	b1 e4       	ldi	r27, 0x41	; 65
    173a:	80 83       	st	Z, r24
    173c:	91 83       	std	Z+1, r25	; 0x01
    173e:	a2 83       	std	Z+2, r26	; 0x02
    1740:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1742:	8e 01       	movw	r16, r28
    1744:	01 5c       	subi	r16, 0xC1	; 193
    1746:	1f 4f       	sbci	r17, 0xFF	; 255
    1748:	fe 01       	movw	r30, r28
    174a:	ed 5b       	subi	r30, 0xBD	; 189
    174c:	ff 4f       	sbci	r31, 0xFF	; 255
    174e:	60 81       	ld	r22, Z
    1750:	71 81       	ldd	r23, Z+1	; 0x01
    1752:	82 81       	ldd	r24, Z+2	; 0x02
    1754:	93 81       	ldd	r25, Z+3	; 0x03
    1756:	20 e0       	ldi	r18, 0x00	; 0
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	4a ef       	ldi	r20, 0xFA	; 250
    175c:	54 e4       	ldi	r21, 0x44	; 68
    175e:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    1762:	dc 01       	movw	r26, r24
    1764:	cb 01       	movw	r24, r22
    1766:	f8 01       	movw	r30, r16
    1768:	80 83       	st	Z, r24
    176a:	91 83       	std	Z+1, r25	; 0x01
    176c:	a2 83       	std	Z+2, r26	; 0x02
    176e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1770:	fe 01       	movw	r30, r28
    1772:	ff 96       	adiw	r30, 0x3f	; 63
    1774:	60 81       	ld	r22, Z
    1776:	71 81       	ldd	r23, Z+1	; 0x01
    1778:	82 81       	ldd	r24, Z+2	; 0x02
    177a:	93 81       	ldd	r25, Z+3	; 0x03
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e8       	ldi	r20, 0x80	; 128
    1782:	5f e3       	ldi	r21, 0x3F	; 63
    1784:	0e 94 8f 03 	call	0x71e	; 0x71e <__ltsf2>
    1788:	88 23       	and	r24, r24
    178a:	2c f4       	brge	.+10     	; 0x1796 <main+0x3b4>
		__ticks = 1;
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	9e af       	std	Y+62, r25	; 0x3e
    1792:	8d af       	std	Y+61, r24	; 0x3d
    1794:	46 c0       	rjmp	.+140    	; 0x1822 <main+0x440>
	else if (__tmp > 65535)
    1796:	fe 01       	movw	r30, r28
    1798:	ff 96       	adiw	r30, 0x3f	; 63
    179a:	60 81       	ld	r22, Z
    179c:	71 81       	ldd	r23, Z+1	; 0x01
    179e:	82 81       	ldd	r24, Z+2	; 0x02
    17a0:	93 81       	ldd	r25, Z+3	; 0x03
    17a2:	20 e0       	ldi	r18, 0x00	; 0
    17a4:	3f ef       	ldi	r19, 0xFF	; 255
    17a6:	4f e7       	ldi	r20, 0x7F	; 127
    17a8:	57 e4       	ldi	r21, 0x47	; 71
    17aa:	0e 94 2f 03 	call	0x65e	; 0x65e <__gtsf2>
    17ae:	18 16       	cp	r1, r24
    17b0:	64 f5       	brge	.+88     	; 0x180a <main+0x428>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17b2:	fe 01       	movw	r30, r28
    17b4:	ed 5b       	subi	r30, 0xBD	; 189
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	60 81       	ld	r22, Z
    17ba:	71 81       	ldd	r23, Z+1	; 0x01
    17bc:	82 81       	ldd	r24, Z+2	; 0x02
    17be:	93 81       	ldd	r25, Z+3	; 0x03
    17c0:	20 e0       	ldi	r18, 0x00	; 0
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	40 e2       	ldi	r20, 0x20	; 32
    17c6:	51 e4       	ldi	r21, 0x41	; 65
    17c8:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    17cc:	dc 01       	movw	r26, r24
    17ce:	cb 01       	movw	r24, r22
    17d0:	bc 01       	movw	r22, r24
    17d2:	cd 01       	movw	r24, r26
    17d4:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    17d8:	dc 01       	movw	r26, r24
    17da:	cb 01       	movw	r24, r22
    17dc:	9e af       	std	Y+62, r25	; 0x3e
    17de:	8d af       	std	Y+61, r24	; 0x3d
    17e0:	0f c0       	rjmp	.+30     	; 0x1800 <main+0x41e>
    17e2:	88 ec       	ldi	r24, 0xC8	; 200
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	9c af       	std	Y+60, r25	; 0x3c
    17e8:	8b af       	std	Y+59, r24	; 0x3b
    17ea:	8b ad       	ldd	r24, Y+59	; 0x3b
    17ec:	9c ad       	ldd	r25, Y+60	; 0x3c
    17ee:	01 97       	sbiw	r24, 0x01	; 1
    17f0:	f1 f7       	brne	.-4      	; 0x17ee <main+0x40c>
    17f2:	9c af       	std	Y+60, r25	; 0x3c
    17f4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17f6:	8d ad       	ldd	r24, Y+61	; 0x3d
    17f8:	9e ad       	ldd	r25, Y+62	; 0x3e
    17fa:	01 97       	sbiw	r24, 0x01	; 1
    17fc:	9e af       	std	Y+62, r25	; 0x3e
    17fe:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1800:	8d ad       	ldd	r24, Y+61	; 0x3d
    1802:	9e ad       	ldd	r25, Y+62	; 0x3e
    1804:	00 97       	sbiw	r24, 0x00	; 0
    1806:	69 f7       	brne	.-38     	; 0x17e2 <main+0x400>
    1808:	98 c0       	rjmp	.+304    	; 0x193a <main+0x558>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    180a:	fe 01       	movw	r30, r28
    180c:	ff 96       	adiw	r30, 0x3f	; 63
    180e:	60 81       	ld	r22, Z
    1810:	71 81       	ldd	r23, Z+1	; 0x01
    1812:	82 81       	ldd	r24, Z+2	; 0x02
    1814:	93 81       	ldd	r25, Z+3	; 0x03
    1816:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    181a:	dc 01       	movw	r26, r24
    181c:	cb 01       	movw	r24, r22
    181e:	9e af       	std	Y+62, r25	; 0x3e
    1820:	8d af       	std	Y+61, r24	; 0x3d
    1822:	8d ad       	ldd	r24, Y+61	; 0x3d
    1824:	9e ad       	ldd	r25, Y+62	; 0x3e
    1826:	9a af       	std	Y+58, r25	; 0x3a
    1828:	89 af       	std	Y+57, r24	; 0x39
    182a:	89 ad       	ldd	r24, Y+57	; 0x39
    182c:	9a ad       	ldd	r25, Y+58	; 0x3a
    182e:	01 97       	sbiw	r24, 0x01	; 1
    1830:	f1 f7       	brne	.-4      	; 0x182e <main+0x44c>
    1832:	9a af       	std	Y+58, r25	; 0x3a
    1834:	89 af       	std	Y+57, r24	; 0x39
    1836:	81 c0       	rjmp	.+258    	; 0x193a <main+0x558>
		{
			_delay_ms(30);
			while(!DIO_u8GetPinValue(0, DEC_SPEED))
			{
				speed--;
    1838:	de 01       	movw	r26, r28
    183a:	ad 59       	subi	r26, 0x9D	; 157
    183c:	bf 4f       	sbci	r27, 0xFF	; 255
    183e:	fe 01       	movw	r30, r28
    1840:	ed 59       	subi	r30, 0x9D	; 157
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	80 81       	ld	r24, Z
    1846:	81 50       	subi	r24, 0x01	; 1
    1848:	8c 93       	st	X, r24
				usart_putc(speed);
    184a:	fe 01       	movw	r30, r28
    184c:	ed 59       	subi	r30, 0x9D	; 157
    184e:	ff 4f       	sbci	r31, 0xFF	; 255
    1850:	80 81       	ld	r24, Z
    1852:	0e 94 af 09 	call	0x135e	; 0x135e <usart_putc>
    1856:	80 e0       	ldi	r24, 0x00	; 0
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	a6 e9       	ldi	r26, 0x96	; 150
    185c:	b3 e4       	ldi	r27, 0x43	; 67
    185e:	8d ab       	std	Y+53, r24	; 0x35
    1860:	9e ab       	std	Y+54, r25	; 0x36
    1862:	af ab       	std	Y+55, r26	; 0x37
    1864:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1866:	6d a9       	ldd	r22, Y+53	; 0x35
    1868:	7e a9       	ldd	r23, Y+54	; 0x36
    186a:	8f a9       	ldd	r24, Y+55	; 0x37
    186c:	98 ad       	ldd	r25, Y+56	; 0x38
    186e:	20 e0       	ldi	r18, 0x00	; 0
    1870:	30 e0       	ldi	r19, 0x00	; 0
    1872:	4a ef       	ldi	r20, 0xFA	; 250
    1874:	54 e4       	ldi	r21, 0x44	; 68
    1876:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    187a:	dc 01       	movw	r26, r24
    187c:	cb 01       	movw	r24, r22
    187e:	89 ab       	std	Y+49, r24	; 0x31
    1880:	9a ab       	std	Y+50, r25	; 0x32
    1882:	ab ab       	std	Y+51, r26	; 0x33
    1884:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1886:	69 a9       	ldd	r22, Y+49	; 0x31
    1888:	7a a9       	ldd	r23, Y+50	; 0x32
    188a:	8b a9       	ldd	r24, Y+51	; 0x33
    188c:	9c a9       	ldd	r25, Y+52	; 0x34
    188e:	20 e0       	ldi	r18, 0x00	; 0
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	40 e8       	ldi	r20, 0x80	; 128
    1894:	5f e3       	ldi	r21, 0x3F	; 63
    1896:	0e 94 8f 03 	call	0x71e	; 0x71e <__ltsf2>
    189a:	88 23       	and	r24, r24
    189c:	2c f4       	brge	.+10     	; 0x18a8 <main+0x4c6>
		__ticks = 1;
    189e:	81 e0       	ldi	r24, 0x01	; 1
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	98 ab       	std	Y+48, r25	; 0x30
    18a4:	8f a7       	std	Y+47, r24	; 0x2f
    18a6:	3f c0       	rjmp	.+126    	; 0x1926 <main+0x544>
	else if (__tmp > 65535)
    18a8:	69 a9       	ldd	r22, Y+49	; 0x31
    18aa:	7a a9       	ldd	r23, Y+50	; 0x32
    18ac:	8b a9       	ldd	r24, Y+51	; 0x33
    18ae:	9c a9       	ldd	r25, Y+52	; 0x34
    18b0:	20 e0       	ldi	r18, 0x00	; 0
    18b2:	3f ef       	ldi	r19, 0xFF	; 255
    18b4:	4f e7       	ldi	r20, 0x7F	; 127
    18b6:	57 e4       	ldi	r21, 0x47	; 71
    18b8:	0e 94 2f 03 	call	0x65e	; 0x65e <__gtsf2>
    18bc:	18 16       	cp	r1, r24
    18be:	4c f5       	brge	.+82     	; 0x1912 <main+0x530>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18c0:	6d a9       	ldd	r22, Y+53	; 0x35
    18c2:	7e a9       	ldd	r23, Y+54	; 0x36
    18c4:	8f a9       	ldd	r24, Y+55	; 0x37
    18c6:	98 ad       	ldd	r25, Y+56	; 0x38
    18c8:	20 e0       	ldi	r18, 0x00	; 0
    18ca:	30 e0       	ldi	r19, 0x00	; 0
    18cc:	40 e2       	ldi	r20, 0x20	; 32
    18ce:	51 e4       	ldi	r21, 0x41	; 65
    18d0:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    18d4:	dc 01       	movw	r26, r24
    18d6:	cb 01       	movw	r24, r22
    18d8:	bc 01       	movw	r22, r24
    18da:	cd 01       	movw	r24, r26
    18dc:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    18e0:	dc 01       	movw	r26, r24
    18e2:	cb 01       	movw	r24, r22
    18e4:	98 ab       	std	Y+48, r25	; 0x30
    18e6:	8f a7       	std	Y+47, r24	; 0x2f
    18e8:	0f c0       	rjmp	.+30     	; 0x1908 <main+0x526>
    18ea:	88 ec       	ldi	r24, 0xC8	; 200
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	9e a7       	std	Y+46, r25	; 0x2e
    18f0:	8d a7       	std	Y+45, r24	; 0x2d
    18f2:	8d a5       	ldd	r24, Y+45	; 0x2d
    18f4:	9e a5       	ldd	r25, Y+46	; 0x2e
    18f6:	01 97       	sbiw	r24, 0x01	; 1
    18f8:	f1 f7       	brne	.-4      	; 0x18f6 <main+0x514>
    18fa:	9e a7       	std	Y+46, r25	; 0x2e
    18fc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18fe:	8f a5       	ldd	r24, Y+47	; 0x2f
    1900:	98 a9       	ldd	r25, Y+48	; 0x30
    1902:	01 97       	sbiw	r24, 0x01	; 1
    1904:	98 ab       	std	Y+48, r25	; 0x30
    1906:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1908:	8f a5       	ldd	r24, Y+47	; 0x2f
    190a:	98 a9       	ldd	r25, Y+48	; 0x30
    190c:	00 97       	sbiw	r24, 0x00	; 0
    190e:	69 f7       	brne	.-38     	; 0x18ea <main+0x508>
    1910:	14 c0       	rjmp	.+40     	; 0x193a <main+0x558>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1912:	69 a9       	ldd	r22, Y+49	; 0x31
    1914:	7a a9       	ldd	r23, Y+50	; 0x32
    1916:	8b a9       	ldd	r24, Y+51	; 0x33
    1918:	9c a9       	ldd	r25, Y+52	; 0x34
    191a:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    191e:	dc 01       	movw	r26, r24
    1920:	cb 01       	movw	r24, r22
    1922:	98 ab       	std	Y+48, r25	; 0x30
    1924:	8f a7       	std	Y+47, r24	; 0x2f
    1926:	8f a5       	ldd	r24, Y+47	; 0x2f
    1928:	98 a9       	ldd	r25, Y+48	; 0x30
    192a:	9c a7       	std	Y+44, r25	; 0x2c
    192c:	8b a7       	std	Y+43, r24	; 0x2b
    192e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1930:	9c a5       	ldd	r25, Y+44	; 0x2c
    1932:	01 97       	sbiw	r24, 0x01	; 1
    1934:	f1 f7       	brne	.-4      	; 0x1932 <main+0x550>
    1936:	9c a7       	std	Y+44, r25	; 0x2c
    1938:	8b a7       	std	Y+43, r24	; 0x2b

		/* Decrease speed button */
		if(!DIO_u8GetPinValue(0, DEC_SPEED))
		{
			_delay_ms(30);
			while(!DIO_u8GetPinValue(0, DEC_SPEED))
    193a:	80 e0       	ldi	r24, 0x00	; 0
    193c:	62 e0       	ldi	r22, 0x02	; 2
    193e:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1942:	88 23       	and	r24, r24
    1944:	09 f4       	brne	.+2      	; 0x1948 <main+0x566>
    1946:	78 cf       	rjmp	.-272    	; 0x1838 <main+0x456>
				_delay_ms(300);
			}
		}

		/* Gas pressed button */
		if(!DIO_u8GetPinValue(0, GAS_PEDAL))
    1948:	80 e0       	ldi	r24, 0x00	; 0
    194a:	60 e0       	ldi	r22, 0x00	; 0
    194c:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1950:	88 23       	and	r24, r24
    1952:	09 f0       	breq	.+2      	; 0x1956 <main+0x574>
    1954:	81 c0       	rjmp	.+258    	; 0x1a58 <main+0x676>
    1956:	80 e0       	ldi	r24, 0x00	; 0
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	a0 ef       	ldi	r26, 0xF0	; 240
    195c:	b1 e4       	ldi	r27, 0x41	; 65
    195e:	8f a3       	std	Y+39, r24	; 0x27
    1960:	98 a7       	std	Y+40, r25	; 0x28
    1962:	a9 a7       	std	Y+41, r26	; 0x29
    1964:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1966:	6f a1       	ldd	r22, Y+39	; 0x27
    1968:	78 a5       	ldd	r23, Y+40	; 0x28
    196a:	89 a5       	ldd	r24, Y+41	; 0x29
    196c:	9a a5       	ldd	r25, Y+42	; 0x2a
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	4a ef       	ldi	r20, 0xFA	; 250
    1974:	54 e4       	ldi	r21, 0x44	; 68
    1976:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    197a:	dc 01       	movw	r26, r24
    197c:	cb 01       	movw	r24, r22
    197e:	8b a3       	std	Y+35, r24	; 0x23
    1980:	9c a3       	std	Y+36, r25	; 0x24
    1982:	ad a3       	std	Y+37, r26	; 0x25
    1984:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1986:	6b a1       	ldd	r22, Y+35	; 0x23
    1988:	7c a1       	ldd	r23, Y+36	; 0x24
    198a:	8d a1       	ldd	r24, Y+37	; 0x25
    198c:	9e a1       	ldd	r25, Y+38	; 0x26
    198e:	20 e0       	ldi	r18, 0x00	; 0
    1990:	30 e0       	ldi	r19, 0x00	; 0
    1992:	40 e8       	ldi	r20, 0x80	; 128
    1994:	5f e3       	ldi	r21, 0x3F	; 63
    1996:	0e 94 8f 03 	call	0x71e	; 0x71e <__ltsf2>
    199a:	88 23       	and	r24, r24
    199c:	2c f4       	brge	.+10     	; 0x19a8 <main+0x5c6>
		__ticks = 1;
    199e:	81 e0       	ldi	r24, 0x01	; 1
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	9a a3       	std	Y+34, r25	; 0x22
    19a4:	89 a3       	std	Y+33, r24	; 0x21
    19a6:	3f c0       	rjmp	.+126    	; 0x1a26 <main+0x644>
	else if (__tmp > 65535)
    19a8:	6b a1       	ldd	r22, Y+35	; 0x23
    19aa:	7c a1       	ldd	r23, Y+36	; 0x24
    19ac:	8d a1       	ldd	r24, Y+37	; 0x25
    19ae:	9e a1       	ldd	r25, Y+38	; 0x26
    19b0:	20 e0       	ldi	r18, 0x00	; 0
    19b2:	3f ef       	ldi	r19, 0xFF	; 255
    19b4:	4f e7       	ldi	r20, 0x7F	; 127
    19b6:	57 e4       	ldi	r21, 0x47	; 71
    19b8:	0e 94 2f 03 	call	0x65e	; 0x65e <__gtsf2>
    19bc:	18 16       	cp	r1, r24
    19be:	4c f5       	brge	.+82     	; 0x1a12 <main+0x630>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19c0:	6f a1       	ldd	r22, Y+39	; 0x27
    19c2:	78 a5       	ldd	r23, Y+40	; 0x28
    19c4:	89 a5       	ldd	r24, Y+41	; 0x29
    19c6:	9a a5       	ldd	r25, Y+42	; 0x2a
    19c8:	20 e0       	ldi	r18, 0x00	; 0
    19ca:	30 e0       	ldi	r19, 0x00	; 0
    19cc:	40 e2       	ldi	r20, 0x20	; 32
    19ce:	51 e4       	ldi	r21, 0x41	; 65
    19d0:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    19d4:	dc 01       	movw	r26, r24
    19d6:	cb 01       	movw	r24, r22
    19d8:	bc 01       	movw	r22, r24
    19da:	cd 01       	movw	r24, r26
    19dc:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    19e0:	dc 01       	movw	r26, r24
    19e2:	cb 01       	movw	r24, r22
    19e4:	9a a3       	std	Y+34, r25	; 0x22
    19e6:	89 a3       	std	Y+33, r24	; 0x21
    19e8:	0f c0       	rjmp	.+30     	; 0x1a08 <main+0x626>
    19ea:	88 ec       	ldi	r24, 0xC8	; 200
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	98 a3       	std	Y+32, r25	; 0x20
    19f0:	8f 8f       	std	Y+31, r24	; 0x1f
    19f2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    19f4:	98 a1       	ldd	r25, Y+32	; 0x20
    19f6:	01 97       	sbiw	r24, 0x01	; 1
    19f8:	f1 f7       	brne	.-4      	; 0x19f6 <main+0x614>
    19fa:	98 a3       	std	Y+32, r25	; 0x20
    19fc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19fe:	89 a1       	ldd	r24, Y+33	; 0x21
    1a00:	9a a1       	ldd	r25, Y+34	; 0x22
    1a02:	01 97       	sbiw	r24, 0x01	; 1
    1a04:	9a a3       	std	Y+34, r25	; 0x22
    1a06:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a08:	89 a1       	ldd	r24, Y+33	; 0x21
    1a0a:	9a a1       	ldd	r25, Y+34	; 0x22
    1a0c:	00 97       	sbiw	r24, 0x00	; 0
    1a0e:	69 f7       	brne	.-38     	; 0x19ea <main+0x608>
    1a10:	14 c0       	rjmp	.+40     	; 0x1a3a <main+0x658>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a12:	6b a1       	ldd	r22, Y+35	; 0x23
    1a14:	7c a1       	ldd	r23, Y+36	; 0x24
    1a16:	8d a1       	ldd	r24, Y+37	; 0x25
    1a18:	9e a1       	ldd	r25, Y+38	; 0x26
    1a1a:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    1a1e:	dc 01       	movw	r26, r24
    1a20:	cb 01       	movw	r24, r22
    1a22:	9a a3       	std	Y+34, r25	; 0x22
    1a24:	89 a3       	std	Y+33, r24	; 0x21
    1a26:	89 a1       	ldd	r24, Y+33	; 0x21
    1a28:	9a a1       	ldd	r25, Y+34	; 0x22
    1a2a:	9e 8f       	std	Y+30, r25	; 0x1e
    1a2c:	8d 8f       	std	Y+29, r24	; 0x1d
    1a2e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a30:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a32:	01 97       	sbiw	r24, 0x01	; 1
    1a34:	f1 f7       	brne	.-4      	; 0x1a32 <main+0x650>
    1a36:	9e 8f       	std	Y+30, r25	; 0x1e
    1a38:	8d 8f       	std	Y+29, r24	; 0x1d
		{
			_delay_ms(30);
			if(!DIO_u8GetPinValue(0, GAS_PEDAL))
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	60 e0       	ldi	r22, 0x00	; 0
    1a3e:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1a42:	88 23       	and	r24, r24
    1a44:	49 f4       	brne	.+18     	; 0x1a58 <main+0x676>
			{
				usart_putc(GAS_UART);
    1a46:	8f ef       	ldi	r24, 0xFF	; 255
    1a48:	0e 94 af 09 	call	0x135e	; 0x135e <usart_putc>
				while(!DIO_u8GetPinValue(0, GAS_PEDAL));
    1a4c:	80 e0       	ldi	r24, 0x00	; 0
    1a4e:	60 e0       	ldi	r22, 0x00	; 0
    1a50:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1a54:	88 23       	and	r24, r24
    1a56:	d1 f3       	breq	.-12     	; 0x1a4c <main+0x66a>
			}
		}

		/* Brakes pressed button */
		if(!DIO_u8GetPinValue(0, BRAKES))
    1a58:	80 e0       	ldi	r24, 0x00	; 0
    1a5a:	63 e0       	ldi	r22, 0x03	; 3
    1a5c:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1a60:	88 23       	and	r24, r24
    1a62:	09 f0       	breq	.+2      	; 0x1a66 <main+0x684>
    1a64:	81 c0       	rjmp	.+258    	; 0x1b68 <main+0x786>
    1a66:	80 e0       	ldi	r24, 0x00	; 0
    1a68:	90 e0       	ldi	r25, 0x00	; 0
    1a6a:	a0 ef       	ldi	r26, 0xF0	; 240
    1a6c:	b1 e4       	ldi	r27, 0x41	; 65
    1a6e:	89 8f       	std	Y+25, r24	; 0x19
    1a70:	9a 8f       	std	Y+26, r25	; 0x1a
    1a72:	ab 8f       	std	Y+27, r26	; 0x1b
    1a74:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a76:	69 8d       	ldd	r22, Y+25	; 0x19
    1a78:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a7a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a7c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a7e:	20 e0       	ldi	r18, 0x00	; 0
    1a80:	30 e0       	ldi	r19, 0x00	; 0
    1a82:	4a ef       	ldi	r20, 0xFA	; 250
    1a84:	54 e4       	ldi	r21, 0x44	; 68
    1a86:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    1a8a:	dc 01       	movw	r26, r24
    1a8c:	cb 01       	movw	r24, r22
    1a8e:	8d 8b       	std	Y+21, r24	; 0x15
    1a90:	9e 8b       	std	Y+22, r25	; 0x16
    1a92:	af 8b       	std	Y+23, r26	; 0x17
    1a94:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a96:	6d 89       	ldd	r22, Y+21	; 0x15
    1a98:	7e 89       	ldd	r23, Y+22	; 0x16
    1a9a:	8f 89       	ldd	r24, Y+23	; 0x17
    1a9c:	98 8d       	ldd	r25, Y+24	; 0x18
    1a9e:	20 e0       	ldi	r18, 0x00	; 0
    1aa0:	30 e0       	ldi	r19, 0x00	; 0
    1aa2:	40 e8       	ldi	r20, 0x80	; 128
    1aa4:	5f e3       	ldi	r21, 0x3F	; 63
    1aa6:	0e 94 8f 03 	call	0x71e	; 0x71e <__ltsf2>
    1aaa:	88 23       	and	r24, r24
    1aac:	2c f4       	brge	.+10     	; 0x1ab8 <main+0x6d6>
		__ticks = 1;
    1aae:	81 e0       	ldi	r24, 0x01	; 1
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	9c 8b       	std	Y+20, r25	; 0x14
    1ab4:	8b 8b       	std	Y+19, r24	; 0x13
    1ab6:	3f c0       	rjmp	.+126    	; 0x1b36 <main+0x754>
	else if (__tmp > 65535)
    1ab8:	6d 89       	ldd	r22, Y+21	; 0x15
    1aba:	7e 89       	ldd	r23, Y+22	; 0x16
    1abc:	8f 89       	ldd	r24, Y+23	; 0x17
    1abe:	98 8d       	ldd	r25, Y+24	; 0x18
    1ac0:	20 e0       	ldi	r18, 0x00	; 0
    1ac2:	3f ef       	ldi	r19, 0xFF	; 255
    1ac4:	4f e7       	ldi	r20, 0x7F	; 127
    1ac6:	57 e4       	ldi	r21, 0x47	; 71
    1ac8:	0e 94 2f 03 	call	0x65e	; 0x65e <__gtsf2>
    1acc:	18 16       	cp	r1, r24
    1ace:	4c f5       	brge	.+82     	; 0x1b22 <main+0x740>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ad0:	69 8d       	ldd	r22, Y+25	; 0x19
    1ad2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ad4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ad6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ad8:	20 e0       	ldi	r18, 0x00	; 0
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	40 e2       	ldi	r20, 0x20	; 32
    1ade:	51 e4       	ldi	r21, 0x41	; 65
    1ae0:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    1ae4:	dc 01       	movw	r26, r24
    1ae6:	cb 01       	movw	r24, r22
    1ae8:	bc 01       	movw	r22, r24
    1aea:	cd 01       	movw	r24, r26
    1aec:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    1af0:	dc 01       	movw	r26, r24
    1af2:	cb 01       	movw	r24, r22
    1af4:	9c 8b       	std	Y+20, r25	; 0x14
    1af6:	8b 8b       	std	Y+19, r24	; 0x13
    1af8:	0f c0       	rjmp	.+30     	; 0x1b18 <main+0x736>
    1afa:	88 ec       	ldi	r24, 0xC8	; 200
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	9a 8b       	std	Y+18, r25	; 0x12
    1b00:	89 8b       	std	Y+17, r24	; 0x11
    1b02:	89 89       	ldd	r24, Y+17	; 0x11
    1b04:	9a 89       	ldd	r25, Y+18	; 0x12
    1b06:	01 97       	sbiw	r24, 0x01	; 1
    1b08:	f1 f7       	brne	.-4      	; 0x1b06 <main+0x724>
    1b0a:	9a 8b       	std	Y+18, r25	; 0x12
    1b0c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b0e:	8b 89       	ldd	r24, Y+19	; 0x13
    1b10:	9c 89       	ldd	r25, Y+20	; 0x14
    1b12:	01 97       	sbiw	r24, 0x01	; 1
    1b14:	9c 8b       	std	Y+20, r25	; 0x14
    1b16:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b18:	8b 89       	ldd	r24, Y+19	; 0x13
    1b1a:	9c 89       	ldd	r25, Y+20	; 0x14
    1b1c:	00 97       	sbiw	r24, 0x00	; 0
    1b1e:	69 f7       	brne	.-38     	; 0x1afa <main+0x718>
    1b20:	14 c0       	rjmp	.+40     	; 0x1b4a <main+0x768>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b22:	6d 89       	ldd	r22, Y+21	; 0x15
    1b24:	7e 89       	ldd	r23, Y+22	; 0x16
    1b26:	8f 89       	ldd	r24, Y+23	; 0x17
    1b28:	98 8d       	ldd	r25, Y+24	; 0x18
    1b2a:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	9c 8b       	std	Y+20, r25	; 0x14
    1b34:	8b 8b       	std	Y+19, r24	; 0x13
    1b36:	8b 89       	ldd	r24, Y+19	; 0x13
    1b38:	9c 89       	ldd	r25, Y+20	; 0x14
    1b3a:	98 8b       	std	Y+16, r25	; 0x10
    1b3c:	8f 87       	std	Y+15, r24	; 0x0f
    1b3e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b40:	98 89       	ldd	r25, Y+16	; 0x10
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	f1 f7       	brne	.-4      	; 0x1b42 <main+0x760>
    1b46:	98 8b       	std	Y+16, r25	; 0x10
    1b48:	8f 87       	std	Y+15, r24	; 0x0f
		{
			_delay_ms(30);
			if(!DIO_u8GetPinValue(0, BRAKES))
    1b4a:	80 e0       	ldi	r24, 0x00	; 0
    1b4c:	63 e0       	ldi	r22, 0x03	; 3
    1b4e:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1b52:	88 23       	and	r24, r24
    1b54:	49 f4       	brne	.+18     	; 0x1b68 <main+0x786>
			{
				usart_putc(BRAKES_UART);
    1b56:	8e ef       	ldi	r24, 0xFE	; 254
    1b58:	0e 94 af 09 	call	0x135e	; 0x135e <usart_putc>
				while(!DIO_u8GetPinValue(0, BRAKES));
    1b5c:	80 e0       	ldi	r24, 0x00	; 0
    1b5e:	63 e0       	ldi	r22, 0x03	; 3
    1b60:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1b64:	88 23       	and	r24, r24
    1b66:	d1 f3       	breq	.-12     	; 0x1b5c <main+0x77a>
			}
		}

		/* Pedal unpressed */
		if(!DIO_u8GetPinValue(0, UNPRESS))
    1b68:	80 e0       	ldi	r24, 0x00	; 0
    1b6a:	64 e0       	ldi	r22, 0x04	; 4
    1b6c:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1b70:	88 23       	and	r24, r24
    1b72:	09 f0       	breq	.+2      	; 0x1b76 <main+0x794>
    1b74:	4f cc       	rjmp	.-1890   	; 0x1414 <main+0x32>
    1b76:	80 e0       	ldi	r24, 0x00	; 0
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	a0 ef       	ldi	r26, 0xF0	; 240
    1b7c:	b1 e4       	ldi	r27, 0x41	; 65
    1b7e:	8b 87       	std	Y+11, r24	; 0x0b
    1b80:	9c 87       	std	Y+12, r25	; 0x0c
    1b82:	ad 87       	std	Y+13, r26	; 0x0d
    1b84:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b86:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b88:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b8a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b8c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b8e:	20 e0       	ldi	r18, 0x00	; 0
    1b90:	30 e0       	ldi	r19, 0x00	; 0
    1b92:	4a ef       	ldi	r20, 0xFA	; 250
    1b94:	54 e4       	ldi	r21, 0x44	; 68
    1b96:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    1b9a:	dc 01       	movw	r26, r24
    1b9c:	cb 01       	movw	r24, r22
    1b9e:	8f 83       	std	Y+7, r24	; 0x07
    1ba0:	98 87       	std	Y+8, r25	; 0x08
    1ba2:	a9 87       	std	Y+9, r26	; 0x09
    1ba4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ba6:	6f 81       	ldd	r22, Y+7	; 0x07
    1ba8:	78 85       	ldd	r23, Y+8	; 0x08
    1baa:	89 85       	ldd	r24, Y+9	; 0x09
    1bac:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bae:	20 e0       	ldi	r18, 0x00	; 0
    1bb0:	30 e0       	ldi	r19, 0x00	; 0
    1bb2:	40 e8       	ldi	r20, 0x80	; 128
    1bb4:	5f e3       	ldi	r21, 0x3F	; 63
    1bb6:	0e 94 8f 03 	call	0x71e	; 0x71e <__ltsf2>
    1bba:	88 23       	and	r24, r24
    1bbc:	2c f4       	brge	.+10     	; 0x1bc8 <main+0x7e6>
		__ticks = 1;
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	9e 83       	std	Y+6, r25	; 0x06
    1bc4:	8d 83       	std	Y+5, r24	; 0x05
    1bc6:	3f c0       	rjmp	.+126    	; 0x1c46 <main+0x864>
	else if (__tmp > 65535)
    1bc8:	6f 81       	ldd	r22, Y+7	; 0x07
    1bca:	78 85       	ldd	r23, Y+8	; 0x08
    1bcc:	89 85       	ldd	r24, Y+9	; 0x09
    1bce:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bd0:	20 e0       	ldi	r18, 0x00	; 0
    1bd2:	3f ef       	ldi	r19, 0xFF	; 255
    1bd4:	4f e7       	ldi	r20, 0x7F	; 127
    1bd6:	57 e4       	ldi	r21, 0x47	; 71
    1bd8:	0e 94 2f 03 	call	0x65e	; 0x65e <__gtsf2>
    1bdc:	18 16       	cp	r1, r24
    1bde:	4c f5       	brge	.+82     	; 0x1c32 <main+0x850>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1be0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1be2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1be4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1be6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1be8:	20 e0       	ldi	r18, 0x00	; 0
    1bea:	30 e0       	ldi	r19, 0x00	; 0
    1bec:	40 e2       	ldi	r20, 0x20	; 32
    1bee:	51 e4       	ldi	r21, 0x41	; 65
    1bf0:	0e 94 35 02 	call	0x46a	; 0x46a <__mulsf3>
    1bf4:	dc 01       	movw	r26, r24
    1bf6:	cb 01       	movw	r24, r22
    1bf8:	bc 01       	movw	r22, r24
    1bfa:	cd 01       	movw	r24, r26
    1bfc:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    1c00:	dc 01       	movw	r26, r24
    1c02:	cb 01       	movw	r24, r22
    1c04:	9e 83       	std	Y+6, r25	; 0x06
    1c06:	8d 83       	std	Y+5, r24	; 0x05
    1c08:	0f c0       	rjmp	.+30     	; 0x1c28 <main+0x846>
    1c0a:	88 ec       	ldi	r24, 0xC8	; 200
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	9c 83       	std	Y+4, r25	; 0x04
    1c10:	8b 83       	std	Y+3, r24	; 0x03
    1c12:	8b 81       	ldd	r24, Y+3	; 0x03
    1c14:	9c 81       	ldd	r25, Y+4	; 0x04
    1c16:	01 97       	sbiw	r24, 0x01	; 1
    1c18:	f1 f7       	brne	.-4      	; 0x1c16 <main+0x834>
    1c1a:	9c 83       	std	Y+4, r25	; 0x04
    1c1c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c1e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c20:	9e 81       	ldd	r25, Y+6	; 0x06
    1c22:	01 97       	sbiw	r24, 0x01	; 1
    1c24:	9e 83       	std	Y+6, r25	; 0x06
    1c26:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c28:	8d 81       	ldd	r24, Y+5	; 0x05
    1c2a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c2c:	00 97       	sbiw	r24, 0x00	; 0
    1c2e:	69 f7       	brne	.-38     	; 0x1c0a <main+0x828>
    1c30:	14 c0       	rjmp	.+40     	; 0x1c5a <main+0x878>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c32:	6f 81       	ldd	r22, Y+7	; 0x07
    1c34:	78 85       	ldd	r23, Y+8	; 0x08
    1c36:	89 85       	ldd	r24, Y+9	; 0x09
    1c38:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c3a:	0e 94 5f 00 	call	0xbe	; 0xbe <__fixunssfsi>
    1c3e:	dc 01       	movw	r26, r24
    1c40:	cb 01       	movw	r24, r22
    1c42:	9e 83       	std	Y+6, r25	; 0x06
    1c44:	8d 83       	std	Y+5, r24	; 0x05
    1c46:	8d 81       	ldd	r24, Y+5	; 0x05
    1c48:	9e 81       	ldd	r25, Y+6	; 0x06
    1c4a:	9a 83       	std	Y+2, r25	; 0x02
    1c4c:	89 83       	std	Y+1, r24	; 0x01
    1c4e:	89 81       	ldd	r24, Y+1	; 0x01
    1c50:	9a 81       	ldd	r25, Y+2	; 0x02
    1c52:	01 97       	sbiw	r24, 0x01	; 1
    1c54:	f1 f7       	brne	.-4      	; 0x1c52 <main+0x870>
    1c56:	9a 83       	std	Y+2, r25	; 0x02
    1c58:	89 83       	std	Y+1, r24	; 0x01
		{
			_delay_ms(30);
			if(!DIO_u8GetPinValue(0, UNPRESS))
    1c5a:	80 e0       	ldi	r24, 0x00	; 0
    1c5c:	64 e0       	ldi	r22, 0x04	; 4
    1c5e:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1c62:	88 23       	and	r24, r24
    1c64:	09 f0       	breq	.+2      	; 0x1c68 <main+0x886>
    1c66:	d6 cb       	rjmp	.-2132   	; 0x1414 <main+0x32>
			{
				usart_putc(UNPRESS_UART);
    1c68:	8d ef       	ldi	r24, 0xFD	; 253
    1c6a:	0e 94 af 09 	call	0x135e	; 0x135e <usart_putc>
				while(!DIO_u8GetPinValue(0, UNPRESS));
    1c6e:	80 e0       	ldi	r24, 0x00	; 0
    1c70:	64 e0       	ldi	r22, 0x04	; 4
    1c72:	0e 94 3b 08 	call	0x1076	; 0x1076 <DIO_u8GetPinValue>
    1c76:	88 23       	and	r24, r24
    1c78:	d1 f3       	breq	.-12     	; 0x1c6e <main+0x88c>
    1c7a:	cc cb       	rjmp	.-2152   	; 0x1414 <main+0x32>

00001c7c <System_init>:
}


/* System Initialization Function */
void System_init(void)
{
    1c7c:	df 93       	push	r29
    1c7e:	cf 93       	push	r28
    1c80:	cd b7       	in	r28, 0x3d	; 61
    1c82:	de b7       	in	r29, 0x3e	; 62
	DIO_VidSetPinDirection(0, PIN0, INPUT);	/* PINA0 Gas Pedal Button */
    1c84:	80 e0       	ldi	r24, 0x00	; 0
    1c86:	60 e0       	ldi	r22, 0x00	; 0
    1c88:	40 e0       	ldi	r20, 0x00	; 0
    1c8a:	0e 94 b9 05 	call	0xb72	; 0xb72 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(0, PIN1, INPUT); /* PINA1 Increase Speed Button */
    1c8e:	80 e0       	ldi	r24, 0x00	; 0
    1c90:	61 e0       	ldi	r22, 0x01	; 1
    1c92:	40 e0       	ldi	r20, 0x00	; 0
    1c94:	0e 94 b9 05 	call	0xb72	; 0xb72 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(0, PIN2, INPUT); /* PINA2 Decrease Speed Button */
    1c98:	80 e0       	ldi	r24, 0x00	; 0
    1c9a:	62 e0       	ldi	r22, 0x02	; 2
    1c9c:	40 e0       	ldi	r20, 0x00	; 0
    1c9e:	0e 94 b9 05 	call	0xb72	; 0xb72 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(0, PIN3, INPUT); /* PINA3 Brakes Pedal Button */
    1ca2:	80 e0       	ldi	r24, 0x00	; 0
    1ca4:	63 e0       	ldi	r22, 0x03	; 3
    1ca6:	40 e0       	ldi	r20, 0x00	; 0
    1ca8:	0e 94 b9 05 	call	0xb72	; 0xb72 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(0, PIN4, INPUT); /* PINA4 NO Pedal Pressed Button */
    1cac:	80 e0       	ldi	r24, 0x00	; 0
    1cae:	64 e0       	ldi	r22, 0x04	; 4
    1cb0:	40 e0       	ldi	r20, 0x00	; 0
    1cb2:	0e 94 b9 05 	call	0xb72	; 0xb72 <DIO_VidSetPinDirection>

	/* Enable internal Pull-up */
	DIO_VidSetPinValue(0, PIN0, HIGH);
    1cb6:	80 e0       	ldi	r24, 0x00	; 0
    1cb8:	60 e0       	ldi	r22, 0x00	; 0
    1cba:	41 e0       	ldi	r20, 0x01	; 1
    1cbc:	0e 94 b9 06 	call	0xd72	; 0xd72 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(0, PIN1, HIGH);
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	61 e0       	ldi	r22, 0x01	; 1
    1cc4:	41 e0       	ldi	r20, 0x01	; 1
    1cc6:	0e 94 b9 06 	call	0xd72	; 0xd72 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(0, PIN2, HIGH);
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	62 e0       	ldi	r22, 0x02	; 2
    1cce:	41 e0       	ldi	r20, 0x01	; 1
    1cd0:	0e 94 b9 06 	call	0xd72	; 0xd72 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(0, PIN3, HIGH);
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	63 e0       	ldi	r22, 0x03	; 3
    1cd8:	41 e0       	ldi	r20, 0x01	; 1
    1cda:	0e 94 b9 06 	call	0xd72	; 0xd72 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(0, PIN4, HIGH);
    1cde:	80 e0       	ldi	r24, 0x00	; 0
    1ce0:	64 e0       	ldi	r22, 0x04	; 4
    1ce2:	41 e0       	ldi	r20, 0x01	; 1
    1ce4:	0e 94 b9 06 	call	0xd72	; 0xd72 <DIO_VidSetPinValue>

	usart_init(9600); /* USART Initialization */
    1ce8:	80 e8       	ldi	r24, 0x80	; 128
    1cea:	95 e2       	ldi	r25, 0x25	; 37
    1cec:	0e 94 31 09 	call	0x1262	; 0x1262 <usart_init>
	usart_puts("System Started...\r\n");
    1cf0:	80 e0       	ldi	r24, 0x00	; 0
    1cf2:	91 e0       	ldi	r25, 0x01	; 1
    1cf4:	0e 94 c6 09 	call	0x138c	; 0x138c <usart_puts>
}
    1cf8:	cf 91       	pop	r28
    1cfa:	df 91       	pop	r29
    1cfc:	08 95       	ret

00001cfe <__udivmodsi4>:
    1cfe:	a1 e2       	ldi	r26, 0x21	; 33
    1d00:	1a 2e       	mov	r1, r26
    1d02:	aa 1b       	sub	r26, r26
    1d04:	bb 1b       	sub	r27, r27
    1d06:	fd 01       	movw	r30, r26
    1d08:	0d c0       	rjmp	.+26     	; 0x1d24 <__udivmodsi4_ep>

00001d0a <__udivmodsi4_loop>:
    1d0a:	aa 1f       	adc	r26, r26
    1d0c:	bb 1f       	adc	r27, r27
    1d0e:	ee 1f       	adc	r30, r30
    1d10:	ff 1f       	adc	r31, r31
    1d12:	a2 17       	cp	r26, r18
    1d14:	b3 07       	cpc	r27, r19
    1d16:	e4 07       	cpc	r30, r20
    1d18:	f5 07       	cpc	r31, r21
    1d1a:	20 f0       	brcs	.+8      	; 0x1d24 <__udivmodsi4_ep>
    1d1c:	a2 1b       	sub	r26, r18
    1d1e:	b3 0b       	sbc	r27, r19
    1d20:	e4 0b       	sbc	r30, r20
    1d22:	f5 0b       	sbc	r31, r21

00001d24 <__udivmodsi4_ep>:
    1d24:	66 1f       	adc	r22, r22
    1d26:	77 1f       	adc	r23, r23
    1d28:	88 1f       	adc	r24, r24
    1d2a:	99 1f       	adc	r25, r25
    1d2c:	1a 94       	dec	r1
    1d2e:	69 f7       	brne	.-38     	; 0x1d0a <__udivmodsi4_loop>
    1d30:	60 95       	com	r22
    1d32:	70 95       	com	r23
    1d34:	80 95       	com	r24
    1d36:	90 95       	com	r25
    1d38:	9b 01       	movw	r18, r22
    1d3a:	ac 01       	movw	r20, r24
    1d3c:	bd 01       	movw	r22, r26
    1d3e:	cf 01       	movw	r24, r30
    1d40:	08 95       	ret

00001d42 <__prologue_saves__>:
    1d42:	2f 92       	push	r2
    1d44:	3f 92       	push	r3
    1d46:	4f 92       	push	r4
    1d48:	5f 92       	push	r5
    1d4a:	6f 92       	push	r6
    1d4c:	7f 92       	push	r7
    1d4e:	8f 92       	push	r8
    1d50:	9f 92       	push	r9
    1d52:	af 92       	push	r10
    1d54:	bf 92       	push	r11
    1d56:	cf 92       	push	r12
    1d58:	df 92       	push	r13
    1d5a:	ef 92       	push	r14
    1d5c:	ff 92       	push	r15
    1d5e:	0f 93       	push	r16
    1d60:	1f 93       	push	r17
    1d62:	cf 93       	push	r28
    1d64:	df 93       	push	r29
    1d66:	cd b7       	in	r28, 0x3d	; 61
    1d68:	de b7       	in	r29, 0x3e	; 62
    1d6a:	ca 1b       	sub	r28, r26
    1d6c:	db 0b       	sbc	r29, r27
    1d6e:	0f b6       	in	r0, 0x3f	; 63
    1d70:	f8 94       	cli
    1d72:	de bf       	out	0x3e, r29	; 62
    1d74:	0f be       	out	0x3f, r0	; 63
    1d76:	cd bf       	out	0x3d, r28	; 61
    1d78:	09 94       	ijmp

00001d7a <__epilogue_restores__>:
    1d7a:	2a 88       	ldd	r2, Y+18	; 0x12
    1d7c:	39 88       	ldd	r3, Y+17	; 0x11
    1d7e:	48 88       	ldd	r4, Y+16	; 0x10
    1d80:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d82:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d84:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d86:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d88:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d8a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d8c:	b9 84       	ldd	r11, Y+9	; 0x09
    1d8e:	c8 84       	ldd	r12, Y+8	; 0x08
    1d90:	df 80       	ldd	r13, Y+7	; 0x07
    1d92:	ee 80       	ldd	r14, Y+6	; 0x06
    1d94:	fd 80       	ldd	r15, Y+5	; 0x05
    1d96:	0c 81       	ldd	r16, Y+4	; 0x04
    1d98:	1b 81       	ldd	r17, Y+3	; 0x03
    1d9a:	aa 81       	ldd	r26, Y+2	; 0x02
    1d9c:	b9 81       	ldd	r27, Y+1	; 0x01
    1d9e:	ce 0f       	add	r28, r30
    1da0:	d1 1d       	adc	r29, r1
    1da2:	0f b6       	in	r0, 0x3f	; 63
    1da4:	f8 94       	cli
    1da6:	de bf       	out	0x3e, r29	; 62
    1da8:	0f be       	out	0x3f, r0	; 63
    1daa:	cd bf       	out	0x3d, r28	; 61
    1dac:	ed 01       	movw	r28, r26
    1dae:	08 95       	ret

00001db0 <_exit>:
    1db0:	f8 94       	cli

00001db2 <__stop_program>:
    1db2:	ff cf       	rjmp	.-2      	; 0x1db2 <__stop_program>
